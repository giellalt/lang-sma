# Distributed under the terms of the GNU General Public License version 2 
# or any later version.

# =================================================================== #
# =================================================================== #
#            S O U T H   S Á M I   D I S A M B I G U A T O R          #
# =================================================================== #
# =================================================================== #

            # =========================================== #
            #            Short table of contents          #
            # =========================================== #

            # Delimiters
            # Tags and sets
	        # Mapping rules
            # Disambiguation rules
              # One-cohort disambiguation - cycle 0
              # Local disambiguation - cycles 1 and 2
              # Cycle 2: Other local disambiguation         
              # Cycle 3: Global disambiguation 
	          # Cycle 4: Syntactic disambiguation 
	          # Cycle 5: Post-syntactic morphological disambiguation


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>";


# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); 
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

# Tags declared as single-membered LISTs 
# ======================================

LIST N = N ;
LIST Sg = Sg ;
LIST Pl = Pl ;
LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Ine = Ine ;
LIST Ela = Ela ;
LIST Ill = Ill ;
LIST Com = Com ;
LIST Ess = Ess ;

LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;

LIST PxDu1 = PxDu1 ;
LIST PxDu2 = PxDu2 ;
LIST PxDu3 = PxDu3 ;

LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;

LIST V = V ;
LIST Prs = Prs ;
LIST Prt = Prt ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Du1 = Du1 ;
LIST Du2 = Du2 ;
LIST Du3 = Du3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;

LIST Inf = Inf ;
LIST Neg = Neg ;
LIST ConNeg = ConNeg ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;
LIST Ger = Ger ;

LIST Ind = Ind ;

LIST Imp = Imp ;
LIST ImpII = ImpII ;

LIST Pot = Pot ;
LIST Cond = Cond ;

LIST Opt = Opt ;

LIST Actor = Actor ;
LIST Clt = Clt ;
LIST A = A ;

LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;

LIST Pron = Pron ;
LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Adp = Adp ;
LIST Po = Po ;
LIST Adv = Adv ;
LIST Interj = Interj ;
LIST Num = Num ;

LIST CS = CS ;
LIST CC = CC ;
LIST Pcle = Pcle ;
LIST CLB = CLB ;
LIST PUNCT = PUNCT ;
LIST LEFT = LEFT ;
LIST RIGHT = RIGHT ;



# Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ; 
LIST @+FMAINV = @+FMAINV ; 
LIST @-FAUXV = @-FAUXV ;
LIST @-FMAINV = @-FMAINV ; 
LIST @-FSUBJ = @-FSUBJ ;

SET FMAINV = @-FMAINV OR @+FMAINV ;

LIST @ADV-A = @ADV-A ; 
LIST @ADV-ADV = @ADV-ADV ; 
LIST @ADVL = @ADVL ;

LIST @AN> = @AN> ; 
LIST @ActioN> = @ActioN> ; 
LIST @CC = @CC ; 
LIST @CMPND = @CMPND ; 
LIST @CS = @CS ;
LIST @DN> = @DN> ; 
LIST @GA> = @GA> ; 
LIST @GN> = @GN> ; 
LIST @GP< = @GP< ; 
LIST @GP> = @GP> ;
LIST @HNOUN = @HNOUN ; 
LIST @INTERJ = @INTERJ ; 
LIST @MEASURE = @MEASURE ;
LIST @NNum> = @NNum>; 
LIST @NumN< = @NumN<;
LIST @NPron< = @NPron< ;
LIST @NQ< = @NQ< ; 
LIST @NUM-PRON = @NUM-PRON ; 
LIST @OBJ = @OBJ ;
LIST @OPRED = @OPRED ; 
LIST @PCLE = @PCLE ; 
LIST @PCLE-COMPL = @PCLE-COMPL ; 
LIST @PROP> = @PROP> ;
LIST @PrcN> = @PrcN> ; 
LIST @PronN< = @PronN< ; 
LIST @PronN> = @PronN> ; 
LIST @QN< = @QN< ;
LIST @QN> = @QN> ; 
LIST @SPRED = @SPRED ; 
LIST @SUBJ = @SUBJ ; 
LIST @SUBJ-QH = @SUBJ-QH ;


LIST @TITLE = @TITLE ; 
LIST @VOC = @VOC ; 
LIST @X = @X ;

#SETS

LIST WORD = N A Num Pron A Adv Pcle Interj V CC CS Adp ;
LIST NOT-ADV-INT-PCLE = N A Num Pron A V CC CS Adp ;
LIST INFV = "aelkedh" "båetedh" "edtjedh" "galkedh" "maehtedh" "provhkedh" "sjïdtedh" ; 
# These are often followed by an infitive. To the set belong also some verbs which are not in the lex: tjoeveridh tjoeredh

SET PRE-NP-HEAD = (Prop Attr) OR (Prop @>N) OR (A Attr) OR (ABBR Attr) OR (Pron Pers Gen) OR (N Gen) OR Num OR (Cmpnd) OR CC OR (Pron Dem) OR (Pron Refl Gen) OR (Pron Indef) OR (PrfPrc @>N) OR (PrfPrc @>N) OR (PrsPrc) OR (A Ord) ;
         # The strict version of items that can only be premodifiers, not parts of the predicate - copied from sme-dis.rle
         
SET NPNH = WORD - PRE-NP-HEAD OR (ABBR) ;       # NPNH  = "NOT-PRE-NP-HEAD" 



SECTION

# Cycle 0

REMOVE ("Da" N) IF (0 ("dïhte"));


# Verbs

IFF:IsItConNeg ConNeg (*-1 Neg BARRIER ConNeg); 

#REMOVE:NotConNeg ConNeg IF (NEGATE *-1 Neg); 
#SELECT:ConNeg ConNeg IF (*-1 Neg BARRIER Ind) ; 
# Why does this require the two next???

#REMOVE:NotImp Imp IF (*-1 Neg BARRIER Ind)(0 ConNeg);
#REMOVE:NotInd Ind IF (*-1 Neg BARRIER Ind)(0 ConNeg);

REMOVE:NotImpIfWord Imp IF (*-1 NOT-ADV-INT-PCLE BARRIER CS OR CC);

SELECT:Pl3WhenPlSubj Pl3 IF (1 (N Pl Nom))(0 ("lea" V));

SELECT (V Inf) IF (*-1 INFV) ; 
# Should be BARRIER V OR CS OR CC # It doesn´t work...
	# Manne båatam sagke buerebe datneste jieledh, Karijuse.

SELECT:VSg2IfPersSg2 (V Sg2) (*-1 (Pers Sg2) BARRIER V);

SELECT:PrfPrcIfLea PrfPrc (*-1 ("lea") BARRIER V);

# Nomen
SELECT:GenToAdp Gen IF (1 Adp);
REMOVE:NotNomToAdp Nom IF (1 Adp);

SELECT:GenIfLeaNom Gen (1 ("lea" V) LINK 0 Pl3 OR Sg3)(*1 (N Nom) BARRIER NPNH) ; 
	# Dan lin baenieh njaelmesne.

# Dem
SELECT:DemGenIfNGen (Dem Pl Gen)(*1 (N Pl Gen) BARRIER NPNH);
	# Klaasen tjirrh olkese goevli doj veelkes baeniej gåajkoe, ...

# CC and CS or Adv
REMOVE:GoNotCs CS (-1 Neg)(0 ("goh")); 

REMOVE:NotNomIfCs (N Nom) (0 CS)(1 (N Nom)) ;
	# Guktie vielle Baktuse, giehtelh maa!

	
REMOVE:CsIfNotFuncword Pcle (NEGATE *-1 NOT-ADV-INT-PCLE)(0 CS) ;
	# Jaa, jis damth seekere.....	

REMOVE:NotCsIfCc CS (-1 CC OR ("mij" Nom))(0 Adv) ;
	# Jih dellie jeehti...

REMOVE:NotCsIfBOS CS (NEGATE -1 WORD)(0 Adv) ;

# Interj
SELECT:InterjIfInterj Interj (0 ("ho"))(1 ("ho"));


	
		
	
