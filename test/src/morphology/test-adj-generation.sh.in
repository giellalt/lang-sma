#!/bin/bash

# Dette skriptet tester at nesten alle lemmaene i
# $GTHOME/langs/sma/src/morphology/stems/adjectives.lexc kan genereres.
# De som ikke kan genereres, kopieres til missingAdjLemmas.txt

###### Variables: #######
sourcefile=${srcdir}/../../../src/morphology/stems/adjectives.lexc
generatorfile=./../../../src/generator-gt-norm
resultfile=missingAdjLemmas

# Check that the source file exists:
if [ ! -f "$sourcefile" ]; then
	echo Source file not found: $sourcefile
	exit 1
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if test -z "$fsttype"; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

###### Extraction: #######
### Regular adjectives:
grep ";" $sourcefile | grep -v "^\!" | sed 's/\([^%]\)!.*/\1/' \
	| egrep -v "(PRED|CASE| MES|EVTEBE)" | tr ":+" " " | cut -d " " -f1 \
	| tr -d "#" | sort -u | grep -v '^$' > adjs.tmp.txt
### Adjectives with no attr form, ie only pred form:
grep ";" $sourcefile | grep -v "^\!" | sed 's/\([^%]\)!.*/\1/' \
	| egrep "(PRED|CASE)" | tr ":+" " " | cut -d " " -f1 | tr -d "#" \
	| sort -u > predadjs.txt
### Adjectives with only comparative forms:
grep ";" $sourcefile | grep -v "^\!" | sed 's/\([^%]\)!.*/\1/' \
	| grep "EVTEBE" | tr ":+" " " | cut -d " " -f1 | tr -d "#" \
	| sort -u > compladjs.txt
### Adjectives with only superlative forms:
grep ";" $sourcefile | grep -v "^\!" | sed 's/\([^%]\)!.*/\1/' \
	| grep " MES" | tr ":+" " " | cut -d " " -f1 | tr -d "#" \
	| sort -u > superladjs.txt

###### Start testing: #######
transducer_found=0
Fail=0

for f in $fsttype; do
	if [ $f == "xfst" ]; then
		lookuptool="@LOOKUP@ -q -flags mbTT"
		suffix="xfst"
	elif [ $f == "hfst" ]; then
		lookuptool="@HFST_OPTIMIZED_LOOKUP@ -q"
		suffix="hfstol"
	else
	    Fail=1
		echo "Unknown fst type!"
	    echo "$f - FAIL"
	    continue
	fi
	if [ -f "$generatorfile.$suffix" ]; then
		let "transducer_found += 1"

#### First we try to generate the regular adjectives:
		sed 's/$/+A+Attr/' adjs.tmp.txt | $lookuptool $generatorfile.$suffix \
			| cut -f2 | grep -v "A+" | grep -v "^$" | sort -u > analadjs.$f.txt 

#### Then we try to generate the predicate-only adjectives:
		sed 's/$/+A+Sg+Nom/' predadjs.txt \
			| $lookuptool $generatorfile.$suffix | cut -f2 \
			| grep -v "A+" | grep -v "^$" | sort -u >> analadjs.$f.txt 

#### Then we try to generate the predicate-only adjectives:
		sed 's/$/+A+Superl+Sg+Nom/' superladjs.txt \
			| $lookuptool $generatorfile.$suffix | cut -f2 \
			| grep -v "A+" | grep -v "^$" | sort -u >> analadjs.$f.txt 

#### Then we try to generate the predicate-only adjectives:
		sed 's/$/+A+Comp+Sg+Nom/' compladjs.txt \
			| $lookuptool $generatorfile.$suffix | cut -f2 \
			| grep -v "A+" | grep -v "^$" | sort -u >> analadjs.$f.txt 

		cat predadjs.txt superladjs.txt compladjs.txt >> adjs.tmp.txt
		sort -u adjs.tmp.txt | grep -v '^$' > adjs.txt
		sort -u -o analadjs.$f.txt analadjs.$f.txt 
		comm -23 adjs.txt analadjs.$f.txt > $resultfile.$f.txt

		# if at least one word is found, the test failed, and the list of failed
		# lemmas is opened in SubEthaEdit:
		if [ -s $resultfile.$f.txt ]; then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $resultfile.$f.txt
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# Delete temporary files:
rm -f *adjs

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo No transducer found
    exit 1
fi
