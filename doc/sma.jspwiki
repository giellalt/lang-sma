!!!Free and Open source Southern Sami analyser giella-sma

;Authors: Divvun and Giellatekno teams, Aajege, community members
;Software version: 2012
;Documentation license: GNU GFDL
;SVN Revision: $Revision: 68217 $
;SVN Date: $Date: 2013-01-16 11:31:33 +0200 (Wed, 16 Jan 2013) $

!!!giella-sma

This is free and open source Southern Sami morphology.

              !!!South Sámi morphological analyser


 !!!Multichar_Symbols definitions

 !!Tags for POS (Part-Of-Speech, Word class)
 * __+N__ = Noun
 * __+A__ = Adjective
 * __+Adv__ = Adverb
 * __+V__ = Verb
 * __+Pron__ = Pronomen
 * __+CS__ = Subjunction
 * __+CC__ = Conjunction
 * __+Po__ = Postposition
 * __+Pr__ = Preposition
 * __+Interj__ = Interjection
 * __+Pcle__ = Particle
 * __+Num__ = Numerals
 * __+TODO__ = Code for items that have not been modeled yet

 * +Logo    
 * +Subqst     for adverbs


 !Tags for sub-POS
!!Proper nouns
 * __+Prop     __ =

!!Pronoun subtypes
 * __+Pers    __ = Personal
 * __+Dem     __ = Demonstrative
 * __+Interr  __ = Interrogative
 * __+Refl    __ = Reflexive
 * __+Recipr  __ = Reciprocal
 * __+Rel     __ = Relative
 * __+Indef   __ = Indefinite
 * __+Coll    __ = Collective numeral
 * __+Arab    __ = Arabic numeral
 * __+Rom    __ =

!Error (non-standard language) tags

|| Usage tags || Explanation
 | __+Err/Orth__ | Substandard, unormert form av et ord
 | __+Err/Attr__ | Substandard, unormert Attr-form av et ord
 | __+Err/Lex__ | lemma med dens ordformer er utenfor normen.
                No normative lemma, it's grammatically correct.
 | __+Err/Der__ | Errors in derivations
 | __+Err/Spellrelax__ | Used to tag spellrelaxed typos (tag is inserted via flag diacritics)

!Usage tags

 | __+Use/Marg__ | Marginal, correcte eksisterende former,men
                som er sjeldne. vi kan fjerne disse ordene
                f.eks fra speller, fordi de er så sjeldne og
                lite i bruke at de lemma som ligger nært kan
                bli forvekslet.
 | __+Use/-Spell__ | Excluded from speller
 | __+Use/-PLX__ | Excluded in PLX speller
 | __+Use/SpellNoSugg__ | Recognized but not suggested in speller
 | __+Use/Circ__ | Circular path
 | __+Use/CircN__ | Circular number path?
 | __+Use/Ped__ | Remove from pedagogical speller
 | __+Use/NG__ | Do not generate \\ for isme-ped.fst and apertium
 | __+Use/MT__ | Generate for apertium only
 | __+Use/NotDNorm__ | For (spellings of) words that do not follow the orthographic principles of sma. Divvun suggest that this shouldn't be normative, even thugh they are decided upon by GG. Included in speller.
 | __+Use/DNorm__ | For words without formal normalization.
                Divvun suggest that this should be normative. Included in speller.
 | __+Use/PMatch__ | Do ''only'' include in fst's for hfst-pmatch
 | __+Use/-PMatch__ | Do not include in fst's made for hfst-pmatch
 | __+Use/GC__ | Only retained in the gramchecker analyser

 !!Dialect tags:

 | +Dial/-S | Not in the South ! se på disse i forhold til smj, som
            har +Dial/N for denne.
 | +Dial/-N | Not in the North ! se på disse i forhold til smj, som
            har +Dial/s for denne.
 | +Dial/-NOR | Words not in Norway
 | +Dial/-SW | Words not in Sweden
 | +Dial/SH | Short forms
 | +Dial/L | Long forms






!!Normative/prescriptive compounding tags
(to govern compound behaviour for the speller, ie what a compound SHOULD BE)

!The first part of the component may be ...
 | +CmpN/Sg | Sg
 | +CmpN/SgN | SgNominative
 | +CmpN/SgG | SgGenitive
 | +CmpN/PlG | PlGenitive


!This part of the component can ...
 * +CmpNP/All - ... be in all positions, __default__, this tag does not have to be written
 * +CmpNP/First - ... only be first part in a compound or alone
 * +CmpNP/Pref - ... only __first__ part in a compound, NEVER alone
 * +CmpNP/Last - ... only be last part in a compound or alone
 * +CmpNP/Suff - ... only __last__ part in a compound, NEVER alone
 * +CmpNP/None - ... not take part in compounds
 * +CmpNP/Only - ... only be part of a compound, i.e. can never
                be used alone, but can appear in any position

!The second part of the compound requires:
 | +CmpN/SgLeft | Sg to the left
 | +CmpN/SgNomLeft | etc.
 | +CmpN/SgGenLeft | "
 | +CmpN/PlGenLeft | "

 | +Cmp/XForm | Alle Cmp som ikke har en klar klassifisering
 | +Cmp/AttrH | Alle Cmp som har en attr-h



!!Descriptive compounding tags
Tags for compound analysis - this is what a compound actually is. We use this
to research compounding patterns in the corpus.

 ; +Cmp/Sg       : Compounding using an unspecified singular stem
 ; +Cmp/SgNom    : Compounding using nominative singular
 ; +Cmp/SgGen    : Compounding using genitive singular
 ; +Cmp/PlGen    : Compounding using genitive plural
 ; +Cmp/Attr     : Compounding using attribute form
 ; +Cmp/eh : Compound stem in __–eh__, as in ''gaameh-gåaroje'',
            from ''gaamege''
 ; +Cmp/ege : Compound stem in __–ege__, as in ''gaamege-gåaroje''
 ; +Cmp/FinEDel : Deletion of final __e__, as in ''voelem-gaaroeh'',
            from ''voeleme''
 ; +Cmp/ShH : Compounding using a short stem + __h__: ''–biejjh–''
            (from ''biejjie''), cf ''reakedsbiejjhvadtese''
 ; +Cmp/Sh : Compounding using a short stem: ''–biejj–''
            (from ''biejjie'')
 ; +Cmp/SplitR : This is a split compound with the other part to the
            right: \\ "Arbeids- og inkluderingsdepartementet" =>
            ''Arbeids–'' = __+Cmp/SplitR__
 ; +Cmp/SplitL : This is a split compound with the other part to the
            left, this is the oposite of the previous case
 ; +Cmp : Dynamic compound - this tag should ''always'' be
            part of a dynamic compound. It is important for
            Apertium and the speller (to give extra weights to
            compounds, and useful in other cases as well.

!!Tags for Inflection

!Tags for Case and Number Inflection
!!Case and number
 * __+Sg    __ = Singular
 * __+Pl    __ = Plural
 * __+Du    __ = Dual

 * __+Nom   __ = Nominative
 * __+Acc   __ = Ackusative
 * __+Gen   __ = Genitive
 * __+Ine   __ = Inesive
 * __+Ela   __ = Elative
 * __+Ill   __= Illative
 * __+Com   __= Comitative
 * __+Ess   __ = Essive


!!Px
 * __  +PxSg1                            __ =  Possessives Singular
 * __  +PxSg2                            __ =  Possessives Singular
 * __  +PxSg3                            __ =  Possessives Singular
 * __  +PxDu1                            __ =  Possessives Dual
 * __  +PxDu2                            __ =  Possessives Dual
 * __  +PxDu3                            __ =  Possessives Dual
 * __  +PxPl1                            __ =  Possessives Plural
 * __  +PxPl2                            __ =  Possessives Plural
 * __  +PxPl3                            __ =  Possessives Plural

 | __+Prs__ | Presens
 | __+Prt__ | Preteritum

 | __+Sg1__ | Singular, 1.person
 | __+Sg2__ | Singular, 2.person
 | __+Sg3__ | Singular, 3.person
 | __+Du1__ | Dual    , 1.person
 | __+Du2__ | Dual    , 2.person
 | __+Du3__ | Dual    , 3.person
 | __+Pl1__ | Plural  , 1.person
 | __+Pl2__ | Plural  , 2.person
 | __+Pl3__ | Plural  , 3.person

 | +Neg | negation verb ij
 | +ConNeg | main verb complement to Neg, form identical to Imp
 | +VAbess | Verb Abessive

 ; +Inf : Infinitive and participles
 ; +PrfPrc :  Infinitive and participles
 ; +PrsPrc : Infinitive and participles
 ; +Ger : Gerundium
 ; +VGen : Verbgenitive

 ; +Ind : Indicative
 ; +Imprt : Imperative
 ; +ImprtII : Imperative, for Neg: ollem ollh ...
 ; +Cond : Kondisjonalis, for one form: lidtjie.
            To be looked at.+ lidtjim, + lidtjih
 ; +Act : '' -eme'', could be changed to {{+Actio}}

!Tags for adjectives

 ; +Comp +Superl : Comparation
 ; +Attr : Attribute form
 ; +Ord : Ordinal number

!!Other tags
 ; +ABBR : Abbreviation
 ; +Symbol : Symbols in the text stream, like £, €, ©
 ; +ACR : Acronym
 ; +TV : Transitive verb
 ; +IV : Intansitive verb
 ; +Gram/TAbbr : Transitive abbreviation (it needs an argument)
 ; +Gram/TNumAbbr : Transitive abbreviation if the following
            constituent is numeric
 ; +Gram/TIAbbr : Both transitive and intransitive abbreviation
 ; +Gram/IAbbr : Intransitive abbreviation (it takes no argument)
 ; +Multi : Multiword phrase tag ?
 ; +Guess : for the name guesser ?
 ; +LOAN : ad hoc tag for development purposes ?
 ; +Cmp/Hyph : A tag to indicate that a hyphen was used when
            compounding?

!Tags for testing the frequency of certain phenomenas in our corpora

 ; +Test/LysI : form uses i
 ; +Test/MørkI : form uses ï
 ; +Test/HK : form uses consonant cluster hk
 ; +Test/GK : form uses consonant cluster gk
 ; +Test/JK : form uses consonant cluster jk
 ; +Uml : A tag to indicate realised or potential Umlaut
 ; +NoUml : A tag to indicate the lack of realised or potential Umlaut

!Tags for punctuation

 ; +CLB : XXX These should be documented better
 ; +PUNCT : XXX These should be documented better
 ; +LEFT : XXX These should be documented better
 ; +RIGHT : XXX These should be documented better


!Different focus particles

 ; +Foc : XXX Document better = Forsterkende particle?
 ; +Foc/ge : XXX Document better = Forsterkende particle
 ; +Foc/gan : XXX Document better = Forsterkende particle
 ; +Foc/gih : XXX Document better = Forsterkende particle
 ; +Foc/gænnah : XXX Document better = Forsterkende particle


!!Semantic tags to help disambiguation & synt. analysis:

 *  +Sem/Act                   
 *  +Sem/Act                   
 *  +Sem/Act_Fruit             
 *  +Sem/Act_Plc               
 *  +Sem/Act_Route             
 *  +Sem/Act_Tool-it           
 *  +Sem/Amount                
 *  +Sem/Ani                   
 *  +Sem/Ani-fish              
 *  +Sem/Ani_Body-abstr_Hum    
 *  +Sem/Ani_Build-part        
 *  +Sem/Ani_Group             
 *  +Sem/Ani_Group_Hum         
 *  +Sem/Ani_Hum               
 *  +Sem/Ani_Obj-el			
 *  +Sem/Ani_Plc_Txt           
 *  +Sem/Ani_Time              
 *  +Sem/Ani_Veh               
 *  +Sem/Aniprod               
 *  +Sem/Aniprod_Hum           
 *  +Sem/Aniprod_Plc_Route     
 *  +Sem/Body                  
 *  +Sem/Body-abstr            
 *  +Sem/Body_Food             
 *  +Sem/Body_Hum              
 *  +Sem/Body_Mat              
 *  +Sem/Body_Measr            
 *  +Sem/Body_Obj_Tool-catch   
 *  +Sem/Body_Plc              
 *  +Sem/Body_Plc-elevate      
 *  +Sem/Build                 
 *  +Sem/Build-part            
 *  +Sem/Build-part_Ctain_Obj  
 *  +Sem/Build_Clth-part       
 *  +Sem/Build_Edu_Org         
 *  +Sem/Build_Org             
 *  +Sem/Cat                   
 *  +Sem/Cat_Group_Hum_Plc     
 *  +Sem/Clth                  
 *  +Sem/Clth-jewl             
 *  +Sem/Clth-jewl_Curr        
 *  +Sem/Clth-jewl_Curr_Obj    
 *  +Sem/Clth-part             
 *  +Sem/Ctain                 
 *  +Sem/Ctain-abstr           
 *  +Sem/Ctain-abstr_Org       
 *  +Sem/Ctain-clth            
 *  +Sem/Ctain-clth_Plant      
 *  +Sem/Ctain-clth_Veh        
 *  +Sem/Ctain_Furn            
 *  +Sem/Ctain_Tool            
 *  +Sem/Curr            		
 *  +Sem/Curr_Obj              
 *  +Sem/Date                  
 *  +Sem/Domain                
 *  +Sem/Domain_Money                
 *  +Sem/Drink                 
 *  +Sem/Drink_Plant           
 *  +Sem/Dummytag              
 *  +Sem/Edu                   
 *  +Sem/Edu_Event             
 *  +Sem/Edu_Geom              
 *  +Sem/Edu_Mat               
 *  +Sem/Edu_Org               
 *  +Sem/Event                 
 *  +Sem/Event_Plc-elevate     
 *  +Sem/Feat                  
 *  +Sem/Feat-measr            
 *  +Sem/Feat-measr_Plc        
 *  +Sem/Feat-phys             
 *  +Sem/Feat-phys_Tool-write  
 *  +Sem/Feat-psych            
 *  +Sem/Feat-psych_Hum        
 *  +Sem/Feat-psych_Plc        
 *  +Sem/Feat_Plant            
 *  +Sem/Fem                   
 *  +Sem/Food                  
 *  +Sem/Food-med              
 *  +Sem/Food_Plant            
 *  +Sem/Fruit                 
 *  +Sem/Furn                  
 *  +Sem/Game_Obj-play         
 *  +Sem/Geom_Obj              
 *  +Sem/Group_Hum             
 *  +Sem/Group_Hum_Plc         
 *  +Sem/Group_Hum_Plc-abstr         
 *  +Sem/Hum                   
 *  +Sem/Hum_Lang               = human and language
 *  +Sem/Hum_Lang_Plc          
 *  +Sem/Hum_Mat_Tool          
 *  +Sem/Hum_Org               
 *  +Sem/Hum_Veh               
 *  +Sem/Ideol                 
 *  +Sem/Lang                  
 *  +Sem/Lang_Tool             
 *  +Sem/Mal                   
 *  +Sem/Mat                   
 *  +Sem/Mat_Obj-clo           
 *  +Sem/Mat_Plant             
 *  +Sem/Mat_Txt               
 *  +Sem/Measr                 
 *  +Sem/Measr_Obj_Time        
 *  +Sem/Measr_Sign            
 *  +Sem/Measr_Time            
 *  +Sem/Money                 
 *  +Sem/Money_Obj             
 *  +Sem/Obj                   
 *  +Sem/Obj-clo               
 *  +Sem/Obj-el                
 *  +Sem/Obj-ling              
 *  +Sem/Obj-ling_Obj-surfc    
 *  +Sem/Obj-play              
 *  +Sem/Obj-rope              
 *  +Sem/Obj-surfc             
 *  +Sem/Obj_State             
 *  +Sem/Obj_Veh               
 *  +Sem/Org                   
 *  +Sem/Org_Prod-cogn         
 *  +Sem/Org_Rule              
 *  +Sem/Org_Txt               
 *  +Sem/Part                  
 *  +Sem/Part_Prod-cogn        
 *  +Sem/Perc-emo              
 *  +Sem/Perc-phys             
 *  +Sem/Plant                 
 *  +Sem/Plant-part            
 *  +Sem/Plant_Plant-part      
 *  +Sem/Plc                   
 *  +Sem/Plc-abstr             
 *  +Sem/Plc-abstr_Route       
 *  +Sem/Plc-elevate           
 *  +Sem/Plc-line              
 *  +Sem/Plc-water             
 *  +Sem/Plc_Pos               
 *  +Sem/Plc_Route             
 *  +Sem/Plc_Substnc           
 *  +Sem/Plc_Substnc_Wthr      
 *  +Sem/Plc_Txt               
 *  +Sem/Plc_Wthr              
 *  +Sem/Pos                   
 *  +Sem/Process               
 *  +Sem/Prod                  
 *  +Sem/Prod-audio            
 *  +Sem/Prod-audio_Txt        
 *  +Sem/Prod-cogn             
 *  +Sem/Prod-cogn_Txt         
 *  +Sem/Prod-ling             
 *  +Sem/Prod-vis              
 *  +Sem/Route                 
 *  +Sem/Rule                  
 *  +Sem/Semcon                
 *  +Sem/Sign                  
 *  +Sem/State                 
 *  +Sem/State-sick            
 *  +Sem/Substnc               
 *  +Sem/Substnc_Wthr          
 *  +Sem/Sur                   
 *  +Sem/Time                  
 *  +Sem/Time-clock            
 *  +Sem/Time_Wthr             
 *  +Sem/Tool                  
 *  +Sem/Tool-catch            
 *  +Sem/Tool-clean            
 *  +Sem/Tool-music            
 *  +Sem/Tool-write            
 *  +Sem/Txt                   
 *  +Sem/Veh                   
 *  +Sem/Wpn                   
 *  +Sem/Wthr                  
 *  +Sem/Year                   - year (i.e. 1000 - 2999), used only for numerals

 | +MWE | multi word expressions, goes to abbr

Use the following flag diacritics to control downcasing of derived proper
nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
these flags. There exists a ready-made regex that will do the actual down-casing
given the proper use of these flags.

 | @P.Px.add@ | Giving possibility for Px-suffixes (all except from Nom 3.p)
 | @R.Px.add@ | Requiring P.Px.add-flag for Px-suffixes (all except from Nom 3.p)
 | @P.Nom3Px.add@ |  Giving possibility for Px-suffixes Nom 3.p
 | @R.Nom3Px.add@ | Requiring P.Nom3Px.add flag for Px-suffixes Nom 3.p

 | @P.Pmatch.Backtrack@ | Used on single-token analyses; tell hfst-tokenise/pmatch to backtrack by reanalysing the substrings before and after this poin in the form (to find combinations of shorter analyses that would otherwise be missed)

!!Derivation position in a derivation row
Affix and tag, frompos - topos


 | +Der1 | Position
 | +Der2 | Position
 | +Der3 | Position
| Der#1
 | +Der/htalle | VV - Passive, frekeventative
 | +Der/lg | VV - Passive
 | +Der/ijes | NA - Nomen agentis
 | +Der/ihks | VA - (Handlernomen- tilbøyelig til å utføre den handlingen som grunnordet angir)
 | +Der/les | VA - Intensive
 | +Der/ldihkie | VA -
 | +Der/ldahke | VA - Resultatnomen (?)
 | +Der/ldh | VA - Attributt
 | +Der/ht | VV - Causative
 | +Der/l | VV - Subitive
 | +Der/st | VV - Diminutive, Subitive
 | +Der/d | VV - Continuative, Konative, Frequentative, Refleksive, Momentan
 | +Der/Car | -hts, Caritive, was Der/heapmi in sme
+Der/dMOM  ?
+Der/dKON  ?
+Der/dREFL ?
+Der/dCONT ?
+Der/dCONTFREC ?
+Der/dFREC ?

 | +Der/htj | Dim-cont, Frequentative
 | +Der/Dimin | NN - Diminutive
 | +Der/Rec | NN - Forholdsformer
 | +Der/laakan | AAdv - adverb
 | +Der/laaketje | AA - adjektiv


| Der#2
 | +Der/vuota | AN - Noun
 | +Der/adte | VV - Frequentative, Kontinuativ
 | +Der/alla | VV - Frequentative
 | +Der/eds | NA - Attributt
| Der#3
 | +Der/PassL | VV - long only
 | +Der/NomAg | VN - Nomen Agentis
 | +Der/NomAct | VN - Nomen Actionis
 | +Der/ahtje | VV - Inchoative
 | +Der/InchL | VV - Inchoative
| Der#4   | ''So far +Der4 is not motivated for SMA.''

!Other, non-positional derivations

All non-positional derivations should be preceded by the following tag,
to make it possible to target regular expressions in all derivations in a
language-independent way:
just specify {{{[+Der|+Der1 .. +Der5]}}} and you are set.
 ; +Der : Tag to precede any non-positional derivation

 | +Der/PassS | VV - short passive only
 | +Der/A | NA - comparation of N's

!!Tags for originating language
The following tags are used to guide conversion to IPA: loan words
and foreign names are usually pronounced (approximately) as in the
originating (majority) language. Instead of trying to identify the
correct pronounciation based on fonotactics (orthotactics actually),
we tag all words that can't be correctly transcribed using the SME
transcriber with source language codes. Once tagged, it is possible
to split the lexical transducer in smaller ones according to langu-
age, and apply different IPA conversion to each of them.
The principle of tagging is that we only tag to the extent needed,
and following a priority:
# any untagged word is pronounced with SME orthographic conventions
# NNO and NOB have identical pronounciation, NNO is only used if
  different in spelling from NOB
# SWE has mostly the same pronounciation as NOB, and is only used
  if different in spelling from NOB
# Occasionally even SME (the default) may be tagged, to block other
  languages from being specified, mainly during semi-automatic
  language tagging sessions
All in all, we want to get as much correctly transcribed to IPA
with as little work as possible. On the other hand, if more words
are tagged than strictly needed, this should pose no problem as
long as the IPA conversion is correct - at least some words will
get the same pronounciation whether read as SME or NOB/NNO/SWE.
 * +OLang/SME - North Sámi
 * +OLang/SMA - South Sámi
 * +OLang/FIN - Finnish
 * +OLang/SWE - Swedish
 * +OLang/NOB - Norw. bokmål
 * +OLang/NNO - Norw. nynorsk
 * +OLang/ENG - English
 * +OLang/RUS - Russian
 * +OLang/UND - Undefined
 * +Area/SE  In Sweden
 * +Area/NO  In Norway


!!Triggers for morphophonological rules
 ; X2 : Trigger for ???
 ; X3 : Trigger for ???
 ; X4 : Trigger for ???
 ; E2 : insert e ! Fjern denne.

!Morphophonemes and Sámi letters

 * e9  twol rule override, so that e doesn't turn into i infront of j
 * o9  twol rule override,  so that o doesn't turn into u infront of j

!!Symbols that need to be escaped on the lower side (towards twolc):
 ; »7 : Literal »
 ; «7 : Literal «
{{{
  %[%>%]  - Literal >
  %[%<%]  - Literal <
}}}
!!Lexeme disambiguation tags
 ; +Hom1 : Homonymy
 ; +Hom2 : Homonymy

!!Stem variant tags
 ; +v1 : variant 1
 ; +v2 : variant 2
 ; +v3 : variant 3
 ; +v4 : variant 4
 ; +v5 : variant 5
 ; +v6 : variant 6
 ; +v7 : variant 7


!!Umlaut and diphthong simplification triggers

 | %^DISIMP | diphthong simplification
 | %^COMPDISIMP | diphthong simplification in comparatives
 | %^COMPDISIMP2 | diphthong simplification in comparatives, type 2
 | %^COMPDISIMP3 | diphthong simplification
 | %^PLCDISIMP | diphthong simplification in ACCRA-names
 | %^NOMAGieDISIMP | diphthong simplification for NomAg ie stems
 | %^1UML | a-uml, like 1sg prs, perf.part of båetedh/V-I, and ill sg of -ie nouns
 | %^2UML | dark e, as 3sg prs & perf.part of tjearodh/V-II, and ill sg of -oe nouns
 | %^3UML | adj Umlaut oeh:an
 | %^3sUML | a-uml in 3sg prs of V-IV (roehtedh - ruahta)
 | %^3dUML | ie-uml in 1du & 3pl prs of V-IV (roehtedh - ruehtien)
 | %^iæUML | not used
 | %^iUML | i-uml in pret of V-I (båetedh - böötim)
 | %^PASSUML | Short passive Umlaut Rx->R5
 | %^didhUML | Der/d Umlaut for GUARKEDH-words
 | %^htjidhUML | Umlaut für der/htjidh derivations
 | %^adteUML | Umlaut für Der/adte and Der/alla derivations
 | %^aLATUS | Latus-Umlaut for -ie stems
 | %^uLATUS | Latus-Umlaut for -oe stems
 | %^ConsDel | Stem consonant deletion in front of Der/PassL
 | %^ILLELA | Stem vowel changes in Illative an Elative
 | %^PLGENPLCOM | Stem vowel changes in final from e -> i, and withoaut -j-
 | %^COMESS | Stem vowel changes in ACCRA-names

 | ∑ | Symbol used before # in dynamic compounds, and only there



!!Flag diacritics
We have manually optimised the structure of our lexicon using following
flag diacritics to restrict morhpological combinatorics - only allow compounds
with verbs if the verb is further derived into a noun again:
 | @P.NeedNoun.ON@ | (Dis)allow compounds with verbs unless nominalised
 | @D.NeedNoun.ON@ | (Dis)allow compounds with verbs unless nominalised
 | @C.NeedNoun@ | (Dis)allow compounds with verbs unless nominalised
For languages that allow compounding, the following flag diacritics are needed
to control position-based compounding restrictions for nominals. Their use is
handled automatically if combined with +CmpN/xxx tags. If not used, they will
do no harm.
 | @P.CmpFrst.FALSE@ | Require that words tagged as such only appear first
 | @D.CmpPref.TRUE@ | Block such words from entering ENDLEX
 | @P.CmpPref.FALSE@ | Block these words from making further compounds
 | @D.CmpLast.TRUE@ | Block such words from entering R
 | @D.CmpNone.TRUE@ | Combines with the next tag to prohibit compounding
 | @U.CmpNone.FALSE@ | Combines with the prev tag to prohibit compounding
 | @U.CmpNone.TRUE@ | Combines with the two previous ones to block compounding
 | @P.CmpOnly.TRUE@ | Sets a flag to indicate that the word has passed R
 | @D.CmpOnly.FALSE@ | Disallow words coming directly from root.
 | @U.CmpHyph.FALSE@ | Flag to control hyphenated compounds like proper nouns
 | @U.CmpHyph.TRUE@ | Flag to control hyphenated compounds like proper nouns
 | @C.CmpHyph@ | Flag to control hyphenated compounds like proper nouns

Use the following flag diacritics to control downcasing of derived proper
nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
these flags. There exists a ready-made regex that will do the actual down-casing
given the proper use of these flags.
 | @U.Cap.Obl@ | Allowing downcasing of derived names: deatnulasj.
 | @U.Cap.Opt@ | Allowing downcasing of derived names: deatnulasj.

 * @R.SpellRlx.ON@ Flag used to tag spell-relax-analysed strings (and only those).
 * @D.SpellRlx.ON@ Flag used to tag spell-relax-analysed strings (and only those).
 * @C.SpellRlx@ Flag used to tag spell-relax-analysed strings (and only those).

 | @P.Pmatch.Loc@ | Used on multi-token analyses; tell hfst-tokenise/pmatch where in the form/analysis the token should be split.
 | @P.Pmatch.Backtrack@ | Used on single-token analyses; tell hfst-tokenise/pmatch to backtrack by reanalysing the substrings before and after this point in the form (to find combinations of shorter analyses that would otherwise be missed)


!!!Lexicon Root
This is the beginning of everything. The __Root__ lexicon is reserved in the
LexC language, and must be the first lexicon defined.

Here is the list of lexica in the sma analyser








 *              NounRoot     ; 
 *              Verb         ; 
 *              Adjective    ; 
 *              Pronoun      ; 
 *              Adverb       ; 
 *              Subjunction  ; 
 *              Conjunction  ; 
 *              Particle     ; 
 *              Adposition   ; 
 *              Punctuation  ; 
 *              Symbols      ; 
 *              Interjection ; 
 *  +Use/CircN: Numeral      ; 
 *              Abbreviation ; 
 *              Acronym      ; 


 * __LEXICON ProperNoun   __


!!!Lexicon ENDLEX
And this is the ENDLEX of everything:
{{{
 @D.CmpOnly.FALSE@@D.CmpPref.TRUE@@D.NeedNoun.ON@ ENDLEX2 ;
}}}
The {{@D.CmpOnly.FALSE@}} flag diacritic is ued to disallow words tagged
with +CmpNP/Only to end here.
The {{@D.NeedNoun.ON@}} flag diacritic is used to block illegal compounds.


!!!Abbreviation affixes & contlexes




!!Abbreviations written both with and without a following full stop




!!Abbreviations written without a following full stop
Most abbreviations point to various variants of {{ab-nodot-noun}}.





!!Abbreviations written with a following full stop

ab-dot-noun is the lexicon for noun abbrs that must have a period.

ab-dot-adj is the lexicon for adjectival abbrs that must have a period.

ab-dot-adv is the lexicon for adverbial abbrs that must have a period.

ab-dot-num is the lexicon for numerical abbrs that must have a period.



!!Case suffixes and analysis tags















!!!Adjective affixes

This is one of two parallel files containing adjective affixes.
The files represent two alternative interpretation of the same data
(South Saami adjectives).
This file is used for spellchecking, the alternative file
''adjectives-oahpa.lexc'' is used for dictionary and icall applications.
This file is compiled by default, the other one is compiled by in
langs/sma giving the command ''.configure --with-oahpa''
before compiling.





























 !!!LEXICON PRED_S
The __PRED_S__ lexicon is used for adjectives Predicatives.
{{{
  +Sg+Nom:%>s FINAL1 ; 
}}}

 !!!LEXICON PRED_0
The __PRED_0__ lexicon is used for adjectives Predicatives.
{{{
  +Sg+Nom: FINAL1 ; 
}}}

 !!!LEXICON PRED_H
The __PRED_H!!≈__ lexicon is used for adjectives Predicatives.
{{{
  +Sg+Nom:%>h FINAL1 ; 
}}}


denne skal også ut ! - --> intersatn om dette er en norsk suffiks egentlig?
 !!!LEXICON PRED_NE_ODD
The __PRED_NE_ODD!!≈__ lexicon is used for adjectives Predicatives.
{{{
  +Sg+Nom:%>ne FINAL1     ; 
          :n     ODDCASEOBL ; 
          :n     ODDCOMP    ; 
}}}

 !!!LEXICON PRED_N    -  GENITIV
The __PRED_N!!≈__ lexicon is used for adjectives Predicatives.
{{{
  +Sg+Nom:%>n FINAL1 ; 
}}}











 !!!LEXICON e_E_EVEN
The __e_E_EVEN!!≈__ lexicon is used for adjectives on {{–e}} and {{–e}}  In attributes and predicatives.With EVEN-NOCOMP.
{{{
       :e ATTR_0      ; 
       :e PRED_0      ; 
  +Sg:  NIEJTESGOBL ; 
  +Pl:  NIEJTE_PL   ; 
       NIEJTEREST  ; 
       :e EVENCOMP    ; 
}}}

 !!!LEXICON e_E_EVENNOCOMP1
The __e_E_EVENNOCOMP1!!≈__ lexicon is used for adjectives on {{–e}} and {{–e}} stem. In attributes and predicatives.With EVEN-NOCOMP.

{{{
       :e ATTR_0      ; 
       :e PRED_0      ; 
  +Sg:  NIEJTESGOBL ; 
  ! +Sg:  NIEJTESGOBL ; 
  +Pl:  NIEJTE_PL   ; 
       NIEJTEREST  ; 
}}}


 !!!LEXICON a_A_EVEN1
The __a_A_EVEN1!!≈__ lexicon is used for adjectives on {{–a}} and {{–a}}  In attributes and predicatives.With EVEN-COMP.
{{{
       :a ATTR_0     ; 
  +Sg:  MAANASGNOM ; 
       MAANAOBL   ; 
       :a EVENCOMP   ; 
}}}

 !!!LEXICON as_AS_EVEN1 ! Disse har opprinnelig vært as_a_EVEN_adjektiv
The __as_AS_EVEN1!!≈__ lexicon is used for adjectives on {{–as}} and {{–as}}  In attributes and predicatives.With EVEN-COMP.
{{{
               :a  ATTR_S   ; 
      +Sg+Nom:as FINAL1   ; 
   +Cmp/SgNom:as R        ; 
}}}


 !!!LEXICON ie_IE_EVEN1
The __ie_IE_EVEN1!!≈__ lexicon is used for adjectives on {{–ie}} and {{–ie}}  In attributes and predicatives.With EVEN-COMP.
{{{
    :ie ATTR_0     ; 
     N_IE_FORMS ; 
    :ie EVENCOMP   ; 
}}}


 !!!LEXICON ie_IE_EVENNOCOMP
The __ie_IE_EVENNOCOMP!!≈__ lexicon is used for adjectives on {{–ie}} and {{–ie}}  In attributes and predicatives. With EVEN-COMP.
{{{
    :ie ATTR_0     ; 
     N_IE_FORMS ; 
}}}

The __a_A_EVEN1_NOCOMP__ lexicon is used for adjectives on {{–ie}} and {{–ie}}  In attributes and predicatives. With EVEN-COMP.
{{{
       :a ATTR_0     ; 
}}}

 !!!LEXICON es_ES_EVEN
The __es_ES_EVEN!!≈__ lexicon is used for adjectives on {{–es}} and {{–es}}  In attributes and predicatives. With EVEN-COMP.
{{{
            :e      ATTR_S       ; 
            :e      PRED_S       ; 
            :e      EVENCOMP     ; 
}}}





The __es_ES_EVENNOCOMP1__ lexicon is used for adjectives on {{–es}} and {{–es}}  In attributes and predicatives. With EVEN-NOCOMP.

{{{
  :e  ATTR_S     ; 
  :e  PRED_S     ; 
  :es ODDCASEOBL ; 
}}}


The __ies_IES_EVEN1__ lexicon is used for adjectives on {{–ies}} and {{–ies}}  In attributes and predicatives. With EVEN-COMP.
{{{
      ies_IES_EVENNOCOMP1 ; 
  :ie EVENCOMP            ; 
}}}


The __ies_IES_EVENNOCOMP1__ lexicon is used for adjectives on {{–ies}} and {{–ies}}  In attributes and predicatives. With EVEN-NOCOMP.
{{{
   :ie ATTR_S    ; 
   :ie PRED_S    ; 
}}}








__adjectives examples:__
* __gööktengïeleh: __ {{gööktengïeleh+A+Attr }}
* __gööktengïeleh: __ {{gööktengïeleh+A+Sg+Nom }}
* __gööktengïelege: __ {{gööktengïeleh+A+Sg+Nom }}
* __göökten-gïeleh: __ {{gööktengïeleh+A+Attr }}
* __göökten-gïeleh: __ {{gööktengïeleh+A+Sg+Nom }}
* __göökten-gïelege: __ {{gööktengïeleh+A+Sg+Nom }}




!!!BÅERIES LEXICON BAERIES
UNEVEN adjective, attr = pred. Comporation uneven syllable.
Presentlly only used for "båeries" adjective.
{{{
   :båerie ATTR_S   ; 
   :båerie PRED_S   ; 
   :båaras ODDCOMP  ; 
}}}

!!!ÅEHPIES LEXICON ÅEHPIES
ODD adjective, attr = pred. Comporation uneven syllable.
{{{
}}}


!!!GEAREHKE LEXICON GIERIES
Umlaut from attr--> pred. Comporation uneven syllable.
Presentlly only used for "gieries-gearehke" adjective.
This lexicon covers the ies - ehke + umlaut change.
{{{
         :gierie   ATTR_S  ; 
         :gearahk  ODDCASE ; 
         :gearahk  ODDCOMP ; 
  +Use/NG:gearahtj ODDCOMP ; 
  +Use/NG:gearahg  ODDCOMP ; 
}}}





!!!BUERIE LEXICON BUERIE_UMLAUT_IE_STAMME
EVEN adjective with EVEN-UMLAUT Comporation for -ie-stems.
{{{
  :buer   ie_IE_EVENNOCOMP ; 
  :buerie EVENCOMPONLY     ; 
  :bööre  MES              ; 
  :buerie DIMCOMP          ; 
}}}







UMLAUT 3 = e(3)-stamme  = Unødvendig lexicon

UMLAUT 3 = e(3)-stamme













!!!LEXICON ihks_IHKS_igs_IGS_EVENNOCOMP
Adjective with no comp.


__adjectives examples:__
* __isvelihks: __ {{isvelihks+A+Attr }}
* __isveligs: __ {{isvelihks+A+Attr }}
* __isvelihks: __ {{isvelihks+A+Sg+Nom }}
* __isveligs: __ {{isvelihks+A+Sg+Nom }}

* __isvelihke: __ {{isvelihks+A+Sg+Nom }}
* __isveligke: __ {{isvelihks+A+Sg+Nom }}
* __isveligie: __ {{isvelihks+A+Sg+Nom }}
* __isveligke: __ {{isveligke+Adv }}
* __isvelihke: __ {{isvelihke+Adv }}

{{{
          +Use/NG:ihk%>s ATTRCONT   ; 
                 :ig     ATTR_S     ; 
        +Err/Orth:igks     ATTR_H     ;  onterligksh
   +Sg+Nom+Use/NG:ihk%>s FINAL1     ; 
   +Sg+Nom+Use/NG:ig%>s  FINAL1     ; 
                 :ihk    X_NIEJTE   ; 
          +Use/NG:igk    X_NIEJTE   ; 
          +Use/NG:ig     N_IE_FORMS ; 
}}}






!!!LEXICON ihks_IHKS_igs_IGS_EVENNOCOMP
EVEN/ODD adjective with Comporation.

{{{
}}}

!!!LEXICON e_ES_EVENNOCOMP2
This is for the adjective "jaame"


__adjectives examples:__
* __jaame: __ {{jaame+A+Attr }}
* __jaames: __ {{jaame+A+Sg+Nom }}

{{{
  :e ATTR_0   ; 
  :e PRED_S   ; 
     eCASEOBL ; 
}}}



  :e ATTR_0     ; 
  :e PRED_S     ; 

  :e ATTR_0     ; 



  :e ATTR_0     ; 
  :e PRED_S     ; 





           :e ATTR_0   ; 


           :e PRED_S   ; 







!!!LEXICON ODDEVEN2
This one gives EVEN and ODD  Comporation.

{{{

              :es ODDCASEOBL ; 
              :e  EVENCOMP   ; 
  +Cmp/SgNom:es R          ; 
       +Use/NG:es ODDCOMP    ;  ! trond test, utkommentert gjev Total passes: 1140, Total fails: 61, Total: 1201
}}}



















!!!LEXICON es_E_EVEN3
This one gives EVEN Comporation, and -s in attributt and wowel in predikativ, which gives EVEN-COMP.
{{{
         :e ATTR_S      ; 
         :e EVENCOMP    ; 
}}}

!!!LEXICON as_oes_A_OE_EVEN3
This one gives EVEN Comporation, and -s in attributt and wowel in predikativ, which gives EVEN-COMP.
{{{
       +Use/NG:a  ATTR_S      ; 
              :oe ATTR_S      ; 
              :oe EVENCOMP_oe ; 
       +Use/NG:a  EVENCOMP    ; 
}}}

!!!LEXICON oeh_ah_OE_A_EVEN3
This one gives EVEN Comporation, and -s in attributt and wowel in predikativ, which gives EVEN-COMP.
{{{
         :oe ATTR_H      ; 
  +Use/NG:a  ATTR_H      ; 
             N_OE        ; 
  +Use/NG:   MAANA       ; 
         :oe EVENCOMP_oe ; 
  +Use/NG:e  EVENCOMP    ; 
}}}

!!!LEXICON ies_IE_EVEN3
This one gives EVEN Comporation, and -s in attributt and wowel in predikativ, which gives EVEN-COMP.
{{{
    :ie ATTR_S     ; 
     N_IE_FORMS ; 
    :ie EVENCOMP   ; 
}}}

!!!LEXICON ies_IE_EVEN3NOCOMP
This one gives EVEN Comporation, and -s in attributt and wowel in predikativ.
{{{
    :ie ATTR_S     ; 
     N_IE_FORMS ; 
}}}














!!!UMLAUT LEXICON asATTR_anADVERB
These 6 adjectives is in the 4. group of the southsámi adjectives, the group
which contains all umlaut-adjectives. Theese adjectives whivh have -as  as
attributeform and an as predicativeform, is south-southsámi adjectives, and
they dont have any comparation.
This group which covers the ies - an/ as-an and oes-an + umlaut change, is a
small undergruppe of the 4.group
{{{
   +A:a  ATTR_S   ; 
}}}

!!!UMLAUT LEXICON oesATTR_oen_an_ADVERB
Theese 5 adjectives is in the 4. group of the southsámi adjectives, The group which contains all
umlaut-adjectives. Theese adjectives which have -oes  as attributeform and -an as predicativeform, is north-southsámi adjectives, and they dont have any comparation.
This group which covers the ies -> an/ as-> an and oes-> an + umlaut change, is a small undergruppe of the 4.group
{{{
   +A:oe     ATTR_S   ; 
   +A:       N_OE_OBL ; 
}}}


{{{
   +A:oe  ATTR_H     ; 
}}}

{{{
          +A:oe        ATTR_H    ; 

}}}













































!!!LEXICON MAST
The __MAST__ lexicon is used for adjectives on {{–masten}} and {{masth}} with an
used with the stem ''masten''
{{{
                 ATTR_S      ; 
       +Use/NG:e ATTR_S      ; 
       +Use/NG:  ATTR_H      ; 
       +Use/NG:e ATTR_N      ; 
              :e PRED_N      ; 
}}}


!!!IJVE_LOAN_ADJ LEXICON IJVEadj
EVEN adjective EVEN Comporation.
Used for all loan-adjectives "ijve".
{{{
           :ijv e_E_EVEN ; 
    +Use/NG:ïjv e_E_EVEN ; 
  +Err/Orth:iv  e_E_EVEN ; 
}}}





!!!LEXICON JELLE
The __JELLE__ lexicon is used for loanadjectives on {{jelle}} and {{–jelle}} with an
used with the stem ''jelle'' This one should be 'jeelle'? SGM?

{{{
  +Err/Orth:^ell e_ES_LOAN ; 
          :jell e_ES_LOAN ; 
}}}

!!!LEXICON UELLE
{{{
          :^ell e_ES_LOAN ; 
  +Err/Orth:vell e_ES_LOAN ; 
}}}




















































































 * __LEXICON s_H_EVENNOCOMP   __



























 :ijl e_E_EVEN ;






!!!Adjective stems

This is one of two parallel files containing adjective stems.
The files represent two alternative interpretation of the same data
(South Saami adjectives).
This file is used for spellchecking, the alternative file
''adjectives-oahpa.lexc'' is used for dictionary and icall applications.
This file is compiled by default, the other one is compiled by in
langs/sma giving the command ''.configure --with-oahpa''
before compiling.





















!!!Adjective affixes

This is one of two parallel files containing adjective affixes.
The files represent two alternative interpretation of the same data
(South Saami adjectives).
This file is used for dictionary and icall applications, the alternative file
''adjectives.lexc'' is used for spellchecking.
This file is compiled by in
langs/sma giving the command ''.configure --with-oahpa''
before compiling. The other file (adjectives.lexc) is compiled by default.

!!!Adjectives: Adjectival inflection sublexica

!!Basic adjectival lexica, infl types

!even stems

Lexical exceptions


 * __LEXICON A_LDH __


 * __LEXICON NOERE __

 * __LEXICON BUERIE __

 * __LEXICON LEEVLES __

 * __LEXICON SOOKES __

 * __LEXICON SOOJMES __


 * __LEXICON SMAAVE   __, both smaave and plaave

 * __LEXICON SNAARE  __

 * __LEXICON ORRE __

 * __LEXICON STOERE __


 * __LEXICON STOERE_COMP __

 * __LEXICON NAAKE __

 * __LEXICON GISSE __

 * __LEXICON GAMTE __

 * __LEXICON GIEVTE __

 * __LEXICON KRUANA __

 * __LEXICON VEELKES __


 * __LEXICON ROOPSES __

 * __LEXICON SNEEHPES  __ burde GEEHPES -> SNEEHPES ? ikke dokumentert geehpebe. s_S_ODD  bort?

 * __LEXICON GEEHPES __

 * __LEXICON GEERVE __

 * __LEXICON TJOEVKES __

 * __LEXICON SAETNIES __

 * __LEXICON SUVHTJIES __


 * __LEXICON SAEBRIES  __

 * __LEXICON MUJVIES  __


 * __LEXICON STAERIES  __

 * __LEXICON GIERIES  __

 * __LEXICON BAERIES  __

 * __LEXICON GÆHTJOES  __

 * __LEXICON AAREH __

 * __LEXICON MOOREH __




!!Regular even stem types


 * __LEXICON EVTEBE   __

 * __LEXICON ATTR_EVEN   __

 * __LEXICON ATTR_ODD   __


 * __LEXICON ø_Ø_EVEN  __

 * __LEXICON IJVEadj __


 * __LEXICON LES  __ Should contain only loanwords (?)


 * __LEXICON IJAALE_A_LOAN __


 * __LEXICON AATE_adj_LOAN  __


 * __LEXICON AALE __

 * __LEXICON AALEFORMS __

 * __LEXICON oe_OE_EVEN  __


 * __LEXICON e_E_EVEN  __

 ** __LEXICON e_E_EVENNOCOMP  __

 ** __LEXICON a_A_EVENNOCOMP  __

 * __LEXICON a_A_EVEN __


 * __LEXICON ie_IE_EVEN  __

 ** __LEXICON ie_IE_EVENNOCOMP  __

 * __LEXICON es_ES_EVEN  __

 ** __LEXICON es_ES_EVENNOCOMP  __

 * __LEXICON ies_IES_EVEN  __

 ** __LEXICON ies_IES_EVENNOCOMP  __


 * __LEXICON Cs_CS_EVEN  __


 * __LEXICON ihks_IHKS_EVENNOCOMP __


 * __LEXICON RAARH   __ Attr= h, Comp =Even( Jïjtje-raarh)



 * __LEXICON MAST __

!type 2

 * __LEXICON JELLE __

 * __LEXICON UELLE __


 * __LEXICON e_ES_LOAN   __ LOAN  - fjerna comp LA - vi kan vurdere om noen av disse bør ha komp.


 * __LEXICON ÆRE   __ LOAN

 * __LEXICON ENTE   __ LOAN




 * __LEXICON LES_LASSE_ie  __ derivasjon av verb

 * __LEXICON LES_LASSE_NOM_ie  __


 * __LEXICON LES_LASSE_OBL_ie  __


 * __LEXICON e_ES_EVEN  __

 ** __LEXICON e_ES_EVENNOCOMP  __

 * __LEXICON e_ES_ODDEVEN  __


 * __LEXICON es_E_EVEN   __

 * __LEXICON en_E_EVEN   __


 * __LEXICON as_A_EVEN   __ attr= s, pred= e, comp=EVEN(ebe,emes), Case/Substantvien hammoe= EVEN

 * __LEXICON oes_OE_EVEN   __ attr= s, pred= Ø, Comp= EVEN(ebe, emes) case/substantiven hammoe= Even

 ** __LEXICON oes_OE_EVENNOCOMP  __

 * __LEXICON ies_IE_EVEN   __ attr= s, pred. = Ø, comp jih case: even (ebe/emes/esne)
 * __LEXICON ies_IE_EVENNOCOMP   __ attr= s, pred. = Ø, comp jih case: even (ebe/emes/esne)


 * __LEXICON ies_(ehke)_IE_EHKE_ODDCOMPe_EVEN  __

 * __LEXICON ies_(ehke)_IES_EHKE_ODDCOMPe_EVEN  __

 * __LEXICON ies_(ehke)_EHKE_ODDCOMPe_EVEN __



 * __LEXICON ies_IES_IE_EVEN   __ Comp & case = even (ebe/emes/esne)

 * __LEXICON ies_IES_IE_EVENNOCOMP   __ Attr=s, Pred. = s jih Ø, Comp jih caese= even (ebe/emes/esne)

 * __LEXICON as_AS_EVEN   __ Attr=s, Pred. = s jih Ø, Comp jih caese= even (ebe/emes/esne)


 * __LEXICON IJLE_LOAN_A __


 * __LEXICON s_H_EVENNOCOMP   __


!!!ODD-stems (odd stem declension)


!!type 0 (attr only)

 * __LEXICON ATTR_es_s  __ aajtijes


!!type 1



 * __LEXICON ø_Ø_ODD  __

 * __LEXICON ah_AH_ODD    __ XXX mangler CASE - hva er riktig - kanskje EVEN?


 * __LEXICON ah_AH_ODDNOCOMP   __

 * __LEXICON hth_HTH_ODD  __

 * __LEXICON Ce_CE_ODD   __ bårreske

 * __LEXICON ege_EGE_ODDEVEN  __ rudtjege


 * __LEXICON s_S_Ø_ODD  __ hamhpas



 * __LEXICON s_E_ODD  __

 * __LEXICON as_AS_ODD  __

 ** __LEXICON as_AS_ODDNOCOMP  __



 * __LEXICON s_S_ODD  __

 ** __LEXICON s_S_ODDNOCOMP  __

 * __LEXICON es_ES_ODDhk  __

 * __LEXICON oes_OES_ODD  __

 ** __LEXICON oes_OES_ODDNOCOMP  __

 * __LEXICON oes_OES_ODDahk  __

 * __LEXICON oes_OES_ODDas  __


 * __LEXICON Ces_CES_ODDNOCOMP   __

 * __LEXICON les_LES_ODD   __

 * __LEXICON Cs_CS_CE_ODD  __

 ** __LEXICON Cs_CS_CE_ODDNOCOMP  __


 * __LEXICON Cs_CS_ODD  __

 ** __LEXICON Cs_CS_ODDNOCOMP  __

 * __LEXICON hts_HTS_ODD  __

 ** __LEXICON hts_HTS_ODDNOCOMP  __



 * __LEXICON an_AN_ODDNOCOMP __


!!type 2

 * __LEXICON AABELE __


 * __LEXICON IJBELE __

 * __LEXICON Ce_CES_ODD  __

 * __LEXICON ø_S_ODDEVEN   __ , Comp=even jih ODD, Case= ODD

 * __LEXICON ø_S_ODD   __ , Comp=even jih ODD, Case= ODD



!!type 3


 * __LEXICON JEASIEGOELKIJE __



 * __LEXICON BÅETIJE !   __ bårreske

 * __LEXICON jes_js_JES_JS_ODD  __ to adj: bualijes, fååmijes


 * __LEXICON ijes_ijs_IJE_ODD  __ GUALIJES

 * __LEXICON ijes_ijs_IJE_ODDNOCOMP  __ DÅAJMIJES






!!type 3



 * __LEXICON Cs_CE_ODD  __

 ** __LEXICON Cs_CE_ODDNOCOMP  __

 * __LEXICON Ces_CE_ODD  __


 ** __LEXICON Ces_CE_ODDNOCOMP  __


 * __LEXICON Ces_Ce_CES_CE_ODD    __ as Ces_CES_CE_ODD, but with ATTR_0

 ** __LEXICON Ces_Ce_CES_CE_ODDNOCOMP __

 * __LEXICON Ce_Ces_CES_CE_ODD   __

 ** __LEXICON Ce_Ces_CES_CE_ODDNOCOMP __


 * __LEXICON Ces_CES_CE_ODD  __


 ** __LEXICON Ces_CES_CE_ODDNOCOMP  __

 * __LEXICON hks_hke_HKS_HKE_ODD   __


!!type 4

 * __LEXICON as_AN_ODD  __


 * __LEXICON oes_AN_ODD  __


 * __LEXICON s_N_ODD  __

 ** __LEXICON s_N_ODDNOCOMP  __




 * __LEXICON ah_AN_ODDNOCOMP  __




 * __LEXICON oeh_OEH_ODDNOCOMP __

 * __LEXICON oeh_OEN_ODD __



 * __LEXICON oeh_AN_ODD  __

 ** __LEXICON oeh_AN_ODDNOCOMP  __


 * __LEXICON oeh_OEH_AN_ODD   __


 ** __LEXICON oeh_OEH_AN_ODDNOCOMP  __



 * __LEXICON ø_N_ODD  __



 * __LEXICON e_AN_ODD  __


 * __LEXICON ies_EME __






 * __LEXICON HKE_ODD_NGCOMP __

 * __LEXICON HKE_ODD_COMP  __



 * __LEXICON GEERUVE __

 * __LEXICON JAEDTUVES __

!!Attribute lexica

 * __LEXICON ATTR_0_PRED_0 __

 * __LEXICON ATTR_0 __


 * __LEXICON ATTR_S __

 * __LEXICON ATTR_H __

 * __LEXICON ATTR_N __

 * __LEXICON ATTRCONT __

!!Predicative lexica


 * __LEXICON PRED_0 __


 * __LEXICON PRED_S __

 * __LEXICON PRED_H __


 * __LEXICON PRED_N __

 * __LEXICON PRED_AN __




!!!Odd syllabic stems - adjectives

 * __LEXICON ODDCASE __

 ** __LEXICON ODDCASENOM __

 ** __LEXICON ODDCASEOBL __

 * __LEXICON ije_ODDCASE __

 ** __LEXICON ije_ODDCASENOM __

 ** __LEXICON ije_ODDCASEOBL __




!!!Even syllabic stems - adjectives

 * __LEXICON eCASE __

 ** __LEXICON eCASENOM __

 ** __LEXICON eCASEOBL __



 * __LEXICON aCASE __


 ** __LEXICON aCASENOM __

 ** __LEXICON aCASEOBL __

 * __LEXICON ieCASE __

 ** __LEXICON ieCASEOBL __


 * __LEXICON oeCASE __

 ** __LEXICON oeCASE_NOMSG __

 ** __LEXICON oeCASE_OBL __

 ** __LEXICON A_OE_SGILL_UML __

 ** __LEXICON A_OE __

 ** __LEXICON A_OE_SG __

 ** __LEXICON A_OE_PL __

 ** __LEXICON A_OE_ESS __







!!!Comparative forms

 * __LEXICON EVENCOMP __

 ** __LEXICON EVENCOMPONLY __


 ** __LEXICON EVENSUPONLY __

 * __LEXICON EVENCOMP_oe __

 * __LEXICON ODDCOMP __


 * __LEXICON EVENCOMPCASE __

 * __LEXICON EVENCOMPCASE_oe __



 * __LEXICON DIMCOMP __


 * __LEXICON ÅBPOE __

 ** __LEXICON ÅBPOE_SGILL_UML __

 * __LEXICON ÅBPOE_N_OE __

 ** __LEXICON ÅBPOE_N_OE_SG __

 ** __LEXICON ÅBPOE_N_OE_PL __

 ** __LEXICON ÅBPOE_N_OE_ESS __

 * __LEXICON ABPA __


 ** __LEXICON ABPA_SG __

 ** __LEXICON ABPA_PL __

 * __LEXICON MES __

 * __LEXICON MES_oe __

 * __LEXICON OMMES __


 * __LEXICON LAAKAN __

 * __LEXICON LEEJNES __







!!!Adjective stems

This is one of two parallel files containing adjective stems.
The files represent two alternative interpretation of the same data
(South Saami adjectives).
This file is used for dictionary and icall applications, the alternative file
''adjectives.lexc'' is used for spellchecking.
This file is compiled by in
langs/sma giving the command ''.configure --with-oahpa''
before compiling. The other file (adjectives.lexc) is compiled by default.


----

The file starts as follows:

 !!LEXICON Adjective  


 TG-grammatihkeles:TG-grammatihkel LES ;   \\
 aajmoes:aajmoe s_S_ODD ;			      \\
 aajne:aajne ATTR_0 ;				      \\ ... \\





This file is copied from the common __gtcore__ directory
and ''shall not'' be edited in the __langs__ directory.


!!!General notes

The entries are tagged for language, to satisfy the needs of the 
synthetic speech project.

!!!Language-specific notes
!!This file (smi-propernouns.lexc) when applied to sme


This file was originally written for sme, and is copied directly to
the langs/sme catalogue without modification.

Documenting (parts of) the lexicon structure for sme:

|| Final syll.  || stressed    || unstressed
| final X+i/j   |  DUBAI (V+j) | PIPPI (C+i) 
| other final V |  NYSTØ‡      | ACCRA       

 ‡) Also -i- without a preceeding long vowel, like in __DUBAI__.



!!This file (smi-propernouns.lexc) when applied to sma, smj and smn.

For sma, smj and smn, there is a script, {{src/scripts/smi-sma-conversion.pl}}
changing the lexicon names from sme-style to sma/smj/smn-style. The resulting
file is {{src/morphology/stems/smi-sma-propernouns.lexc}}, with the content
of this file following the text ''Dump from SMI''. This is governed in 
''src/morphology/Makefile.am''


!!Modifications for sma
__MAKI__ er for finske i-finale navn hvor sørsamisk og lulesamisk følger ulike
mønster. PIPPi i smj, ACCRA i sme og sma.

!!Modifications for sma
__BETFAGE__ er spesifikk for lulesamisk, og er identisk med ACCRA for dei andre
samiske språka. BETFAGE skal brukast ved e-finale ACCRA-ord.

!!Modifications for smn

----

The beginning of this file (''smi-propernouns.lexc'') looks as follows 
(and thereafter 31000 similar lines follow):


 A-ha+OLang/NOB:A-ha ACCRA-org ;			     \\
 Aabakken+OLang/NOB:Aa#bakken9 LONDON-sur ;   \\
 Aabel+OLang/NOB:Aabel LONDON-mal ;		     \\
 Aabenraa+OLang/NOB:Aabenraa NYSTØ-sur ;	     \\













!!!Nominal inflection sublexica

!!Inflection for odd-syllable nouns



The basic odd-syll lexicon is: N_ODD_INFL

!Inflection for odd-syllable nouns: lexicon N_ODD_INFL
Short descrioption of this lexicon, and its purpose.

__gierehtse # Odd-syllable test examples:__
* __gierehtse: __ {{gierehtse+N+Sg+Nom }}
* __gierehtsen: __ {{gierehtse+N+Sg+Gen }}
* __gieriehtsasse: __ {{gierehtse+N+Sg+Ill }}
* __gieriehtsisnie: __ {{gierehtse+N+Sg+Ine }}
* __gieriehtsistie: __ {{gierehtse+N+Sg+Ela }}
* __gieriehtsinie: __ {{gierehtse+N+Sg+Com }}
* __gierehtsh: __ {{gierehtse+N+Pl+Nom }}
* __gieriehtsidie: __ {{gierehtse+N+Pl+Acc }}
* __gierehtsi: __ {{gierehtse+N+Pl+Gen }}
* __gieriehtsidie: __ {{gierehtse+N+Pl+Ill }}
* __gieriehtsinie: __ {{gierehtse+N+Pl+Ine }}
* __gieriehtsijstie: __ {{gierehtse+N+Pl+Ela }}
* __gierehtsigujmie: __ {{gierehtse+N+Pl+Com }}
* __gieriehtsinie: __ {{gierehtse+N+Ess }}
* __gierehtsem: __ {{gierehtse+N+Sg+Acc }}


* Odd-syll loanwords: lexicon N_ODD_LOAN


** Odd-syll sg: lexicon N_ODD_SG

** Odd-syll pl: lexicon N_ODD_PL

** Odd-syll loanwords: lexicon N_ODD_ESS

** Default N_ODD plural lexicon: lexicon ÅABPETJH


LEXICON TJE_LASSJE_RESIPR


















__beetnege # Odd-syllable test examples:__
* __beetnege: __ {{beetnege+N+Sg+Nom }}
* __beetneh: __ {{beetnege+N+Sg+Nom }}
* __beetnegen: __ {{beetnege+N+Sg+Gen }}
* __beetnegasse: __ {{beetnege+N+Sg+Ill }}
* __beetnegisnie: __ {{beetnege+N+Sg+Ine }}
* __beetnegistie: __ {{beetnege+N+Sg+Ela }}
* __beetneginie: __ {{beetnege+N+Sg+Com }}
* __beetnegh: __ {{beetnege+N+Pl+Nom }}
* __beetnegidie: __ {{beetnege+N+Pl+Acc }}
* __beetnegi: __ {{beetnege+N+Pl+Gen }}
* __beetnegidie: __ {{beetnege+N+Pl+Ill }}
* __beetneginie: __ {{beetnege+N+Pl+Ine }}
* __beetnegijstie: __ {{beetnege+N+Pl+Ela }}
* __beetnegigujmie: __ {{beetnege+N+Pl+Com }}
* __beetneginie: __ {{beetnege+N+Ess }}



















__åeruve # Odd-syllable test examples:__
* __åeruve: __ {{åeruve+N+Sg+Nom }}
* __åeruven: __ {{åeruve+N+Sg+Gen }}
* __åeruvem: __ {{åeruve+N+Sg+Acc }}
* __åerievasse: __ {{åeruve+N+Sg+Ill }}
* __åerievisnie: __ {{åeruve+N+Sg+Ine }}
* __åerievistie: __ {{åeruve+N+Sg+Ela }}
* __åerievinie: __ {{åeruve+N+Sg+Com }}
* __åeruvh: __ {{åeruve+N+Pl+Nom }}
* __åerievidie: __ {{åeruve+N+Pl+Acc }}
* __åeruvi: __ {{åeruve+N+Pl+Gen }}
* __åerievidie: __ {{åeruve+N+Pl+Ill }}
* __åerievinie: __ {{åeruve+N+Pl+Ine }}
* __åerievijstie: __ {{åeruve+N+Pl+Ela }}
* __åeruvigujmie: __ {{åeruve+N+Pl+Com }}
* __åerievinie: __ {{åeruve+N+Ess }}
* __åerievadtje: __ {{åeruve+N+Der/Dimin+N+Sg+Nom }}
* __åerievadtjen: __ {{åeruve+N+Der/Dimin+N+Sg+Gen }}
* __åerievadtjem: __ {{åeruve+N+Der/Dimin+N+Sg+Acc }}
* __åerievadtjese: __ {{åeruve+N+Der/Dimin+N+Sg+Ill }}
* __åerievadtjesne: __ {{åeruve+N+Der/Dimin+N+Sg+Ine }}
* __åerievadtjeste: __ {{åeruve+N+Der/Dimin+N+Sg+Ela }}
* __åerievadtjine: __ {{åeruve+N+Der/Dimin+N+Sg+Com }}
* __åerievadtjine: __ {{åeruve+N+Der/Dimin+N+Ess }}
* __åerievadtjh: __ {{åeruve+N+Der/Dimin+N+Pl+Nom }}
* __åerievadtji: __ {{åeruve+N+Der/Dimin+N+Pl+Gen }}
* __åerievadtjide: __ {{åeruve+N+Der/Dimin+N+Pl+Acc }}
* __åerievadtjide: __ {{åeruve+N+Der/Dimin+N+Pl+Ill }}
* __åerievadtjine: __ {{åeruve+N+Der/Dimin+N+Pl+Ine }}
* __åerievadtjijste: __ {{åeruve+N+Der/Dimin+N+Pl+Ela }}
* __åerievadtjigujmie: __ {{åeruve+N+Der/Dimin+N+Pl+Com }}
* __åerievadtjine: __ {{åeruve+N+Der/Dimin+N+Ess }}






























__seerije # ODD-syllable test examples:__
* __seerije: __ {{seerije+N+Sg+Nom }}
* __seerijem: __ {{seerije+N+Sg+Acc }}
* __seerijen: __ {{seerije+N+Sg+Gen }}
* __seerijasse: __ {{seerije+N+Sg+Ill }}
* __seerijisnie: __ {{seerije+N+Sg+Ine }}
* __seerijistie: __ {{seerije+N+Sg+Ela }}







__daktere # Odd-syllable test examples:__
* __daktere: __ {{daktere+N+Sg+Nom }}
* __dakteren: __ {{daktere+N+Sg+Gen }}
* __dakterem: __ {{daktere+N+Sg+Acc }}
* __daktarasse: __ {{daktere+N+Sg+Ill }}
* __daktarisnie: __ {{daktere+N+Sg+Ine }}
* __daktaristie: __ {{daktere+N+Sg+Ela }}
* __daktarinie: __ {{daktere+N+Sg+Com }}
* __dakterh: __ {{daktere+N+Pl+Nom }}
* __daktaridie: __ {{daktere+N+Pl+Acc }}
* __dakteri: __ {{daktere+N+Pl+Gen }}
* __daktaridie: __ {{daktere+N+Pl+Ill }}
* __daktarinie: __ {{daktere+N+Pl+Ine }}
* __daktarijstie: __ {{daktere+N+Pl+Ela }}
* __dakterigujmie: __ {{daktere+N+Pl+Com }}
* __daktarinie: __ {{daktere+N+Ess }}
* __daktaradtje: __ {{daktere+N+Der/Dimin+N+Sg+Nom }}
* __daktaradtjen: __ {{daktere+N+Der/Dimin+N+Sg+Gen }}
* __daktaradtjem: __ {{daktere+N+Der/Dimin+N+Sg+Acc }}
* __daktaradtjese: __ {{daktere+N+Der/Dimin+N+Sg+Ill }}
* __daktaradtjesne: __ {{daktere+N+Der/Dimin+N+Sg+Ine }}
* __daktaradtjeste: __ {{daktere+N+Der/Dimin+N+Sg+Ela }}
* __daktaradtjine: __ {{daktere+N+Der/Dimin+N+Sg+Com }}
* __daktaradtjine: __ {{daktere+N+Der/Dimin+N+Ess }}
* __daktaradtjh: __ {{daktere+N+Der/Dimin+N+Pl+Nom }}
* __daktaradtji: __ {{daktere+N+Der/Dimin+N+Pl+Gen }}
* __daktaradtjide: __ {{daktere+N+Der/Dimin+N+Pl+Acc }}
* __daktaradtjide: __ {{daktere+N+Der/Dimin+N+Pl+Ill }}
* __daktaradtjine: __ {{daktere+N+Der/Dimin+N+Pl+Ine }}
* __daktaradtjijste: __ {{daktere+N+Der/Dimin+N+Pl+Ela }}
* __daktaradtjigujmie: __ {{daktere+N+Der/Dimin+N+Pl+Com }}
* __daktaradtjine: __ {{daktere+N+Der/Dimin+N+Ess }}




__australijeenere # Even-syllable test examples:__
* __australijeenere: __ {{australijeenere+N+Sg+Nom }}
* __australijeenerem: __ {{australijeenere+N+Sg+Acc }}
* __australijeeneren: __ {{australijeenere+N+Sg+Gen }}
* __australijeenaristie: __ {{australijeenere+N+Sg+Ela }}




__sisilijaanere # Even-syllable test examples:__
* __sisilijaanere: __ {{sisilijaanere+N+Sg+Nom }}
* __sisilijaanerem: __ {{sisilijaanere+N+Sg+Acc }}
* __sisilijaaneren: __ {{sisilijaanere+N+Sg+Gen }}
* __sisilijaanaristie: __ {{sisilijaanere+N+Sg+Ela }}



__radijaatore # Even-syllable test examples:__
* __radijaatore: __ {{radijaatore+N+Sg+Nom }}
* __radijaatorem: __ {{radijaatore+N+Sg+Acc }}
* __radijaatoren: __ {{radijaatore+N+Sg+Gen }}
* __radijaatorisnie: __ {{radijaatore+N+Sg+Ine }}
* __radijaatoristie: __ {{radijaatore+N+Sg+Ela }}
* __radijaatorinie: __ {{radijaatore+N+Sg+Com }}



__pijaanove # ODD-syllable test examples:__
* __pijaanove: __ {{pijaanove+N+Sg+Nom }}
* __pijaanovem: __ {{pijaanove+N+Sg+Acc }}
* __pijaanoven: __ {{pijaanove+N+Sg+Gen }}
* __pijaanovisnie: __ {{pijaanove+N+Sg+Ine }}
* __pijaanovistie: __ {{pijaanove+N+Sg+Ela }}
* __pijaanovinie: __ {{pijaanove+N+Sg+Com }}



__administraatore# ODD-syllable test examples:__
* __administraatore: __ {{administraatore+N+Sg+Nom }}
* __administraatorem: __ {{administraatore+N+Sg+Acc }}
* __administraatoren: __ {{administraatore+N+Sg+Gen }}
* __administraatorisnie: __ {{administraatore+N+Sg+Ine }}
* __administraatoristie: __ {{administraatore+N+Sg+Ela }}
* __administraatorinie: __ {{administraatore+N+Sg+Com }}



__faktore# Even-syllable test examples:__
* __faktore: __ {{faktore+N+Sg+Nom }}
* __faktorem: __ {{faktore+N+Sg+Acc }}
* __faktoren: __ {{faktore+N+Sg+Gen }}
* __faktorisnie: __ {{faktore+N+Sg+Ine }}
* __faktoristie: __ {{faktore+N+Sg+Ela }}
* __faktorinie: __ {{faktore+N+Sg+Com }}



























!!Inflection for nouns ending in oe


The oe with umlaut generate the uml-ones
and have the non-uml ones as +Use/NG.








The oe without umlaut generate the non-uml-ones
only, naturally without +Use/NG.


Lexicon N_OE_OBL is for the -oe nouns without umlaut
Illative is lifted out in order to allow for Use/NG for the
umlauted ones.





























































































































 LEXICON EETE_LOAN    loanwords with -eete -


__universiteete # Even-syllable test examples:__
* __universiteete: __ {{universiteete+N+Sg+Nom }}
* __universiteetem: __ {{universiteete+N+Sg+Acc }}
* __universiteetesne: __ {{universiteete+N+Sg+Ine }}
* __universiteetetje: __ {{universiteete+N+Der/Dimin+N+Sg+Nom }}
* __universiteetetjem: __ {{universiteete+N+Der/Dimin+N+Sg+Acc }}
* __universiteetetjisnie: __ {{universiteete+N+Der/Dimin+N+Sg+Ine }}

















!!Inflection for NIEJTE_SG nouns: lexicon NIEJTE_SG
Short descrioption of this lexicon, and its purpose.


















__vïelle # Even-syllable test examples:__
* __vïelle: __ {{vïelle+N+Sg+Nom }}
* __vïellese: __ {{vïelle+N+Sg+Ill }}
* __vïelline: __ {{vïelle+N+Sg+Com }}
* __vïelletje: __ {{vïelle+N+Der/Dimin+N+Sg+Nom }}
* __vïelletjasse: __ {{vïelle+N+Der/Dimin+N+Sg+Ill }}
* __vïellemem: __ {{vïelle+N+Sg+Acc+PxSg1 }}
* __vïelleme: __ {{vïelle+N+Sg+Acc+PxSg1 }}
* __vïellemdh: __ {{vïelle+N+Sg+Acc+PxSg2 }}
* __vïellese: __ {{vïelle+N+Sg+Nom+PxSg3 }}
* __vïellebe: __ {{vïelle+N+Sg+Nom+PxSg3 }}







 LEXICON KONTO   Lexicon for vowel-final words with invariant stems"
{{{
  : KONTODECL ; 
}}}
 LEXICON KONTODECL  Lexicon for vowel-final words with invariant stems"
{{{
                +Sg:     KONTO_SG ; 
                +Pl:     KONTO_PL ; 
                         EVEN_ESS ; 
          +Cmp/SgNom:     R        ; 
          +Cmp/SgGen:%>n  R        ; 
          +Cmp/PlGen:%>j  R        ; 
  +Der1+Der/Dimin+N:%»tj GÅATETJE ; 
}}}





































!!Px lexica     = Copy from Julev









































 * __LEXICON ACASETAG__  is for 1e+Num+Sg+Num:1e






 The __LEXICON ORD_DOTwBACKTRACK__ is used to handle the tokenisation
of ordinals. Strings like {{10.}} are inherently ambiguous — they can eitiher
be a regular cardinal followed by an end-of-sentence full stop, or they can
be an ordinal, potentially in the middle of a sentence. Regular fst's know
nothing about this double nature, so we just give the default ordinal
analysis. But for pmatch-based lookup and tokenisation, we try to find all
the alternatives. The lexicon contains just the following two lines:
{{{
     +Use/-PMatch:%.                              # ; 
  < "+Use/PMatch":0 "@P.Pmatch.Backtrack@" 0:%. > # ; 
}}}
The idea is that input like {{10.}} can then be analysed both as the ordinal
{{10.}}, and as the sequence cardinal {{10}} + the sentence ending full stop
{{.}}. The lexc entry above will only give the ordinal analysis of {{10.}},
but then tell the fst runtime to go back and try to find alternatives for the
same input, in which case it will find that {{10}} + {{.}} matches the same
input. Both tokenisations will then be printed by {{hfst-tokenise --giella}},
so that further processing can be done to choose the correct one in a given
context. The location of the symbol {{@P.Pmatch.Backtrack@}} determines where
the split is being done, and thus which parts could potentially get other
analyses.











This is the file for the South Saami verb inflection and derivation.

!!!Verbal inflection sublexica

Table of content for this file:

* The auxiliaries
** The negative verb
** Other auxiliaries
* Odd-syllable verbs
** Inflection common to all odd verbs
* Even-syllable verbs
** Nominal derivation sublexica
* Verbal affixes
** Finite forms
** Even
*** Present
*** Imperative
*** Present
** Odd
*** Present
*** Past
*** Imperative
** Common even-odd
*** Present
*** Past


!!!The auxiliaries

First we just list the auxiliaries and their inflection.

 * __LEXICON LEA  __ the copula


 ** __LEXICON LEA-PRES  __


 ** __LEXICON LEA-PRET __

 ** __LEXICON LEA-IMP __


!!The negative verb

 * __LEXICON NEG  __










 ** __LEXICON OLLE  __


 ** __LEXICON NEGIMP  __

 ** __LEXICON IJ-PRES  __


 ** __LEXICON IJ-COPULA  __



!!Other auxiliaries

 * __LEXICON EDTJEDH  __

 ** __LEXICON ED-PRES  __



 ** __LEXICON ED-PRET __

 ** __LEXICON ED-IMP __




!!!Odd-syllable verbs

Odd syllable verbs differ in Prt Sg3.
This form is treated separately, and
the rest of the paradigm is conflated.


 * __LEXICON TJOEVERIDH_IV  __




 * __LEXICON GOLTELIDH_TV  __

 * __LEXICON AALHTEDIDH_TV  __

 * __LEXICON GOLTELIDH_IV  __


 * __LEXICON GOLTELIDH   __, odd-syll with -adte- as Der2




 * __LEXICON BALVEDIDH  __





 * __LEXICON RIHPESIDH   __,  -nidh and -sidh

 * __LEXICON AAJVESTIDH_TV     __, for stems ending -t-: dåajvoeht-, odd-syll with -alle- as Der2 and passive -sovvedh

 * __LEXICON DÅAJVOEHTIDH_TV  __



 * __LEXICON DÅAJVOEHTIDH_IV  __


 * __LEXICON DÅAJVOEHTIDH    __ for stems ending -t-: dåajvoeht-, odd-syll with -alle- as Der2



!!Inflection common to all odd verbs

 * __LEXICON COMMON-ODD   __

* Finite forms

* Infinite forms



* Derivations



!!!Even-syllable verbs

 * __LEXICON MAEHTEDH_TV  __


 * __LEXICON BÅETEDH_TV  __

 * __LEXICON BÅETEDH_TV_ePRET  __

 * __LEXICON BÅETEDH_IV  __

 * __LEXICON BÅETEDH_IV_ePRET  __


 * __LEXICON BÅETEDH   __ row A - Group I



 * __LEXICON BÅETEDH_NOTVGEN   __ row A - Group Ixxf


 * __LEXICON SEVTEDH   __ row A - Group I  IMPERSONALS!




 * __LEXICON ÅEREDH   __ row A - Group I   Hasselbrink: "öörim."- (Thomassen) Qvigstad: "vöörtim" 




 * __LEXICON ÅEREDH_TV   __ row A - Group I   NO -øø-UMLAUT!!!!





 * __LEXICON TJEARODH_TV  __


 * __LEXICON TJEARODH_IV  __


 * __LEXICON TJEARODH   __ row C - Group II




 * __LEXICON ABRODH   __ row C - Group II


 * __LEXICON TSEAHKODH_TV  __

 * __LEXICON TSEAHKODH_IV  __


 * __LEXICON TSEAHKODH   __ row C - Group II    these have (lexicalized) diminutives on -estit, and passives on -algidh


 * __LEXICON GUARKEDH_TV  __

 * __LEXICON GUARKEDH_IV  __


 * __LEXICON GUARKEDH   __ row B - Group III

Fått tilbakemelding på denne om at "jarkah" er +Ind+Prs+Sg2, og "Jarkh!" er +Imprt. Har forelöpig satt denne inn som Err/Orth


 * __LEXICON SIJHTEDH_TV   __



 * __LEXICON TJOEHPEDH_TV  __

 * __LEXICON GALKEDH_IV  __



 * __LEXICON TJOEHPEDH_IV  __


 * __LEXICON TJOEHPEDH   __ row D - Group IV


 * __LEXICON TJOEHPEDH_NOTVGEN  __


 * __LEXICON GALKEDH_CONT   __ row D - Group IV




 * __LEXICON BIEGKEDH   __ row D - Group IV !impersonals

 * __LEXICON BÅÅHKEDH_TV  __

 * __LEXICON SÅÅJHTEDH_IV  __



 * __LEXICON BÅÅHKEDH_IV  __


 * __LEXICON BÅÅHKEDH   __ row E - Group V

 * __LEXICON SÅÅJHTEDH_CONT   __ row E - Group V

 * __LEXICON VÅÅJNEDH  __



 * __LEXICON GÖÖLEDH_TV  __


 * __LEXICON GÖÖLEDH_IV  __


 * __LEXICON GÖÖLEDH   __ row F - Group VI


 * __LEXICON BÖÖVTEDH   __ row F - Group VI


 * __LEXICON EEREDH_TV  __

 * __LEXICON EEREDH_IV  __




 * __LEXICON ÅARAJEHTEDH_TV  __


 * __LEXICON ÅARAJEHTEDH_IV  __


 * __LEXICON ÅARAJEHTEDH   __ row A - Group I

 * __LEXICON BUARADEHTEDH  __


 * __LEXICON GOEGKERDADTEDH_TV  __

 * __LEXICON GOEGKERDADTEDH_IV  __


 * __LEXICON GOEGKERDADTEDH   __ row D - Group IV

 * __LEXICON OBREDADTEDH  __

 * __LEXICON GÅETEDH_TV  __

 * __LEXICON GÅETEDH_IV  __


 * __LEXICON GÅETEDH   __ from Der/InchL

 * __LEXICON STIEHPEGÅETEDH  __


 * __LEXICON AHTJE_TV  __

 * __LEXICON AHTJE_IV  __

 * __LEXICON OBRIJAHTJEDH  __


 * __LEXICON AHTJE   __ row D - Group IV

 * __LEXICON SOVVEDH __row D - Group IV

 * __LEXICON IV_PASSIVE_L  __ - Passive of intransitive verbs => impersonate verbs, like "dïjvelduvvieh" = "(de sakene) ble diskutert", from "dïjveldidh" = "diskutere" (IV), only used in 3rd person Sg and Pl.



 * __LEXICON IV_PASSIVE_S   __ row E - Group V  NB! FOR already derivated PASSIVES!!!


 * __LEXICON LGIDH  __









Nominal derivation sublexica




 * __LEXICON LAAHKOEH_ODD  __

 ** __LEXICON LAAHKOEH_ÅBPOE  __


 ** __LEXICON LAAHKOEH_OMMES   __



 * __LEXICON IGENSUFF   __


!!!Verbal affixes

!!Finite forms

!Even

!Present

 * __LEXICON V-I-PRS-SG   __ Merge with V-EVEN-PRS if nothing special here.

 * __LEXICON V-II-PRS-SG   __

 * __LEXICON V-III-PRS-SG   __

 * __LEXICON VSUF-V-EVEN-PRS   __


 * __LEXICON VSUF-EVEN-PRS-DUPL   __


 * __LEXICON VSUF-VI-EVEN-PRS   __


!Imperative

 * __LEXICON VSUF-EVEN-IMP   __


 * __LEXICON VSUF-II-EVEN-IMP  __

 * __LEXICON VSUF-III-EVEN-IMP  __
!Present

 * __LEXICON V-IV-EVEN-PRS  __




!!Odd

!Present

 * __LEXICON VSUF-ODD-PRS  __

 ** __LEXICON V-ODD-PRS-SG  __

 ** __LEXICON V-ODD-PRS-DUPL  __

 ** __LEXICON ODD_PRS_NON_DU3  __

 ** __LEXICON ODD_PRS_DU3  __


!Past

 * __LEXICON VSUF-ODD-PRT  __

!Imperative

 * __LEXICON VSUF-ODD-IMP   __




!!Common even-odd


!Present

 * __LEXICON V-PRS-SG-12   __ Kutt denne viss ikkje ref til

 * __LEXICON V-PRS-SG-1  __

 * __LEXICON V-PRS-SG-2  __

 * __LEXICON V-PRS-SG-3  __


!Past

 * __LEXICON VSUF-PRT  __



 * __LEXICON VSUF-PRT-SG-12  __

 * __LEXICON VSUF-PRT-SG-3  __


 * __LEXICON VSUF-PRT-DUPL  __











LEXICON V-EVEN-PRS
  V-PRS-SG-12 ;
  V-PRS-SG-3 ;
   V-EVEN-PRS-DUPL ;






!!!S O U T H   S Á M I   D I S A M B I G U A T O R          




!!Delimiters 


"<.>" "<!>" "<?>" "<...>" "<¶>" sent


!!Tags and sets 

!BOS/EOS:

* (>>>) (<s>)
  (<<<) (</s>)

!Morphological tags

* N 
* Sg 
Pl
* Nom
Acc
Gen
Ine
Ela
Ill
Com
Ess

* PxSg1 
PxSg2
PxSg3
PxPl1
PxPl3
PxPl3





* Sg1 Sg2 Sg3 Pl1 Pl2 Pl3 ;















!Derivation tags

* Der/A
Der/Car
Der/Dimin 
Der/InchL
Der/NomAct
Der/NomAg
Der/PassL
Der/PassS
Der/Rec
Der/adte
Der/ahtje
Der/alla
Der/d
Der/eds
Der/ht
Der/htalle 
Der/htj
 Der/ihks
Der/ijes
Der/l
Der/laakan
Der/ldahke
Der/ldh
Der/ldihkie
Der/les
Der/lg
Der/st
Der/vuota 



<vdic>



! Semantic tags

Sem/Act
Sem/Amount
etc.





!Syntactic tags

* @CNP
@CVP
@+FAUXV
@+FMAINV
@-FAUXV
@-FMAINV
MAINV  = 



!Titles


REAL-TITLE
OFFICE
TITLE


!Sets of morphological tags for syntactic use

CASES
ADVLCASE
NUMBER















!Noun sets





INSTITUTION
MEDIA
ORGANIZATION
EDUCATION
CURRENCY
LESSON
OTHER-INDUSTRY 












!Verb sets


REALCOPULAS

COPULAS

V-NOT-COP

MOD-ASP
















!Adective sets



!Adverb sets


GUKTIEGOSSE

DAESTIE


ILLADV

INEADV1

ELAADV1

INEADV

ELAADV

DV-MOD-ADV


ADV-MOD-NP

GRADE-ADV


!Postposition sets

ILLPO


!BOUNDARY SETS


S-BOUNDARY
REALCLB

SV-BOUNDARY

NP-BOUNDARY


!Derivation sets

V-DER

V-DER-SUF

N-DER
N-DER-SUF

A-DER
A-DER-SUF


PASS

LEX-V
LEX-N
LEX-A

VERB-FORMS
2-PERS











 !!!Disambiguation rules




Rule for adding Sem/Date as a tag to readings which looks like dates (fjernes når vi får felles numeralfil fra shared)

!!Guessing: Rule for adding Adv Sem/Adr as a tag to readings which looks addresses


!!Guessing: Rule for adding Adv Sem/Adr as a tag to readings which looks addresses







Rules for adding <vdic> to verbs denoting verbal actions like: ... jeahta Aili Kestkitalo.








!!Cycle 0 (Early rules)

Removing non-lexicalised forms when lexicalised 














!Numerals and ACR




!Numerals in QPs




!CC og not (spesifikke regler lenger ned)



!Interj





!Possessive suffix


REmove Px if not family



!Pronouns






!Proper nouns

















!Verbs







!Postpositions
Selecting postpositions when preceded by genitives, etc.





!Particles and adverbs





























!Adjective or Indef


!Demonstratives

























!Genitive




!Adjective or not


Rel or Interr







!Adverbs
Selecting adverbs in local contexts








!Verbs
Selecting verbs in local contexts, based upon agreement patterns












Selecting imperative sentence-initially with appropriate right context




Remove verb readings










!!Mapping rules

!CC- and CS-Mapping

* __COMPCS__  @COMP-CS< to Adv or A after goh etc.



!!CNP mapping

Mapping CNP to CC and CS.






!!CVP Mapping

Mapping @CVP to all CS











Attributes or not








!!PrfPrc

Select PrfPrc if DerNomAct



Mapping verbs
























!__killifVinCohort__ This rule removes all other readings, if there is a mapped V reading in the same cohort. Every case which this goes wrong, should be fixed in mapping rules or previous disrules.



!!Person

leah Prs Sg2 = Pl3




Select Inf If Infv







!!Span sentences




 !Nomen

Remove Prop Attr if not 1 Prop 















!Verb or Noun







!!CC and CS or Adv















!!Adj or Adv








!!Grammatisk ord eller N eller A











!!N or V













Ger or Der/NomAct


Adj or Indef


Num






Adv or Po/Pr


Illative or genetive


Essive


Comitative










Accusative or illative

Indef or Adv

special lemmas







Adverb context prefers Adv


Verb person vs. Inf -- moved here in order to have the pronouns disambiguated first.





!!!Proper nouns

Rule set taken from sme









































































gellie as numeral, not pronoun



Adv modifying a pronoun or noun




















                  !!!South Sámi morphophonological rule set                   















!!!Rules


__e deletion before i-initial suffix__  


* __manneX2ine __
* __mann00ine __


__Diphthong simplification ie:e__  



* __dåeried%>%^DISIMPem __
* __dåer0ed%>0em __

* __*dåeried%>%^DISIMPem __ (is not standard language)
* __*dåeried%>0em __ (is not standard language)

* __gieriehtse%>%^DISIMPm __
* __gier0ehtse%>0m __

* __*gieriehtse%>%^DISIMPm __ (is not standard language)
* __*gieriehtse%>0m __ (is not standard language)

* __gijmie%>%^COMPDISIMPbe __
* __gijm0e%>0be __

* __*gijmie%>%^COMPDISIMPbe __ (is not standard language)
* __*gijmie%>0be __ (is not standard language)



__Diphthong simplification oe:o__  



* __daaroest%>%^DISIMPem __
* __daaro0st%>0em __

* __*daaroest%>%^DISIMPem __ (is not standard language)
* __*daaroest%>0em __ (is not standard language)

* __gaaloehke%>%^DISIMPm __
* __gaalo0hke%>0m __

* __*gaaloehke%>%^DISIMPm __ (is not standard language)
* __*gaaloehke%>0m __ (is not standard language)




* __jearkoe%>%^COMPDISIMPbe __
* __jeark0e%>0be __

* __*jearkoe%>%^COMPDISIMPbe __ (is not standard language)
* __*jearkoe%>0be __ (is not standard language)



__a/e alternation__  



* __aatskad%>%^DISIMPem __
* __aatsked%>0em __

* __*aatskad%>%^DISIMPem __ (is not standard language)
* __*aatskad%>0em __ (is not standard language)

* __daktare%>%^DISIMPm __
* __daktere%>0m __

* __*daktare%>%^DISIMPm __ (is not standard language)
* __*daktare%>0m __ (is not standard language)


* __gæhtja%>%^COMPDISIMPbe __
* __gæhtje%>0be __

* __*gæhtja%>%^COMPDISIMPbe __ (is not standard language)
* __*gæhtja%>0be __ (is not standard language)












__a/i alternation__  



* __jåhtaj%^DISIMP%>em __
* __jåhtij0%>em __

* __*jåhtaj%^DISIMP%>em __ (is not standard language)
* __*jåhtaj0%>em __ (is not standard language)

__a/0 alternation__  








__Even syllabic verbs Du3 e/i alternation V__  

__Proper PlGen, PlCom__  

__Even syllabic verbs Du2Pl12 e/i V__  


__Even syllabic verbs Du2Pl12 e/i V part2__  

__Even syllabic verbs Du2Pl12 ':0 V__  



* __vååjn'eX4jibie __
* __vååjn0i0jibie __

* __*vååjn'eX4jibie __ (is not standard language)
* __*vååjn0e0jibie __ (is not standard language)


* __juht»ieje%>%^NOMAGieDISIMPm __
* __juht»i0je%>0m __

* __*juht»ieje%>%^NOMAGieDISIMPm __ (is not standard language)
* __*juht»ieje%>0m __ (is not standard language)






















* __kliht%^aLATUS%»tje%^DISIMP __
* __klæhte»tje0 __

* __kliht%^aLATUS%»tj%>asse __
* __klæhta»tj%>asse __

* __jepts%^aLATUS%»tje%^DISIMP __
* __japtse»tje0 __

* __jepts%^aLATUS%»tj%>asse __
* __japtsa»tj%>asse __

* __gull%^aLATUS%»tje%^DISIMP __
* __gålle»tje0 __

* __gull%^aLATUS%»tj%>asse __
* __gålla»tj%>asse __

* __biss%>%^1UMLam __
* __bæss%>0am __

* __belt%>%^1UMLam __
* __balt%>0am __

* __buhtj%>%^1UMLa __
* __båhtj%>0a __

* __paek%>%^1UMLa __
* __paak%>0a __

* __bået%>%^1UMLa __
* __båat%>0a __

* __buel%>%^1UMLa __
* __bual%>0a __

* __kliht%>%^1UMLan __
* __klæht%>0an __

* __jepts%>%^1UMLan __
* __japts%>0an __

* __gull%>%^1UMLan __
* __gåll%>0an __

* __gaevl%>%^1UMLan __
* __gaavl%>0an __

* __gået%>%^1UMLan __
* __gåat%>0an __

* __njuesl%>%^1UMLan __
* __njuasl%>0an __




* __jieht%>%^1UMLa __
* __jeaht%>0a __

* __*jieht%>%^1UMLa __ (is not standard language)
* __*jieht%>0a __ (is not standard language)

* __sjiell%>%^1UMLan __
* __sjeall%>0an __


* __gået^aLATUS»tje^DISIMP __
* __gåate»tje0 __


* __gælj%>%^2UMLe __
* __gylj%>0e __

* __færhtje%>%^2UMLse __
* __fyrhtje%>0se __

* __hahtje%>%^2UMLse __
* __hohtje%>0se __

* __rånhtje%>%^2UMLse __
* __ronhtje%>0se __

* __*færhtje%>%^2UMLse __ (is not standard language)
* __*færhtje%>0se __ (is not standard language)

* __*hahtje%>%^2UMLse __ (is not standard language)
* __*hahtje%>0se __ (is not standard language)

* __*rånhtje%>%^2UMLse __ (is not standard language)
* __*rånhtje%>0se __ (is not standard language)








* __tjear%>%^2UMLe __
* __tjyör%>0e __

* __*tjear%>%^2UMLe __ (is not standard language)
* __*tjear%>0e __ (is not standard language)

* __bearke%>%^2UMLse __
* __byörke%>0se __

* __*bearke%>%^2UMLse __ (is not standard language)
* __*bearke%>0se __ (is not standard language)

* __mearhtje%>%^2UMLse __
* __myörhtje%>0se __

* __*mearhtje%>%^2UMLse __ (is not standard language)
* __*mearhtje%>0se __ (is not standard language)



* __haare%>%^2UMLse __
* __hååre%>0se __

* __*haare%>%^2UMLse __ (is not standard language)
* __*haare%>0se __ (is not standard language)

* __råafe%>%^2UMLse __
* __rååfe%>0se __

* __*råafe%>%^2UMLse __ (is not standard language)
* __*råafe%>0se __ (is not standard language)




* __mïnn%>%^3sUMLa __
* __mænn%>0a __

* __jovk%>%^3sUMLa __
* __jåvk%>0a __





* __tjïel%>%^3sUMLa __
* __tjeal%>0a __

* __roeht%>%^3sUMLa __
* __ruaht%>0a __



* __mïnn%>%^3dUMLien __
* __minn%>0ien __

* __bark%>%^3dUMLien __
* __berk%>0ien __

* __jovk%>%^3dUMLien __
* __juvk%>0ien __


* __tjïek%>%^3dUMLien __
* __tjiek%>0ien __

* __dïjveld»ovv%^3dUMLieh __
* __dïjveld»uvv0ieh __

* __*dïjveld%»ovv%^3dUMLieh __ (is not standard language)
* __*dïjveld»ovv0ieh __ (is not standard language)









* __jieht%>%^iUMLim __
* __jeeht%>0im __

* __tjael%>%^iUMLim __
* __tjeel%>0im __




* __bået%>%^iUMLim __
* __bööt%>0im __

* __vuejn%>%^iUMLim __
* __vööjn%>0im __


* __heps%>%^iUMLim __
* __hips%>0im __

* __gesn%>%^iUMLim __
* __gisn%>0im __




* __maan%^aLATUS%»tje%^DISIMP __
* __maane»tje0 __

* __*maan%^aLATUS%»tje%^DISIMP __ (is not standard language)
* __*maana»tje0 __ (is not standard language)

* __maan%^aLATUS%»tj%>asse __
* __maana»tj%>asse __

* __*maan%^aLATUS%»tj%>asse __ (is not standard language)
* __*maane»tj%>asse __ (is not standard language)



* __biss»%^PASSUMLedh __
* __byss»0edh __

* __sïrr»%^PASSUMLedh __
* __syrr»0edh __

* __*sïrr»%^PASSUMLedh __ (is not standard language)
* __*sïrr»0edh __ (is not standard language)


* __gælj»%^PASSUMLedh __
* __gylj»0edh __

* __*gælj»%^PASSUMLedh __ (is not standard language)
* __*gælj»0edh __ (is not standard language)



* __best»%^PASSUMLedh __
* __bost»0edh __

* __*best»%^PASSUMLedh __ (is not standard language)
* __*best»0edh __ (is not standard language)

* __darj»%^PASSUMLedh __
* __dorj»0edh __

* __*darj»%^PASSUMLedh __ (is not standard language)
* __*darj»0edh __ (is not standard language)



* __juht»%^PASSUMLedh __
* __joht»0edh __

* __*juht»%^PASSUMLedh __ (is not standard language)
* __*juht»0edh __ (is not standard language)

* __gåhp»%^PASSUMLedh __
* __gohp»0edh __

* __*gåhp»%^PASSUMLedh __ (is not standard language)
* __*gåhp»0edh __ (is not standard language)

* __govl»%^PASSUMLedh __
* __govl»0edh __




* __viedt»%^PASSUMLedh __
* __vyödt»0edh __

* __*viedt»%^PASSUMLedh __ (is not standard language)
* __*viedt»0edh __ (is not standard language)

* __tjear»%^PASSUMLedh __
* __tjyör»0edh __

* __*tjear»%^PASSUMLedh __ (is not standard language)
* __*tjear»0edh __ (is not standard language)

* __bïepm»%^PASSUMLedh __
* __byöpm»0edh __

* __*bïepm»%^PASSUMLedh __ (is not standard language)
* __*bïepm»0edh __ (is not standard language)


* __daejr»%^PASSUMLedh __
* __dååjr»0edh __

* __gaat»%^PASSUMLedh __
* __gååt»0edh __


* __gaat»%^PASSUMLedh __
* __gååt»0edh __

* __åest»%^PASSUMLedh __
* __ååst»0edh __


* __vuejn»%^PASSUMLedh __
* __vååjn»0edh __

* __guark»%^PASSUMLedh __
* __gåårk»0edh __

* __våaj»%^PASSUMLedh __
* __vååj»0edh __

* __voessj»%^PASSUMLedh __
* __vååssj»0edh __



* __buel»%^htjidhUMLehtjidh __
* __boel»0ehtjidh __

* __*buel»%^htjidhUMLehtjidh __ (is not standard language)
* __*buel»0ehtjidh __ (is not standard language)


* __paek»%^htjidhUMLehtjidh __
* __paak»0ehtjidh __

* __*paek»%^htjidhUMLehtjidh __ (is not standard language)
* __*paek»0ehtjidh __ (is not standard language)







* __veaj»%^didhUMLedidh __
* __vïej»0edidh __

* __*veaj»%^didhUMLedidh __ (is not standard language)
* __*veaj»0edidh __ (is not standard language)

* __guark»%^didhUMLedidh __
* __goerk»0edidh __

* __*guark»%^didhUMLedidh __ (is not standard language)
* __*guark»0edidh __ (is not standard language)


* __skælk»%^didhUMLedidh __
* __skïlk»0edidh __

* __*skælk»%^didhUMLedidh __ (is not standard language)
* __*skælk»0edidh __ (is not standard language)

* __plåtjk»%^didhUMLedidh __
* __plotjk»0edidh __

* __*plåtjk»%^didhUMLedidh __ (is not standard language)
* __*plåtjk»0edidh __ (is not standard language)





* __bået»iest»%^adteUMLalledh __
* __båat»0ast»0alledh __

* __*bået»iest»%^adteUMLalledh __ (is not standard language)
* __*bået»0ast»0alledh __ (is not standard language)

* __*bået»iest»%^adteUMLalledh __ (is not standard language)
* __*båat»iest»0alledh __ (is not standard language)


* __tjear»oel»%^adteUMLadtedh __
* __tjyör»0el»0adtedh __

* __*tjear»oel»%^adteUMLadtedh __ (is not standard language)
* __*tjear»0el»0adtedh __ (is not standard language)

* __*tjear»oel»%^adteUMLadtedh __ (is not standard language)
* __*tjyör»oel»0adtedh __ (is not standard language)





* __dåeriedi%>dh __
* __dåeriedi%>dh __

* __bisse%>dh __
* __bisse%>dh __

* __belte%>dh __
* __belte%>dh __

* __buhtje%>dh __
* __buhtje%>dh __

* __paeke%>dh __
* __paeke%>dh __

* __båete%>dh __
* __båete%>dh __

* __buele%>dh __
* __buele%>dh __

* __æbjo%>dh __
* __æbjo%>dh __

* __hajko%>dh __
* __hajko%>dh __

* __gåhpo%>dh __
* __gåhpo%>dh __

* __tjearo%>dh __
* __tjearo%>dh __

* __baajsko%>dh __
* __baajsko%>dh __

* __gåaro%>dh __
* __gåaro%>dh __

* __skælke%>dh __
* __skælke%>dh __

* __skajke%>dh __
* __skajke%>dh __

* __plåtjke%>dh __
* __plåtjke%>dh __

* __sleapke%>dh __
* __sleapke%>dh __

* __snjåarke%>dh __
* __snjåarke%>dh __

* __sïrre%>dh __
* __sïrre%>dh __

* __sarje%>dh __
* __sarje%>dh __

* __sodte%>dh __
* __sodte%>dh __

* __skïerke%>dh __
* __skïerke%>dh __

* __slaapke%>dh __
* __slaapke%>dh __

* __snjåare%>dh __
* __snjåare%>dh __

* __tjoehpe%>dh __
* __tjoehpe%>dh __

* __skylle%>dh __
* __skylle%>dh __

* __aalhteroste%>dh __
* __aalhteroste%>dh __

* __skyöre%>dh __
* __skyöre%>dh __

* __vååjne%>dh __
* __vååjne%>dh __

* __skilhte%>dh __
* __skilhte%>dh __

* __sijle%>dh __
* __sijle%>dh __

* __snjurme%>dh __
* __snjurme%>dh __

* __snjeere%>dh __
* __snjeere%>dh __

* __gööle%>dh __
* __gööle%>dh __




* __aajvest%^ConsDel»sovvedh __
* __aajve0t0»sovvedh __



* __laajhna#aaltoe __
* __laajhna-aaltoe __

* __aerpie#eeke __
* __aerpie-eeke __

* __*laajhna#aaltoe __ (is not standard language)
* __*laajhna#aaltoe __ (is not standard language)

* __*aerpie#eeke __ (is not standard language)
* __*aerpie#eeke __ (is not standard language)







* __Aevjie#aesie __
* __Aevjie#aesie __

* __Aevjie#aesiede __
* __Aevjie-eesi0de __
