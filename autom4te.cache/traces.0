m4trace:/opt/local/share/aclocal-1.16/amversion.m4:20: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/opt/local/share/aclocal-1.16/amversion.m4:37: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/opt/local/share/aclocal-1.16/auxdir.m4:51: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/opt/local/share/aclocal-1.16/cond.m4:32: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/opt/local/share/aclocal-1.16/depend.m4:156: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/opt/local/share/aclocal-1.16/depend.m4:166: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/opt/local/share/aclocal-1.16/depend.m4:189: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/opt/local/share/aclocal-1.16/depout.m4:52: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  Try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/opt/local/share/aclocal-1.16/depout.m4:65: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/opt/local/share/aclocal-1.16/init.m4:171: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/opt/local/share/aclocal-1.16/init.m4:198: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/opt/local/share/aclocal-1.16/install-sh.m4:21: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/opt/local/share/aclocal-1.16/lead-dot.m4:19: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/opt/local/share/aclocal-1.16/make.m4:41: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/opt/local/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/opt/local/share/aclocal-1.16/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/opt/local/share/aclocal-1.16/missing.m4:38: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/opt/local/share/aclocal-1.16/obsolete.m4:15: -1- AC_DEFUN([AM_CONFIG_HEADER], [AC_DIAGNOSE([obsolete],
['$0': this macro is obsolete.
You should use the 'AC][_CONFIG_HEADERS' macro instead.])dnl
AC_CONFIG_HEADERS($@)])
m4trace:/opt/local/share/aclocal-1.16/obsolete.m4:24: -1- AC_DEFUN([AM_PROG_CC_STDC], [AC_PROG_CC
am_cv_prog_cc_stdc=$ac_cv_prog_cc_stdc
AC_DIAGNOSE([obsolete],
['$0': this macro is obsolete.
You should simply use the 'AC][_PROG_CC' macro instead.
Also, your code should no longer depend upon 'am_cv_prog_cc_stdc',
but upon 'ac_cv_prog_cc_stdc'.])])
m4trace:/opt/local/share/aclocal-1.16/obsolete.m4:27: -1- AC_DEFUN([AM_C_PROTOTYPES], [AC_FATAL([automatic de-ANSI-fication support has been removed])])
m4trace:/opt/local/share/aclocal-1.16/obsolete.m4:28: -1- AU_DEFUN([fp_C_PROTOTYPES], [AM_C_PROTOTYPES])
m4trace:/opt/local/share/aclocal-1.16/obsolete.m4:28: -1- AC_DEFUN([fp_C_PROTOTYPES], [AC_DIAGNOSE([obsolete], [The macro `fp_C_PROTOTYPES' is obsolete.
You should run autoupdate.])dnl
AM_C_PROTOTYPES])
m4trace:/opt/local/share/aclocal-1.16/options.m4:12: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/opt/local/share/aclocal-1.16/options.m4:18: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/opt/local/share/aclocal-1.16/options.m4:24: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/opt/local/share/aclocal-1.16/options.m4:30: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/opt/local/share/aclocal-1.16/prog-cc-c-o.m4:44: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/opt/local/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/opt/local/share/aclocal-1.16/python.m4:222: -1- AC_DEFUN([AM_PATH_PYTHON], [
  dnl Find a Python interpreter.  Python versions prior to 2.0 are not
  dnl supported. (2.0 was released on October 16, 2000).
  m4_define_default([_AM_PYTHON_INTERPRETER_LIST],
[python python2 python3 dnl
 python3.9 python3.8 python3.7 python3.6 python3.5 python3.4 python3.3 dnl
 python3.2 python3.1 python3.0 dnl
 python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1 dnl
 python2.0])

  AC_ARG_VAR([PYTHON], [the Python interpreter])

  m4_if([$1],[],[
    dnl No version check is needed.
    # Find any Python interpreter.
    if test -z "$PYTHON"; then
      AC_PATH_PROGS([PYTHON], _AM_PYTHON_INTERPRETER_LIST, :)
    fi
    am_display_PYTHON=python
  ], [
    dnl A version check is needed.
    if test -n "$PYTHON"; then
      # If the user set $PYTHON, use it and don't search something else.
      AC_MSG_CHECKING([whether $PYTHON version is >= $1])
      AM_PYTHON_CHECK_VERSION([$PYTHON], [$1],
			      [AC_MSG_RESULT([yes])],
			      [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
      am_display_PYTHON=$PYTHON
    else
      # Otherwise, try each interpreter until we find one that satisfies
      # VERSION.
      AC_CACHE_CHECK([for a Python interpreter with version >= $1],
	[am_cv_pathless_PYTHON],[
	for am_cv_pathless_PYTHON in _AM_PYTHON_INTERPRETER_LIST none; do
	  test "$am_cv_pathless_PYTHON" = none && break
	  AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [$1], [break])
	done])
      # Set $PYTHON to the absolute path of $am_cv_pathless_PYTHON.
      if test "$am_cv_pathless_PYTHON" = none; then
	PYTHON=:
      else
        AC_PATH_PROG([PYTHON], [$am_cv_pathless_PYTHON])
      fi
      am_display_PYTHON=$am_cv_pathless_PYTHON
    fi
  ])

  if test "$PYTHON" = :; then
  dnl Run any user-specified action, or abort.
    m4_default([$3], [AC_MSG_ERROR([no suitable Python interpreter found])])
  else

  dnl Query Python for its version number.  Getting [:3] seems to be
  dnl the best way to do this; it's what "site.py" does in the standard
  dnl library.

  AC_CACHE_CHECK([for $am_display_PYTHON version], [am_cv_python_version],
    [am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[[:3]])"`])
  AC_SUBST([PYTHON_VERSION], [$am_cv_python_version])

  dnl Use the values of $prefix and $exec_prefix for the corresponding
  dnl values of PYTHON_PREFIX and PYTHON_EXEC_PREFIX.  These are made
  dnl distinct variables so they can be overridden if need be.  However,
  dnl general consensus is that you shouldn't need this ability.

  AC_SUBST([PYTHON_PREFIX], ['${prefix}'])
  AC_SUBST([PYTHON_EXEC_PREFIX], ['${exec_prefix}'])

  dnl At times (like when building shared libraries) you may want
  dnl to know which OS platform Python thinks this is.

  AC_CACHE_CHECK([for $am_display_PYTHON platform], [am_cv_python_platform],
    [am_cv_python_platform=`$PYTHON -c "import sys; sys.stdout.write(sys.platform)"`])
  AC_SUBST([PYTHON_PLATFORM], [$am_cv_python_platform])

  # Just factor out some code duplication.
  am_python_setup_sysconfig="\
import sys
# Prefer sysconfig over distutils.sysconfig, for better compatibility
# with python 3.x.  See automake bug#10227.
try:
    import sysconfig
except ImportError:
    can_use_sysconfig = 0
else:
    can_use_sysconfig = 1
# Can't use sysconfig in CPython 2.7, since it's broken in virtualenvs:
# <https://github.com/pypa/virtualenv/issues/118>
try:
    from platform import python_implementation
    if python_implementation() == 'CPython' and sys.version[[:3]] == '2.7':
        can_use_sysconfig = 0
except ImportError:
    pass"

  dnl Set up 4 directories:

  dnl pythondir -- where to install python scripts.  This is the
  dnl   site-packages directory, not the python standard library
  dnl   directory like in previous automake betas.  This behavior
  dnl   is more consistent with lispdir.m4 for example.
  dnl Query distutils for this directory.
  AC_CACHE_CHECK([for $am_display_PYTHON script directory],
    [am_cv_python_pythondir],
    [if test "x$prefix" = xNONE
     then
       am_py_prefix=$ac_default_prefix
     else
       am_py_prefix=$prefix
     fi
     am_cv_python_pythondir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
    sitedir = sysconfig.get_path('purelib')
else:
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(0, 0)
sys.stdout.write(sitedir)"`
     case $am_cv_python_pythondir in
     $am_py_prefix*)
       am__strip_prefix=`echo "$am_py_prefix" | sed 's|.|.|g'`
       am_cv_python_pythondir=`echo "$am_cv_python_pythondir" | sed "s,^$am__strip_prefix,$PYTHON_PREFIX,"`
       ;;
     *)
       case $am_py_prefix in
         /usr|/System*) ;;
         *)
	  am_cv_python_pythondir=$PYTHON_PREFIX/lib/python$PYTHON_VERSION/site-packages
	  ;;
       esac
       ;;
     esac
    ])
  AC_SUBST([pythondir], [$am_cv_python_pythondir])

  dnl pkgpythondir -- $PACKAGE directory under pythondir.  Was
  dnl   PYTHON_SITE_PACKAGE in previous betas, but this naming is
  dnl   more consistent with the rest of automake.

  AC_SUBST([pkgpythondir], [\${pythondir}/$PACKAGE])

  dnl pyexecdir -- directory for installing python extension modules
  dnl   (shared libraries)
  dnl Query distutils for this directory.
  AC_CACHE_CHECK([for $am_display_PYTHON extension module directory],
    [am_cv_python_pyexecdir],
    [if test "x$exec_prefix" = xNONE
     then
       am_py_exec_prefix=$am_py_prefix
     else
       am_py_exec_prefix=$exec_prefix
     fi
     am_cv_python_pyexecdir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
    sitedir = sysconfig.get_path('platlib')
else:
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(1, 0)
sys.stdout.write(sitedir)"`
     case $am_cv_python_pyexecdir in
     $am_py_exec_prefix*)
       am__strip_prefix=`echo "$am_py_exec_prefix" | sed 's|.|.|g'`
       am_cv_python_pyexecdir=`echo "$am_cv_python_pyexecdir" | sed "s,^$am__strip_prefix,$PYTHON_EXEC_PREFIX,"`
       ;;
     *)
       case $am_py_exec_prefix in
         /usr|/System*) ;;
         *)
	   am_cv_python_pyexecdir=$PYTHON_EXEC_PREFIX/lib/python$PYTHON_VERSION/site-packages
	   ;;
       esac
       ;;
     esac
    ])
  AC_SUBST([pyexecdir], [$am_cv_python_pyexecdir])

  dnl pkgpyexecdir -- $(pyexecdir)/$(PACKAGE)

  AC_SUBST([pkgpyexecdir], [\${pyexecdir}/$PACKAGE])

  dnl Run any user-specified action.
  $2
  fi

])
m4trace:/opt/local/share/aclocal-1.16/python.m4:242: -1- AC_DEFUN([AM_PYTHON_CHECK_VERSION], [prog="import sys
# split strings by '.' and convert to numeric.  Append some zeros
# because we need at least 4 digits for the hex conversion.
# map returns an iterator in Python 3.0 and a list in 2.x
minver = list(map(int, '$2'.split('.'))) + [[0, 0, 0]]
minverhex = 0
# xrange is not present in Python 3.0 and range returns an iterator
for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[[i]]
sys.exit(sys.hexversion < minverhex)"
  AS_IF([AM_RUN_LOG([$1 -c "$prog"])], [$3], [$4])])
m4trace:/opt/local/share/aclocal-1.16/runlog.m4:17: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/opt/local/share/aclocal-1.16/sanity.m4:82: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/opt/local/share/aclocal-1.16/silent.m4:60: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/opt/local/share/aclocal-1.16/strip.m4:28: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/opt/local/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/opt/local/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/opt/local/share/aclocal-1.16/tar.m4:132: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/ax_check_gnu_make.m4:84: -1- AC_DEFUN([AX_CHECK_GNU_MAKE], [  AC_PROG_AWK
  AC_CACHE_CHECK([for GNU make],[_cv_gnu_make_command],[dnl
    _cv_gnu_make_command="" ;
dnl Search all the common names for GNU make
    for a in "$MAKE" make gmake gnumake ; do
      if test -z "$a" ; then continue ; fi ;
      if "$a" --version 2> /dev/null | grep GNU 2>&1 > /dev/null ; then
        _cv_gnu_make_command=$a ;
        AX_CHECK_GNU_MAKE_HEADLINE=$("$a" --version 2> /dev/null | grep "GNU Make")
        ax_check_gnu_make_version=$(echo ${AX_CHECK_GNU_MAKE_HEADLINE} | ${AWK} -F " " '{ print $(NF); }')
        break ;
      fi
    done ;])
dnl If there was a GNU version, then set @ifGNUmake@ to the empty string, '#' otherwise
  AS_VAR_IF([_cv_gnu_make_command], [""], [AS_VAR_SET([ifGNUmake], ["#"])],   [AS_VAR_SET([ifGNUmake], [""])])
  AS_VAR_IF([_cv_gnu_make_command], [""], [AS_UNSET(ax_cv_gnu_make_command)], [AS_VAR_SET([ax_cv_gnu_make_command], [${_cv_gnu_make_command}])])
  AC_SUBST([ifGNUmake])
])
m4trace:m4/ax_compare_version.m4:177: -1- AC_DEFUN([AX_COMPARE_VERSION], [
  AC_REQUIRE([AC_PROG_AWK])

  # Used to indicate true or false condition
  ax_compare_version=false

  # Convert the two version strings to be compared into a format that
  # allows a simple string comparison.  The end result is that a version
  # string of the form 1.12.5-r617 will be converted to the form
  # 0001001200050617.  In other words, each number is zero padded to four
  # digits, and non digits are removed.
  AS_VAR_PUSHDEF([A],[ax_compare_version_A])
  A=`echo "$1" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/[[^0-9]]//g'`

  AS_VAR_PUSHDEF([B],[ax_compare_version_B])
  B=`echo "$3" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
                     -e 's/[[^0-9]]//g'`

  dnl # In the case of le, ge, lt, and gt, the strings are sorted as necessary
  dnl # then the first line is used to determine if the condition is true.
  dnl # The sed right after the echo is to remove any indented white space.
  m4_case(m4_tolower($2),
  [lt],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/false/;s/x${B}/true/;1q"`
  ],
  [gt],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort | sed "s/x${A}/false/;s/x${B}/true/;1q"`
  ],
  [le],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort | sed "s/x${A}/true/;s/x${B}/false/;1q"`
  ],
  [ge],[
    ax_compare_version=`echo "x$A
x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/true/;s/x${B}/false/;1q"`
  ],[
    dnl Split the operator from the subversion count if present.
    m4_bmatch(m4_substr($2,2),
    [0],[
      # A count of zero means use the length of the shorter version.
      # Determine the number of characters in A and B.
      ax_compare_version_len_A=`echo "$A" | $AWK '{print(length)}'`
      ax_compare_version_len_B=`echo "$B" | $AWK '{print(length)}'`

      # Set A to no more than B's length and B to no more than A's length.
      A=`echo "$A" | sed "s/\(.\{$ax_compare_version_len_B\}\).*/\1/"`
      B=`echo "$B" | sed "s/\(.\{$ax_compare_version_len_A\}\).*/\1/"`
    ],
    [[0-9]+],[
      # A count greater than zero means use only that many subversions
      A=`echo "$A" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
      B=`echo "$B" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
    ],
    [.+],[
      AC_WARNING(
        [illegal OP numeric parameter: $2])
    ],[])

    # Pad zeros at end of numbers to make same length.
    ax_compare_version_tmp_A="$A`echo $B | sed 's/./0/g'`"
    B="$B`echo $A | sed 's/./0/g'`"
    A="$ax_compare_version_tmp_A"

    # Check for equality or inequality as necessary.
    m4_case(m4_tolower(m4_substr($2,0,2)),
    [eq],[
      test "x$A" = "x$B" && ax_compare_version=true
    ],
    [ne],[
      test "x$A" != "x$B" && ax_compare_version=true
    ],[
      AC_WARNING([illegal OP parameter: $2])
    ])
  ])

  AS_VAR_POPDEF([A])dnl
  AS_VAR_POPDEF([B])dnl

  dnl # Execute ACTION-IF-TRUE / ACTION-IF-FALSE.
  if test "$ax_compare_version" = "true" ; then
    m4_ifvaln([$4],[$4],[:])dnl
    m4_ifvaln([$5],[else $5])dnl
  fi
])
m4trace:m4/ax_python_module.m4:26: -1- AU_DEFUN([AC_PYTHON_MODULE], [m4_if($#, 0, [AX_PYTHON_MODULE], [AX_PYTHON_MODULE($@)])])
m4trace:m4/ax_python_module.m4:26: -1- AC_DEFUN([AC_PYTHON_MODULE], [AC_DIAGNOSE([obsolete], [The macro `AC_PYTHON_MODULE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_PYTHON_MODULE], [AX_PYTHON_MODULE($@)])])
m4trace:m4/ax_python_module.m4:49: -1- AC_DEFUN([AX_PYTHON_MODULE], [
    if test -z $PYTHON;
    then
        PYTHON="python"
    fi
    PYTHON_NAME=`basename $PYTHON`
    AC_MSG_CHECKING($PYTHON_NAME module: $1)
	$PYTHON -c "import $1" 2>/dev/null
	if test $? -eq 0;
	then
		AC_MSG_RESULT(yes)
		eval AS_TR_CPP(HAVE_PYMOD_$1)=yes
	else
		AC_MSG_RESULT(no)
		eval AS_TR_CPP(HAVE_PYMOD_$1)=no
		#
		if test -n "$2"
		then
			AC_MSG_ERROR(failed to find required module $1)
			exit 1
		fi
	fi
])
m4trace:m4/giella-config-files.m4:103: -1- AC_DEFUN([gt_CONFIG_FILES], [
# List all non-script files processed by Autoconf.
AC_CONFIG_FILES([Makefile \
                 giella-sma.pc \
                 manifest.toml \
                 src/Makefile \
                 src/filters/Makefile \
                 src/hyphenation/Makefile \
                 src/fst/Makefile \
                 src/orthography/Makefile \
                 src/phonetics/Makefile \
                 src/cg3/Makefile \
                 src/tagsets/Makefile \
                 src/transcriptions/Makefile \
                 docs/Makefile \
                 test/Makefile \
                 test/tools/Makefile \
                 test/tools/hyphenators/Makefile \
                 test/tools/hyphenators/fstbased/Makefile \
                 test/tools/hyphenators/patternbased/Makefile \
                 test/tools/mt/Makefile \
                 test/tools/mt/apertium/Makefile \
                 test/tools/spellcheckers/Makefile \
                 test/tools/spellcheckers/fstbased/Makefile \
                 test/tools/spellcheckers/fstbased/desktop/Makefile \
                 test/tools/spellcheckers/fstbased/desktop/hfst/Makefile \
                 test/tools/spellcheckers/fstbased/mobile/Makefile \
                 test/src/Makefile \
                 test/src/morphology/Makefile \
                 test/src/orthography/Makefile \
                 test/src/phonology/Makefile \
                 test/src/syntax/Makefile \
                 tools/Makefile \
                 tools/analysers/Makefile \
                 tools/analysers/pipespec.xml \
                 tools/grammarcheckers/Makefile \
                 tools/grammarcheckers/pipespec.xml \
                 tools/grammarcheckers/filters/Makefile \
                 tools/grammarcheckers/tests/Makefile \
                 tools/hyphenators/Makefile \
                 tools/hyphenators/filters/Makefile \
                 tools/mt/Makefile \
                 tools/mt/filters/Makefile \
                 tools/mt/apertium/Makefile \
                 tools/mt/apertium/filters/Makefile \
                 tools/mt/apertium/tagsets/Makefile \
                 tools/mt/cgbased/Makefile \
                 tools/tokenisers/Makefile \
                 tools/tokenisers/filters/Makefile \
                 tools/shellscripts/Makefile \
                 tools/spellcheckers/Makefile \
                 tools/spellcheckers/filters/Makefile \
                 tools/spellcheckers/weights/Makefile \
                 tools/tts/Makefile \
                 tools/tts/pipespec.xml])
# Add one AC_CONFIG_FILES for each script file that needs processing. This gives
# the most pleasant user experience and most readable autoconf code to maintain.
# Spell checker tests, all languages:
AC_CONFIG_FILES([test/tools/spellcheckers/test-zhfst-file.sh], \
      [chmod a+x test/tools/spellcheckers/test-zhfst-file.sh])
AC_CONFIG_FILES([test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh], \
      [chmod a+x test/tools/spellcheckers/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh])
AC_CONFIG_FILES([test/run-yaml-testcases.sh], \
      [chmod a+x test/run-yaml-testcases.sh])
AC_CONFIG_FILES([test/run-morph-tester.sh], \
      [chmod a+x test/run-morph-tester.sh])
# Phonology tests, all languages:
AC_CONFIG_FILES([test/src/phonology/pair-test-positive.sh], \
      [chmod a+x test/src/phonology/pair-test-positive.sh])
AC_CONFIG_FILES([test/src/phonology/pair-test-negative.sh], \
      [chmod a+x test/src/phonology/pair-test-negative.sh])
AC_CONFIG_FILES([test/src/phonology/pair-test-hfst.sh], \
      [chmod a+x test/src/phonology/pair-test-hfst.sh])
# Lemma generation tests, all languages:
AC_CONFIG_FILES([test/src/morphology/generate-adjective-lemmas.sh], \
      [chmod a+x test/src/morphology/generate-adjective-lemmas.sh])
AC_CONFIG_FILES([test/src/morphology/generate-noun-lemmas.sh], \
      [chmod a+x test/src/morphology/generate-noun-lemmas.sh])
AC_CONFIG_FILES([test/src/morphology/generate-propernoun-lemmas.sh], \
      [chmod a+x test/src/morphology/generate-propernoun-lemmas.sh])
AC_CONFIG_FILES([test/src/morphology/generate-verb-lemmas.sh], \
      [chmod a+x test/src/morphology/generate-verb-lemmas.sh])
# Lemma acceptance test for spellers, all languages:
AC_CONFIG_FILES([test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh], \
      [chmod a+x test/tools/spellcheckers/fstbased/desktop/hfst/accept-all-lemmas.sh])
# Shorthand shell scripts instead of the old-type aliases - all languages:
AC_CONFIG_FILES([tools/shellscripts/usma-gt.sh], \
      [chmod a+x tools/shellscripts/usma-gt.sh])
# Devtools shell scripts should also be handled by autotools:
AC_CONFIG_FILES([devtools/check_analysis_regressions.sh], \
      [chmod a+x devtools/check_analysis_regressions.sh])
AC_CONFIG_FILES([devtools/test_ospell-office_suggestions.sh], \
      [chmod a+x devtools/test_ospell-office_suggestions.sh])
AC_CONFIG_FILES([devtools/test_voikkospell_suggestions.sh], \
      [chmod a+x devtools/test_voikkospell_suggestions.sh])
AC_CONFIG_FILES([devtools/test_grammar_checker.sh], \
      [chmod a+x devtools/test_grammar_checker.sh])

])
m4trace:m4/giella-macros.m4:449: -1- AC_DEFUN([gt_PROG_SCRIPTS_PATHS], [

AC_PATH_PROG([GTCORESH], [gt-core.sh], [false],
             [$GIELLA_CORE/scripts$PATH_SEPARATOR$GTHOME/giella-core/scripts$PATH_SEPARATOR$PATH])

AC_ARG_WITH([giella-core],
            [AS_HELP_STRING([--with-giella-core=DIRECTORY],
                               [set giella-core to DIRECTORY @<:@default=PATH@:>@])],
            [with_giella_core=$withval],
            [with_giella_core=false])

# Get the relative path from pwd to where src dir is:
MYSRCDIR=$srcdir
# Get the absolute path to the present dir:
BUILD_DIR_PATH=$(pwd)
# Combine to get the full path to the scrdir:
THIS_TOP_SRC_DIR=$BUILD_DIR_PATH/$MYSRCDIR

_giella_core_not_found_message="
GIELLA_CORE could not be set:

Could not set GIELLA_CORE and thus not find required scripts in:
       \$GIELLA_CORE/scripts
       \$GTHOME/giella-core/scripts
       $PATH

       Please do the following:
       1. svn co https://github.com/giellalt/giella-core.git/trunk
       2. then either:
         a: cd giella-core && ./autogen.sh && ./configure && make

          or:
         b: add the following to your ~/.bash_profile or ~/.profile:

       export \$GIELLA_CORE=/path/to/giella-core/checkout/dir

       (replace the path with the real path from 1. above)

          or:
         c: run configure as follows

       ./configure --with-giella-core=/path/to/giella-core/checkout/dir

       (replace the path with the real path from 1. above)
"

AC_MSG_CHECKING([whether we can set GIELLA_CORE])

# --with-giella-core overrides everything:
AS_IF([test "x$with_giella_core" != "xfalse" -a \
          -d "$with_giella_core/scripts" ], [
    GIELLA_CORE=$with_giella_core
    ],[
    # If not, Look in the parent dir:
    AS_IF([test -d "$THIS_TOP_SRC_DIR/../giella-core/scripts"], [
        GIELLA_CORE=$THIS_TOP_SRC_DIR/../giella-core
    ], [
        # If nothing else works, try pkg-config:
        AS_IF([pkg-config --exists giella-core], [
            GIELLA_CORE=$(pkg-config --variable=dir giella-core)
        ], [
            AC_MSG_ERROR([${_giella_core_not_found_message}])
        ])
    ])
])
AC_MSG_RESULT([$GIELLA_CORE])

### This is the version of the Giella Core that we require. Update as needed.
### It is possible to specify also subversion revision: 0.1.2-12345
_giella_core_min_version=0.12.0

# GIELLA_CORE/GTCORE env. variable, required by the infrastructure to find scripts:
AC_ARG_VAR([GIELLA_CORE], [directory for the Giella infra core scripts and other required resources])

GTCORE=${GIELLA_CORE}
AC_ARG_VAR([GTCORE], [GTCORE = GIELLA_CORE, retained for backwards compatibility while being cleaned out])

##### Check the version of the giella-core, and stop with error message if too old:
# This is the error message:
giella_core_too_old_message="

The giella-core is too old, we require at least $_giella_core_min_version.

*** ==> PLEASE ENTER THE FOLLOWING COMMANDS: <== ***

cd $GTCORE
svn up
./autogen.sh # required only the first time
./configure  # required only the first time
make
"

# Identify the version of giella-core:
AC_PATH_PROG([GIELLA_CORE_VERSION], [gt-version.sh], [no],
    [$GTCORE/scripts$PATH_SEPARATOR$GTHOME/giella-core/scripts$PATH_SEPARATOR$PATH])
AC_MSG_CHECKING([the version of the Giella Core])
AS_IF([test "x${GIELLA_CORE_VERSION}" != xno],
        [_giella_core_version=$( "${GIELLA_CORE_VERSION}" )],
        [AC_MSG_ERROR([gt-version.sh could not be found, installation is incomplete!])
    ])
AC_MSG_RESULT([$_giella_core_version])

AC_MSG_CHECKING([whether the Giella Core version is at least $_giella_core_min_version])
# Compare it to the required version, and error out if too old:
AX_COMPARE_VERSION([$_giella_core_version], [ge], [$_giella_core_min_version],
                   [giella_core_version_ok=yes], [giella_core_version_ok=no])
AS_IF([test "x${giella_core_version_ok}" != xno], [AC_MSG_RESULT([$giella_core_version_ok])],
[AC_MSG_ERROR([$giella_core_too_old_message])])

################################
### Giella-shared dir:
################
# 1. check --with-giella-shared option
# 2. check env GIELLA_SHARED, then GIELLA_HOME, then GTHOME, then GTCORE
# 3. check using pkg-config
# 4. error if not found

AC_ARG_WITH([giella-shared],
            [AS_HELP_STRING([--with-giella-shared=DIRECTORY],
                            [search giella-shared data in DIRECTORY @<:@default=PATH@:>@])],
            [with_giella_shared=$withval],
            [with_giella_shared=false])

AC_MSG_CHECKING([whether we can set GIELLA_SHARED])
# --with-giella-shared overrides everything:
AS_IF([test "x$with_giella_shared" != "xfalse" -a \
    -d "$with_giella_shared"/all_langs ], [
    GIELLA_SHARED="$with_giella_shared"
    ], [
    # Check in the parent directory:
    AS_IF([test -d "$THIS_TOP_SRC_DIR"/../giella-shared/all_langs ], [
        GIELLA_SHARED="$THIS_TOP_SRC_DIR"/../giella-shared
    ], [
        AS_IF([pkg-config --exists giella-common], [
            GIELLA_SHARED="$(pkg-config --variable=dir giella-common)"
        ],
        [
     AC_MSG_ERROR([Could not find giella-common data dir to set GIELLA_SHARED])
        ])
    ])
])
AC_MSG_RESULT([$GIELLA_SHARED])

### This is the version of the Giella Shared that we require. Update as needed.
### It is possible to specify also subversion revision: 0.1.2-12345
_giella_shared_min_version=0.2.0

# GIELLA_SHARED is required by the infrastructure to find shared data:
AC_ARG_VAR([GIELLA_SHARED], [directory for giella shared data, like proper nouns and regexes])

##### Check the version of giella-shared, and stop with error message if too old:
# This is the error message:
giella_shared_too_old_message="

The giella-shared is too old, we require at least $_giella_shared_min_version.

*** ==> PLEASE ENTER THE FOLLOWING COMMANDS: <== ***

cd $GIELLA_SHARED
svn up
./autogen.sh # required only the first time
./configure  # required only the first time
make
"

# Identify the version of giella-shared:
AC_MSG_CHECKING([the version of Giella Shared])
_giella_shared_version=$( pkg-config --modversion "$GIELLA_SHARED"/giella-common.pc )

# Check whether a version info string was found:
case "$_giella_shared_version" in    # branch to the first pattern
  "")
    _giella_shared_version_found=no  # do this if empty string
    ;;                               # end of this case branch
  *[!0-9.]*)                         # pattern = anything containing a non-digit
    _giella_shared_version_found=no  # do this if the pattern triggered
    ;;                               # end of this case branch
  *)                                 # pattern = anything (else)
    _giella_shared_version_found=yes # do this when matching a version string
    ;;                               # end of this case branch
esac

# If not, recheck using standard pkg-config locations:
AS_IF([test "x$_giella_shared_version_found" = xno ], [
    _giella_shared_version=$( pkg-config --modversion giella-common )
], [test "x$_giella_shared_version_found" = xyes ], [
    true
], [AC_MSG_ERROR([Could not identify version of giella-common shared data])])

AC_MSG_RESULT([$_giella_shared_version])

AC_MSG_CHECKING([whether the version of Giella Shared is at least $_giella_shared_min_version])
# Compare it to the required version, and error out if too old:
AX_COMPARE_VERSION([$_giella_shared_version], [ge], [$_giella_shared_min_version],
                   [giella_shared_version_ok=yes], [giella_shared_version_ok=no])
AS_IF([test "x${giella_shared_version_ok}" != xno], [AC_MSG_RESULT([$giella_shared_version_ok])],
[AC_MSG_ERROR([$giella_shared_too_old_message])])


################################
### Giella-libs dir:
################
# 1. check --with-giella-libs option
# 2. check env GIELLA_LIBS, then GIELLA_HOME, then GTHOME
# 3. empty if not found

AC_ARG_WITH([giella-libs],
            [AS_HELP_STRING([--with-giella-libs=DIRECTORY],
                            [search giella-libs data in DIRECTORY @<:@default=PATH@:>@])],
            [with_giella_libs=$withval],
            [with_giella_libs=false])

AC_MSG_CHECKING([whether we can set GIELLA_LIBS])
# --with-giella-libs overrides everything:
AS_IF([test "x$with_giella_libs" != "xfalse" -a \
          -d "$with_giella_libs" ], [
    GIELLA_LIBS=$with_giella_libs
    ],[
    # GIELLA_LIBS is the env. variable for this dir:
    AS_IF([test "x$GIELLA_LIBS" != "x" -a \
              -d "$GIELLA_LIBS"], [], [
        # GIELLA_HOME is the new GTHOME:
        AS_IF([test "x$GIELLA_HOME" != "x" -a \
                  -d "$GIELLA_HOME/giella-libs" ], [
            GIELLA_LIBS=$GIELLA_HOME/giella-libs
        ], [
            # GTHOME for backwards compatibility - it is deprecated:
            AS_IF([test "x$GTHOME" != "x" -a \
                      -d "$GTHOME/giella-libs" ], [
                GIELLA_LIBS=$GTHOME/giella-libs
            ], [
                GIELLA_LIBS=no
            ])
        ])
    ])
])
AC_MSG_RESULT([$GIELLA_LIBS])

# GIELLA_LIBS is needed for speller builds, but if not found, we'll try to fetch over the net:
AC_ARG_VAR([GIELLA_LIBS], [directory containing precompiled libraries for proofing tools])

################################
### Some software that we either depend on or we need for certain functionality:
################

################ Weighted fst's ################
AC_PATH_PROG([BC], [bc], [false], [$PATH$PATH_SEPARATOR$with_bc])

################ YAML-based testing ################
AC_ARG_ENABLE([yamltests],
              [AS_HELP_STRING([--enable-yamltests],
                              [enable yaml tests @<:@default=check@:>@])],
              [enable_yamltests=$enableval],
              [enable_yamltests=check])

AS_IF([test "x$enable_yamltests" = "xcheck"],
     [AM_PATH_PYTHON([3.5],, [:])
     AX_PYTHON_MODULE(yaml)
     AC_MSG_CHECKING([whether to enable yaml-based test])
     AS_IF([test "$PYTHON" = ":"],
           [enable_yamltests=no
            new_enough_python_available=no
            AC_MSG_RESULT([no, python is missing or old])
            ],
           [AS_IF([test "x$HAVE_PYMOD_YAML" != "xyes"],
                  [enable_yamltests=no
                   new_enough_python_available=yes
                   AC_MSG_RESULT([no, yaml is missing])
                   ],
                  [enable_yamltests=yes
                   new_enough_python_available=yes
                   AC_MSG_RESULT([yes])])])])

AM_CONDITIONAL([CAN_YAML_TEST], [test "x$enable_yamltests" != xno])

################ Generated documentation ################
# Check for awk with required feature:
AC_CACHE_CHECK([for awk that supports gensub], [ac_cv_path_GAWK],
  [AC_PATH_PROGS_FEATURE_CHECK([GAWK], [awk mawk nawk gawk],
    [[awkout=`$ac_path_GAWK 'BEGIN{gensub(/a/,"b","g");}'; exvalue=$?; echo $exvalue`
      test "x$awkout" = x0 \
      && ac_cv_path_GAWK=$ac_path_GAWK ac_path_GAWK_found=:]],
    [AC_MSG_ERROR([could not find awk that supports gensub - please install GNU awk. hint: sudo port install gawk])])])
AC_SUBST([GAWK], [$ac_cv_path_GAWK])
# Check for sed with required feature:
AC_CACHE_CHECK([for sed that supports newlines and pipes], [ac_cv_path_SED],
  [AC_PATH_PROGS_FEATURE_CHECK([SED], [sed gsed gnused],
              [[m4out=`echo aaa | $ac_path_SED 's/a/\n/g' | wc -l | tr -d '[:space:] '`
                test "x$m4out" = x4\
      && ac_cv_path_SED=$ac_path_SED ac_path_SED_found=:]],
    [AC_MSG_ERROR([could not find sed that supports stuff - please install GNU sed. hint: sudo port install gsed./c])])])
AC_SUBST([SED], [$ac_cv_path_SED])

# Check for Forrest:
AC_ARG_WITH([forrest],
            [AS_HELP_STRING([--with-forrest=DIRECTORY],
                            [search forrest in DIRECTORY @<:@default=PATH@:>@])],
            [with_forrest=$withval],
            [with_forrest=no])
AC_PATH_PROG([FORREST], [forrest], [], [$PATH$PATH_SEPARATOR$with_forrest])
AC_MSG_CHECKING([whether to do forrest validation of in-source documentation])
AS_IF([test "x$GAWK" != x], [
    AS_IF([test "x$JV" != xfalse], [
    	AS_IF([test "x$with_forrest" = xyes], [
        	AS_IF([test "x$FORREST" != x],
        	   [giellalt_forrest_validation=yes],
        	   [giellalt_forrest_validation=no])
        ],[giellalt_forrest_validation=no])
    ],[giellalt_forrest_validation=no])
],[giellalt_forrest_validation=no])
AC_MSG_RESULT([$giellalt_forrest_validation])
AM_CONDITIONAL([CAN_FORREST_VALIDATE], [test "x$giellalt_forrest_validation" != xno])

# Check for npm etc. stuff for divvunspell stats
AC_ARG_WITH([npm],
            [AS_HELP_STRING([--with-npm=DIRECTORY],
                            [search npm in DIRECTORY @<:@default=PATH@:>@])],
            [with_npm=$withval],
            [with_npm=no])
AC_PATH_PROG([NPM], [npm], [], [$PATH$PATH_SEPARATOR$with_npm])
AC_PATH_PROG([R], [R], [], [$PATH$PATH_SEPARATOR$with_R])
AC_ARG_WITH([divvunspell],
            [AS_HELP_STRING([--with-divvunspell=DIRECTORY],
                            [search divvunspell in DIRECTORY @<:@default=PATH@:>@])],
            [with_divvunspell=$withval],
            [with_divvunspell=no])
AC_PATH_PROG([DIVVUN_ACCURACY], [accuracy], [], [$PATH$PATH_SEPARATOR$with_divvunspell])



################ can rsync oxt template? ################
AC_PATH_PROG([RSYNC], [rsync], [no], [$PATH$PATH_SEPARATOR$with_rsync])
AC_PATH_PROG([WGET],  [wget],  [no], [$PATH$PATH_SEPARATOR$with_wget])

AS_IF([test "x$GIELLA_LIBS" != "xno" -a \
            "x$RSYNC"       != "xno" ],
      [can_local_sync=yes], [
       can_local_sync=no
       AS_IF([test "x$WGET" != "xno" ],
          [can_wget_giella_libs=yes],
          [can_wget_giella_libs=no])
      ])
AM_CONDITIONAL([CAN_LOCALSYNC], [test "x$can_local_sync" != xno ])
AM_CONDITIONAL([CAN_REMOTE_SYNC], [test "x$can_wget_giella_libs" != xno ])

################ Look for available diff and merge tools: ################
AC_PATH_PROGS([DIFFTOOL], [opendiff kdiff3 meld diffuse kompare], [no], [$PATH$PATH_SEPARATOR$with_difftool])

case $DIFFTOOL in
  *kdiff3 |\
  *meld   |\
  *opendiff )
        can_merge=yes
        ;;
  *)
        can_merge=no
        ;;
esac
AM_CONDITIONAL([CAN_MERGE], [test "x$can_merge" != xno ])

################ GNU Make at least 3.82 on non-OSX systems: ################
#
# Platform specific setup
#
#############################
AC_CANONICAL_HOST
# Check for which host we are on and setup a few things
# specifically based on the host
# This is the minimum GNU Make version required (except on OSX):
_GNU_make_min_version=m4_default([$1], [3.82])

# Then we check against different hosts:
case $host_os in
  darwin* )
        # Do nothing for mac: the included make is fine
        true
        ;;
    *)
        # Default Case: in all other cases check that we are using GNU make
        # and that it is new enough:
        AX_CHECK_GNU_MAKE()
        AC_MSG_CHECKING([whether GNU make is at least $_GNU_make_min_version])
        AX_COMPARE_VERSION([$ax_check_gnu_make_version], [ge],
                           [$_GNU_make_min_version],
                   [
                    AC_MSG_RESULT([yes])
                    # Reset the MAKE variable, to ensure we're using GNU make:
                    MAKE=$_cv_gnu_make_command
                   ],
                   [AC_MSG_ERROR([GNU Make too old ($ax_check_gnu_make_version), please install at least $_GNU_make_min_version])
                   ])
        ;;
esac
################ END of GNU Make check ################

# We need special treatment of Java paths in Cygwin:
AC_CANONICAL_HOST
case "${host}" in
  *-cygwin* | *-mingw*)
    CYGWINJAVAPATH='cygpath -m'
    ;;
  *)
    # Assume Unix.
    CYGWINJAVAPATH=echo
    ;;
esac
AC_SUBST(CYGWINJAVAPATH)

# Check for SubEthaEdit/see
AC_PATH_PROG([SEE], [see], [], [$PATH$PATH_SEPARATOR$with_see])

# Check for grammar checker validation tool:
AC_PATH_PROG([DIVVUN_VALIDATE_SUGGEST], [divvun-validate-suggest], [no], [$PATH$PATH_SEPARATOR$with_divvun_validate_suggest])
# Check for grammar checker (for self-test)
AC_PATH_PROG([DIVVUN_CHECKER], [divvun-checker], [no], [$PATH$PATH_SEPARATOR$with_divvun_validate_suggest])

])
m4trace:m4/giella-macros.m4:475: -1- AC_DEFUN([gt_PROG_XFST], [AC_ARG_WITH([xfst],
            [AS_HELP_STRING([--with-xfst=DIRECTORY],
                            [search xfst in DIRECTORY @<:@default=PATH@:>@])],
            [with_xfst=$withval],
            [with_xfst=$DEFAULT_XFST])
AC_PATH_PROG([PRINTF], [printf], [echo -n])
AC_PATH_PROG([XFST], [xfst], [false], [$PATH$PATH_SEPARATOR$with_xfst])
AC_PATH_PROG([TWOLC], [twolc], [false], [$PATH$PATH_SEPARATOR$with_xfst])
AC_PATH_PROG([LEXC], [lexc], [false], [$PATH$PATH_SEPARATOR$with_xfst])
AC_PATH_PROG([LOOKUP], [lookup], [false], [$PATH$PATH_SEPARATOR$with_xfst])
AC_MSG_CHECKING([whether to enable xfst building])
AS_IF([test x$with_xfst != xno], [
    AS_IF([test "x$XFST"   != xfalse -a \
                "x$TWOLC"  != xfalse -a \
                "x$LEXC"   != xfalse -a \
                "x$LOOKUP" != xfalse  ], [gt_prog_xfst=yes],
          [gt_prog_xfst=no])
], [gt_prog_xfst=no])
AC_MSG_RESULT([$gt_prog_xfst])
AM_CONDITIONAL([CAN_XFST], [test "x$gt_prog_xfst" != xno])
])
m4trace:m4/giella-macros.m4:504: -1- AC_DEFUN([gt_PROG_VFST], [AC_ARG_WITH([voikko],
            [AS_HELP_STRING([--with-voikko=DIRECTORY],
                            [search voikko in DIRECTORY @<:@default=PATH@:>@])],
            [with_voikko=$withval],
            [with_voikko=yes])
AC_PATH_PROG([VOIKKOSPELL],     [voikkospell],     [false],
                                            [$PATH$PATH_SEPARATOR$with_voikko])
AC_PATH_PROG([VOIKKOHYPHENATE], [voikkohyphenate], [false],
                                            [$PATH$PATH_SEPARATOR$with_voikko])
AC_PATH_PROG([VOIKKOGC],        [voikkogc],        [false],
                                            [$PATH$PATH_SEPARATOR$with_voikko])
AC_PATH_PROG([VOIKKOVFSTC],     [voikkovfstc],     [false],
                                            [$PATH$PATH_SEPARATOR$with_voikko])
AC_MSG_CHECKING([whether to enable voikko building])
AS_IF([test x$with_voikko != xno], [
    AS_IF([test "x$VOIKKOSPELL"      != xfalse -a \
                "x$VOIKKOHYPHENATE"  != xfalse -a \
                "x$VOIKKOGC"         != xfalse -a \
                "x$VOIKKOVFSTC"      != xfalse  ], [gt_prog_voikko=yes],
          [gt_prog_voikko=no])
], [gt_prog_voikko=no])
AC_MSG_RESULT([$gt_prog_voikko])
AM_CONDITIONAL([CAN_VFST], [test "x$gt_prog_voikko" != xno])
])
m4trace:m4/giella-macros.m4:550: -1- AC_DEFUN([gt_PROG_FOMA], [AC_ARG_WITH([foma],
            [AS_HELP_STRING([--with-foma=DIRECTORY],
                            [search foma in DIRECTORY @<:@default=PATH@:>@])],
            [with_foma=$withval],
            [with_foma=$DEFAULT_FOMA])

# If Xerox tools and Hfst are not found, assume we want Foma:
AS_IF([test x$gt_prog_xfst = xno \
         -a x$gt_prog_hfst = xno \
         -a "x$with_xfst" != xno \
         -a "x$with_hfst" != xno ],
      [
      with_foma=yes
      fallback_to_foma="INFO: Neither Xfst nor Hfst were found, falling back to using Foma"
      ])

AC_PATH_PROG([PRINTF], [printf], [echo -n])
AC_PATH_PROG([FOMA], [foma], [false], [$PATH$PATH_SEPARATOR$with_foma])
AC_PATH_PROG([FLOOKUP], [flookup], [false], [$PATH$PATH_SEPARATOR$with_foma])
AC_PATH_PROG([CGFLOOKUP], [cgflookup], [false], [$PATH$PATH_SEPARATOR$with_foma])
AC_MSG_CHECKING([whether to enable foma building])
AS_IF([test x$with_foma != xno], [
    AS_IF([test "x$FOMA"      != xfalse -a \
                "x$FLOOKUP"   != xfalse -a \
                "x$CGFLOOKUP" != xfalse  ], [gt_prog_foma=yes],
          [gt_prog_foma=no])
], [gt_prog_foma=no])
AC_MSG_RESULT([$gt_prog_foma])

AS_IF([test x$gt_prog_foma = xyes \
      -a "x$(grep 'GT_PHONOLOGY_MAIN' ${srcdir}/src/fst/Makefile*.am \
      	| grep 'twolc')" != "x" ],
      [AC_MSG_ERROR([You only have Foma, or you requested to use Foma, but \
your main phonology file is a twolc file, which Foma can not compile. You need \
to use either Hfst or the Xerox FSM tools when compiling transducers for \
$GLANG ($GLANGUAGE).
])])

AM_CONDITIONAL([CAN_FOMA], [test "x$gt_prog_foma" != xno])
AM_CONDITIONAL([HAS_FOMA], [test "x$FOMA" != xfalse ])
])
m4trace:m4/giella-macros.m4:582: -1- AC_DEFUN([gt_PROG_VISLCG3], [AC_ARG_WITH([vislcg3],
            [AS_HELP_STRING([--with-vislcg3=DIRECTORY],
                            [search vislcg3 in DIRECTORY @<:@default=PATH@:>@])],
            [with_vislcg3=$withval],
            [with_vislcg3=check])
AC_PATH_PROG([VISLCG3], [vislcg3], [no], [$PATH$PATH_SEPARATOR$with_vislcg3])
AC_PATH_PROG([VISLCG3_COMP], [cg-comp], [no], [$PATH$PATH_SEPARATOR$with_vislcg3])
AC_PATH_PROG([CG_RELABEL], [cg-relabel], [no], [$PATH$PATH_SEPARATOR$with_vislcg3])
AC_PATH_PROG([CG_MWESPLIT], [cg-mwesplit], [no], [$PATH$PATH_SEPARATOR$with_vislcg3])

AS_IF([test "x$VISLCG3" != xno], [
_giella_core_vislcg3_min_version=m4_default([$1], [1.0.0])
AC_MSG_CHECKING([whether vislcg3 is at least $_giella_core_vislcg3_min_version])
_vislcg3_version=$( ${VISLCG3} --version 2>&1 | grep -Eo '@<:@0-9@:>@+\.@<:@0-9.@:>@+' )
AX_COMPARE_VERSION([$_vislcg3_version], [ge], [$_giella_core_vislcg3_min_version],
                   [gt_prog_vislcg3=yes
                    AC_MSG_RESULT([yes - $_vislcg3_version])
                   ], [gt_prog_vislcg3=no
                    AC_MSG_RESULT([no - $_vislcg3_version])
                   ])
],
[gt_prog_vislcg3=no])
AC_MSG_CHECKING([whether we can enable vislcg3 targets])
AS_IF([test "x$gt_prog_vislcg3" != xno], [AC_MSG_RESULT([yes])],
      [AC_MSG_RESULT([no])])
AM_CONDITIONAL([CAN_VISLCG], [test "x$gt_prog_vislcg3" != xno])
])
m4trace:m4/giella-macros.m4:631: -1- AC_DEFUN([gt_PROG_SAXON], [AC_ARG_WITH([saxon],
             [AS_HELP_STRING([--with-saxon=DIRECTORY],
                             [search saxon wrapper script in DIRECTORY @<:@default=PATH@:>@])],
             [with_saxon=$withval],
             [with_saxon=check])
AC_PATH_PROG([SAXON], [saxonb-xslt saxon9 saxon8 saxon], [false], [$PATH$PATH_SEPARATOR$with_saxon])
AC_PATH_PROG([JV], [java], [false])
AC_CHECK_FILE([$HOME/lib/saxon9he.jar],
    AC_SUBST(SAXONJAR, [$HOME/lib/saxon9he.jar]),
    [AC_CHECK_FILE([$HOME/lib/saxon9.jar],
        AC_SUBST(SAXONJAR, [$HOME/lib/saxon9.jar]),
        [AC_CHECK_FILE([/opt/local/share/java/saxon9he.jar],
            AC_SUBST(SAXONJAR, [/opt/local/share/java/saxon9he.jar]),
            [AC_CHECK_FILE([/usr/share/java/Saxon-HE.jar],
                AC_SUBST(SAXONJAR, [/usr/share/java/Saxon-HE.jar]),
                [AC_CHECK_FILE([/usr/share/java/saxon.jar],
                AC_SUBST(SAXONJAR, [/usr/share/java/saxon.jar]),
                    [_saxonjar=no])
                    ])])])]
)
AS_IF([test "x$_saxonjar" != xno], [
_saxon_min_version="8.0"
_saxon_version=$( java -jar $SAXONJAR -? 2>&1 | fgrep -i 'saxon' | grep -Eo '@<:@0-9@:>@+\.@<:@0-9.@:>@+' )
AC_MSG_CHECKING([whether the Saxon JAR is at least $_saxon_min_version])
AX_COMPARE_VERSION([$_saxon_version], [ge], [$_saxon_min_version],
                   [_saxonjar=yes
                    AC_MSG_RESULT([yes - $_saxon_version])
                   ], [_saxonjar=no
                    AC_MSG_RESULT([no - $_saxon_version])
                   ])
],
[_saxonjar=no])
AC_MSG_CHECKING([whether we can enable xslt2 transformations])
AS_IF([test x$with_saxon != xno], [
    AS_IF([test "x$SAXON" != xfalse], [gt_prog_saxon=yes],
          [gt_prog_saxon=no])
    AS_IF([test x$JV != xfalse], [gt_prog_java=yes], [gt_prog_java=no])
    AS_IF([test x$gt_prog_java != xno -a x$_saxonjar != xno],
          [gt_prog_xslt=yes], [gt_prog_xslt=no])
], [gt_prog_xslt=no])
AC_MSG_RESULT([$gt_prog_xslt])
AM_CONDITIONAL([CAN_SAXON], [test "x$gt_prog_saxon" != xno])
AM_CONDITIONAL([CAN_JAVA], [test "x$gt_prog_java" != xno -a "x$_saxonjar" != xno])
])
m4trace:m4/giella-macros.m4:1029: -1- AC_DEFUN([gt_ENABLE_TARGETS], [
# Foma-speller requires gzip, Voikko requires zip:
AC_PATH_PROG([ZIP],    [zip],      [false], [$PATH$PATH_SEPARATOR$with_zip])
AC_PATH_PROG([GZIP],   [gzip],     [false], [$PATH$PATH_SEPARATOR$with_gzip])
AC_PATH_PROGS([TAR],   [tar gtar], [false], [$PATH$PATH_SEPARATOR$with_tar])
AC_PATH_PROG([PATGEN], [patgen],   [false], [$PATH$PATH_SEPARATOR$with_patgen])
AC_PATH_PROG([PERL],   [perl],     [false], [$PATH$PATH_SEPARATOR$with_perl])
AC_PATH_PROG([XZ],     [xz],       [false], [$PATH$PATH_SEPARATOR$with_xz])
AM_CONDITIONAL([CAN_XZ], [test "x$ac_cv_prog_XZ" != xfalse])

############ (Hfst) compilation optimisation: ############
# Enable hyperminimisation of the lexical transducer - default is 'no'
AC_ARG_ENABLE([hyperminimisation],
              [AS_HELP_STRING([--enable-hyperminimisation],
                              [enable hyperminimisation of lexical fst @<:@default=$DEFAULT_HYPERMIN@:>@])],
              [enable_hyperminimisation=$enableval],
              [enable_hyperminimisation=$DEFAULT_HYPERMIN])
AM_CONDITIONAL([WANT_HYPERMINIMISATION], [test "x$enable_hyperminimisation" != xno])

# Enable symbol alignment of the lexical transducer - default is 'no'
AC_ARG_ENABLE([alignment],
              [AS_HELP_STRING([--enable-alignment],
                              [enable symbol alignment when parsing lexc @<:@default=yes@:>@])],
              [enable_alignment=$enableval],
              [enable_alignment=yes])
AM_CONDITIONAL([WANT_LEXC_ALIGNMENT], [test "x$enable_alignment" != xno])

#enable_twostep_intersect
AC_ARG_ENABLE([twostep-intersect],
              [AS_HELP_STRING([--enable-twostep-intersect],
                              [enable two-step compose-intersect (more correct in rare cases, might be slower) @<:@default=no@:>@])],
              [enable_twostep_intersect=$enableval],
              [enable_twostep_intersect=no])
AM_CONDITIONAL([WANT_TWOSTEP_INTERSECT], [test "x$enable_twostep_intersect" != xno])

#enable_reversed_intersect
AC_ARG_ENABLE([reversed-intersect],
              [AS_HELP_STRING([--enable-reversed-intersect],
                              [enable reversed compose-intersect (faster and takes less RAM in some cases) @<:@default=$DEFAULT_REVERCI@:>@])],
              [enable_reversed_intersect=$enableval],
              [enable_reversed_intersect=$DEFAULT_REVERCI])
AM_CONDITIONAL([WANT_REVERSED_INTERSECT], [test "x$enable_reversed_intersect" != xno])

############ Tool switches: ############
# Enable all stable tools in one go:
AC_ARG_ENABLE([ci],
			  [AS_HELP_STRING([--enable-ci],
			  [build nothing unless explicitly enabled @<:@default=no@:>@])],
			  [enable_ci=$enableval],
			  [enable_ci=no])
# Must zero out enableval, otherwise it will carry its value to the next use,
# so you can't test whether something was enabled due to defaults or to active enabling:
enableval=''

AC_ARG_ENABLE([all_tools],
			  [AS_HELP_STRING([--enable-all-tools],
			  [build all tools (excluding unstable or experimental tools, which must be explicitly enabled with --enable-dialects, --enable-glossers, --enable-phonetic, --enable-downcaseerror, --enable-L2, --enable-pattern-hyphenators, --enable-fomaspeller, --enable-vfstspeller) @<:@default=no@:>@])],
			  [enable_all_tools=$enableval],
			  [enable_all_tools=no])
enableval=''

# Enable morphological analysers - default is 'yes'
AC_ARG_ENABLE([analysers],
              [AS_HELP_STRING([--enable-analysers],
                              [build morphological analysers @<:@default=yes@:>@])],
              [enable_analysers=$enableval],
              [AS_IF([test "x$enable_all_tools" != xno],
                     [enable_analysers=$enable_all_tools],
                     [enable_analysers=$DEFAULT_ANALYSERS])
              ])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_analysers=no])
AM_CONDITIONAL([WANT_MORPHOLOGY], [test "x$enable_analysers" != xno])
enableval=''

# Enable morphological generators - default is 'yes'
AC_ARG_ENABLE([generators],
              [AS_HELP_STRING([--enable-generators],
                              [build morphological generators @<:@default=yes@:>@])],
              [enable_generators=$enableval],
              [AS_IF([test "x$enable_all_tools" != xno],
                     [enable_generators=$enable_all_tools],
                     [enable_generators=$DEFAULT_GENERATORS])
              ])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_generators=no])
AM_CONDITIONAL([WANT_GENERATION], [test "x$enable_generators" != xno])
enableval=''

# Enable glossing morphological analysers - default is 'no'
AC_ARG_ENABLE([glossers],
              [AS_HELP_STRING([--enable-glossers],
                              [build glossing morphological analysers @<:@default=no@:>@])],
              [enable_glossers=$enableval],
              [enable_glossers=no])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_glossers=no])
AM_CONDITIONAL([WANT_GLOSSERS], [test "x$enable_glossers" != xno])
enableval=''

# Enable text transcriptors - default is 'yes'
AC_ARG_ENABLE([transcriptors],
              [AS_HELP_STRING([--enable-transcriptors],
                              [build text transcriptors @<:@default=yes@:>@])],
              [enable_transcriptors=$enableval],
              [enable_transcriptors=yes])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_transcriptors=no])
AM_CONDITIONAL([WANT_TRANSCRIPTORS], [test "x$enable_transcriptors" != xno])
enableval=''

# Enable syntactic parsing - default is 'yes'
AC_ARG_ENABLE([syntax],
              [AS_HELP_STRING([--enable-syntax],
                              [build syntax parsing tools @<:@default=yes@:>@])],
              [enable_syntax=$enableval],
              [enable_syntax=yes])
AS_IF([test "x$enable_syntax" = "xyes" -a "x$gt_prog_vislcg3" = "xno"],
             [enable_syntax=no
              AC_MSG_ERROR([vislcg3 tools missing or too old, please install or disable syntax tools!])])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_syntax=no])
AM_CONDITIONAL([WANT_SYNTAX], [test "x$enable_syntax" != xno])
enableval=''
# $gt_prog_vislcg3

# Enable grammar checkers - default is 'no' (via $enable_all_tools)
AC_ARG_ENABLE([grammarchecker],
              [AS_HELP_STRING([--enable-grammarchecker],
                              [enable grammar checker @<:@default=no@:>@])],
              [enable_grammarchecker=$enableval],
              [enable_grammarchecker=$enable_all_tools])
AS_IF([test "x$enable_grammarchecker" = "xyes" -a "x$gt_prog_vislcg3" = "xno"],
      [enable_grammarchecker=no
       AC_MSG_ERROR([vislcg3 missing or too old - required for the grammar checker])],
      [AS_IF([test "x$enable_grammarchecker" = "xyes" -a "x$DIVVUN_VALIDATE_SUGGEST" = "xno"],
          [enable_grammarchecker=no
           AC_MSG_ERROR([divvun-validate-suggest required for building grammar checkers])])]
      [AS_IF([test "x$enable_grammarchecker" = "xyes" -a "x$DIVVUN_CHECKER" = "xno"],
          [enable_grammarchecker=no
           AC_MSG_ERROR([divvun-checker required for testing grammar checkers])])])
AS_IF([test "x$enable_ci" = "xyes" -a "x$enableval" = "x"], [enable_grammarchecker=no])
AM_CONDITIONAL([WANT_GRAMCHECK], [test "x$enable_grammarchecker" != xno])
enableval=''

# Enable all spellers - default is 'no'
AC_ARG_ENABLE([spellers],
              [AS_HELP_STRING([--enable-spellers],
                              [build any/all spellers @<:@default=no@:>@])],
              [enable_spellers=$enableval],
              [enable_spellers=$enable_all_tools])
AS_IF([test "x$enable_grammarchecker" != xno],[enable_spellers=yes])
AS_IF([test "x$enable_spellers" != xno -a "x$BC" = xfalse],
      [AC_MSG_ERROR([counting statistics for spell-checkers requires bc, install or disable spellers])])
AM_CONDITIONAL([WANT_SPELLERS], [test "x$enable_spellers" != xno])

# Enable hfst desktop spellers - default is 'yes' (but dependent on
# --enable-spellers)
AC_ARG_ENABLE([hfst-desktop-spellers],
              [AS_HELP_STRING([--enable-hfst-desktop-spellers],
                              [build hfst desktop spellers (dependent on --enable-spellers) @<:@default=yes@:>@])],
              [enable_desktop_hfstspellers=$enableval],
              [enable_desktop_hfstspellers=yes])
AS_IF([test "x$enable_spellers" = xno -o "x$gt_prog_hfst" = xno], [enable_desktop_hfstspellers=no],
      [AS_IF([test "x$ZIP" = "xfalse"],
             [enable_desktop_hfstspellers=no
              AC_MSG_ERROR([zip missing - required for desktop zhfst spellers])])])
AM_CONDITIONAL([WANT_HFST_DESKTOP_SPELLER], [test "x$enable_desktop_hfstspellers" != xno])

# Enable minimised fst-spellers by default:
AC_ARG_ENABLE([minimised-spellers],
              [AS_HELP_STRING([--enable-minimised-spellers],
                              [minimise hfst spellers @<:@default=$DEFAULT_SPELLER_MINIMISATION@:>@])],
              [enable_minimised_spellers=$enableval],
              [enable_minimised_spellers=$DEFAULT_SPELLER_MINIMISATION])
AS_IF([test "x$enable_minimised_spellers" != "xyes"],
      [AC_SUBST([HFST_MINIMIZE_SPELLER], ["$ac_cv_path_HFST_REMOVE_EPSILONS \$(HFST_FLAGS) \$(MORE_VERBOSITY) "])],
      [AC_SUBST([HFST_MINIMIZE_SPELLER], ["$ac_cv_path_HFST_REMOVE_EPSILONS \$(HFST_FLAGS) \$(MORE_VERBOSITY) \
                                         | $ac_cv_path_HFST_DETERMINIZE --encode-weights \$(HFST_FLAGS) \$(MORE_VERBOSITY) \
                                         | $ac_cv_path_HFST_MINIMIZE    --encode-weights \$(HFST_FLAGS) \$(MORE_VERBOSITY) "])])

# Enable Foma-based spellers, requires gzip - default is no
AC_ARG_ENABLE([fomaspeller],
              [AS_HELP_STRING([--enable-fomaspeller],
                              [build foma speller (dependent on --enable-spellers) @<:@default=no@:>@])],
              [enable_fomaspeller=$enableval],
              [enable_fomaspeller=no])
AS_IF([test "x$enable_fomaspeller" = "xyes" -a "x$gt_prog_hfst" != xno],
      [AS_IF([test "x$GZIP" = "xfalse"],
             [enable_fomaspeller=no
              AC_MSG_ERROR([gzip missing - required for foma spellers])])])
AM_CONDITIONAL([CAN_FOMA_SPELLER], [test "x$enable_fomaspeller" != xno])

# Enable hfst mobile spellers - default is 'no' (dependent on --enable-spellers)
AC_ARG_ENABLE([hfst-mobile-speller],
              [AS_HELP_STRING([--enable-hfst-mobile-speller],
                              [build hfst mobile spellers (dependent on --enable-spellers) @<:@default=no@:>@])],
              [enable_mobile_hfstspeller=$enableval],
              [enable_mobile_hfstspeller=$enable_all_tools])
AS_IF([test "x$enable_spellers" = xno -o "x$gt_prog_hfst" = xno], [enable_mobile_hfstspeller=no],
      [AS_IF([test "x$XZ" = "xfalse"],
             [enable_mobile_hfstspeller=no
              AC_MSG_ERROR([xz is missing - required for mobile zhfst spellers])])])
AM_CONDITIONAL([WANT_HFST_MOBILE_SPELLER], [test "x$enable_mobile_hfstspeller" != xno])

# Enable Vfst-based spellers - default is no
AC_ARG_ENABLE([vfstspeller],
              [AS_HELP_STRING([--enable-vfstspeller],
                              [build vfst speller (dependent on --enable-hfst-mobile-speller) @<:@default=no@:>@])],
              [enable_vfstspeller=$enableval],
              [enable_vfstspeller=no])
AS_IF([test "x$enable_vfstspeller" = "xyes" -a "x$enable_mobile_hfstspeller" = xno],
              [enable_vfstspeller=no])
AM_CONDITIONAL([WANT_VFST_SPELLER], [test "x$enable_vfstspeller" != xno])

## Disable Hunspell production by default:
#AC_ARG_ENABLE([hunspell],
#              [AS_HELP_STRING([--enable-hunspell],
#                              [enable hunspell building (dependent on --enable-spellers) @<:@default=no@:>@])],
#              [enable_hunspell=$enableval],
#              [enable_hunspell=no])
#AS_IF([test "x$enable_spellers" = xno], [enable_hunspell=no])
#AM_CONDITIONAL([WANT_HUNSPELL], [test "x$enable_hunspell" != xno])

# Enable pattern hyphenator - default is 'no'; requires fst hyphenator
AC_ARG_ENABLE([pattern-hyphenators],
              [AS_HELP_STRING([--enable-pattern-hyphenators],
                              [build pattern-based hyphenators (requires fst hyphenator) @<:@default=no@:>@])],
              [enable_pattern_hyphenators=$enableval],
              [enable_pattern_hyphenators=no])
AS_IF([test "x$enable_pattern_hyphenators" = "xyes" -a "x$PATGEN" = "xfalse"],
      [enable_pattern_hyphenators=no
       AC_MSG_ERROR([patgen required for building pattern hyphenators])])

# Enable fst hyphenator - default is 'no'
AC_ARG_ENABLE([fst-hyphenator],
              [AS_HELP_STRING([--enable-fst-hyphenator],
                              [build fst-based hyphenator @<:@default=no@:>@])],
              [enable_fst_hyphenator=$enableval],
              [enable_fst_hyphenator=$enable_all_tools])
# Automatically enable the fst hyphenator if pattern hyphenator is enabled:
AS_IF([test "x$enable_pattern_hyphenators" = "xyes"],
      [enable_fst_hyphenator=yes])
AM_CONDITIONAL([WANT_FST_HYPHENATOR], [test "x$enable_fst_hyphenator" != xno])

# Set up conditional for pattern hyphenators:
AM_CONDITIONAL([WANT_PATTERN_HYPHENATORS], [test "x$enable_pattern_hyphenators" != xno])

# Enable dictionary transducers - default is 'no'
AC_ARG_ENABLE([dicts],
              [AS_HELP_STRING([--enable-dicts],
                              [enable dictionary transducers @<:@default=no@:>@])],
              [enable_dicts=$enableval],
              [enable_dicts=$enable_all_tools])
AM_CONDITIONAL([WANT_DICTIONARIES], [test "x$enable_dicts" != xno])

# Enable Oahpa transducers - default is 'no'
AC_ARG_ENABLE([oahpa],
              [AS_HELP_STRING([--enable-oahpa],
                              [enable oahpa transducers @<:@default=no@:>@])],
              [enable_oahpa=$enableval],
              [enable_oahpa=$enable_all_tools])
AM_CONDITIONAL([WANT_OAHPA], [test "x$enable_oahpa" != xno])

# Enable L2 fst's for Oahpa:
AC_ARG_ENABLE([L2],
              [AS_HELP_STRING([--enable-L2],
                              [enable L2 analyser for Oahpa @<:@default=no@:>@])],
              [enable_L2=$enableval],
              [enable_L2=no])
AS_IF([test x$enable_oahpa = xno], [enable_L2=no],
    [AS_IF([test x$enable_L2 != xno -a \
      "$(find ${srcdir}/src -name "*-L2.*" | head -n 1)" = "" ],
      [AC_MSG_ERROR([You asked for the L2 analyser, but no L2 files were found])])])
AM_CONDITIONAL([WANT_L2], [test "x$enable_L2" != xno])

# Enable downcasing error fst's for Oahpa:
AC_ARG_ENABLE([downcaseerror],
              [AS_HELP_STRING([--enable-downcaseerror],
                              [enable downcaseerror analyser for Oahpa @<:@default=no@:>@])],
              [enable_downcaseerror=$enableval],
              [enable_downcaseerror=no])
AS_IF([test x$enable_oahpa = xno], [enable_downcaseerror=no])
AM_CONDITIONAL([WANT_DOWNCASEERROR], [test "x$enable_downcaseerror" != xno])

# Enable IPA conversion - default is 'no'
AC_ARG_ENABLE([phonetic],
              [AS_HELP_STRING([--enable-phonetic],
                              [enable phonetic transducers @<:@default=no@:>@])],
              [enable_phonetic=$enableval],
              [enable_phonetic=no])
AM_CONDITIONAL([WANT_PHONETIC], [test "x$enable_phonetic" != xno])

# Enable Apertium transducers - default is 'no'
AC_ARG_ENABLE([apertium],
              [AS_HELP_STRING([--enable-apertium],
                              [enable apertium transducers @<:@default=no@:>@])],
              [enable_apertium=$enableval],
              [enable_apertium=$enable_all_tools])
AS_IF([test "x$enable_apertium" = "xyes" -a "x$new_enough_python_available" = "xno"],
      [enable_apertium=no
       AC_MSG_ERROR([Python3 missing or too old, Python 3.5 or newer required])])
AS_IF([test "x$enable_apertium" = "xyes" -a "x$CG_RELABEL" = "xno"],
      [enable_apertium=no
       AC_MSG_ERROR([Apertium enabled but cg-relabel not found. Please install Vislcg3.])])
AM_CONDITIONAL([WANT_APERTIUM], [test "x$enable_apertium" != xno])

# Enable CG-based MT - default is 'no'
AC_ARG_ENABLE([cgmt],
              [AS_HELP_STRING([--enable-cgmt],
                              [enable cg-based machine translation @<:@default=no@:>@])],
              [enable_cgmt=$enableval],
              [enable_cgmt=no])
AS_IF([test "x$enable_cgmt" = "xyes" -a "x$GTPRIV" = "x"],
      [AC_MSG_ERROR([\$\$GTPRIV not set! CG-based MT requires access to closed-source tools in GTPRIV])])
AS_IF([test x$enable_tokenisers = xno -a x$enable_cgmt = xyes],
    [AC_MSG_ERROR([You need to enable tokenisers to build CG-based MT])])
AM_CONDITIONAL([CAN_CGMT], [test "x$enable_cgmt" != xno])

# Enable building of abbr.txt:
AC_ARG_ENABLE([abbr],
              [AS_HELP_STRING([--enable-abbr],
                              [enable generation of abbr.txt @<:@default=no@:>@])],
              [enable_abbr=$enableval],
              [enable_abbr=no])
AS_IF([test x$enable_abbr != xno -a \
    "$(find ${srcdir}/src/fst/stems/ -name "abbreviations.lexc" | head -n 1)" = "" ],
    [AC_MSG_ERROR([You asked for abbr.txt generation, but have no file \
src/fst/stems/abbreviations.lexc])])
AS_IF([test x$enable_abbr = xyes -a x$enable_generators = xno],
    [AC_MSG_ERROR([You need to enable generators to build the abbr file])])
AM_CONDITIONAL([WANT_ABBR], [test "x$enable_abbr" != xno])

# Enable building tokenisers - default is 'no'
AC_ARG_ENABLE([tokenisers],
              [AS_HELP_STRING([--enable-tokenisers],
                              [enable tokenisers @<:@default=no@:>@])],
              [enable_tokenisers=$enableval],
              [enable_tokenisers=$enable_all_tools])
AS_IF([test x$enable_tokenisers = xyes -a x$enable_analysers = xno],
    [AC_MSG_ERROR([You need to enable analysers to build tokenisers])])
AM_CONDITIONAL([WANT_TOKENISERS], [test "x$enable_tokenisers" != xno])

# Enable analyser tool - default is 'no' (via $enable_all_tools)
AC_ARG_ENABLE([analyser-tool],
              [AS_HELP_STRING([--enable-analyser-tool],
                              [enable analyser tool @<:@default=no@:>@])],
              [enable_analyser_tool=$enableval],
              [enable_analyser_tool=$enable_all_tools])
AS_IF([test "x$enable_analyser_tool" = "xyes" -a "x$gt_prog_vislcg3" = "xno"],
      [enable_analyser_tool=no
       AC_MSG_ERROR([vislcg3 missing or too old - required for the analyser tool])])
AS_IF([test x$enable_tokenisers = xno -a x$enable_analyser_tool = xyes],
    [AC_MSG_ERROR([You need to enable tokenisers to build the analyser tool])])
AM_CONDITIONAL([WANT_ANL_TOOL], [test "x$enable_analyser_tool" != xno])

# Enable building morphers - default is 'no'
AC_ARG_ENABLE([morpher],
              [AS_HELP_STRING([--enable-morpher],
                              [enable morphological segmenter @<:@default=no@:>@])],
              [enable_morpher=$enableval],
              [enable_morpher=no])
AM_CONDITIONAL([WANT_MORPHER], [test "x$enable_morpher" != xno])

# Enable dialect-specific analysers and tools, such as spellers:
AC_ARG_ENABLE([dialects],
              [AS_HELP_STRING([--enable-dialects],
                              [build dialect specific fst’s and spellers @<:@default=no@:>@])],
              [enable_dialects=$enableval],
              [enable_dialects=no])
AS_IF([test "x$enable_dialects" = "xyes" -a "x$DIALECTS" = "x"],
      [enable_dialects=no
       AC_MSG_ERROR([You have not defined any dialects. Please see the documentation.])])
AM_CONDITIONAL([WANT_DIALECTS], [test "x$enable_dialects" != xno])

# Enable dialect-specific analysers and tools, such as spellers:
AC_ARG_ENABLE([custom-fsts],
              [AS_HELP_STRING([--enable-custom-fsts],
                              [build custom fst’s @<:@default=no@:>@])],
              [enable_custom_fsts=$enableval],
              [enable_custom_fsts=$DEFAULT_CUSTOM_FSTS])
AM_CONDITIONAL([WANT_CUSTOM_FSTS], [test "x$enable_custom_fsts" != xno])

# Enable TTS transcriptors - default is 'no' (via $enable_all_tools)
AC_ARG_ENABLE([tts],
              [AS_HELP_STRING([--enable-tts],
                              [enable tts transcriptors @<:@default=no@:>@])],
              [enable_tts=$enableval],
              [enable_tts=$enable_all_tools])
AS_IF([test x$enable_tts = xyes -a x$enable_transcriptors = xno],
    [AC_MSG_ERROR([You need to enable transcriptors to build tts])])
AS_IF([test x$enable_tts = xyes -a x$enable_phonetic = xno],
    [AC_MSG_ERROR([You need to enable phonetic to build tts])])
AM_CONDITIONAL([WANT_TTS], [test "x$enable_tts" != xno])
enableval=''


])
m4trace:m4/giella-macros.m4:1123: -1- AC_DEFUN([gt_PRINT_FOOTER], [
cat<<EOF

  -- specialised fst’s (off by default): --
  * dictionary fst’s enabled: $enable_dicts
  * Oahpa transducers enabled: $enable_oahpa
    * L2 analyser: $enable_L2
    * downcase error analyser: $enable_downcaseerror
  * generate abbr.txt: $enable_abbr
  * build glossing fst’s: $enable_glossers
  * build dialect specific fst’s: $enable_dialects
  * custom fst’s: $enable_custom_fsts

  -- Tools (off by default): --
  * phonetic/IPA conversion enabled: $enable_phonetic
  * CG-based MT enabled: $enable_cgmt
  * Apertium MT fst’s enabled: $enable_apertium
  * build tokenisers: $enable_tokenisers
  * build morphololgical segmenter: $enable_morpher
  * build analyser tool: $enable_analyser_tool
  * build text-to-speech support: $enable_tts

  -- Proofing tools (off by default): --
  * hyphenators:
    * fst hyphenator enabled: $enable_fst_hyphenator
    * pattern hyphenator enabled (requires fst hyph): $enable_fst_hyphenator
  * spellers (zhfst files) enabled: $enable_spellers
    * desktop spellers:
      * installable packages enabled: $enable_desktop_hfstspellers
      * foma speller enabled: $enable_fomaspeller
    * mobile spellers (off by default, even with spellers enabled):
      * hfst speller enabled: $enable_mobile_hfstspeller
      * vfst speller enabled: $enable_vfstspeller
  * grammar checker enabled: $enable_grammarchecker

-- Building $PACKAGE_STRING (more specialised build targets listed above):

  -- Fst build tools: Xerox, Hfst or Foma - at least one must be installed
  * build Xerox fst’s: $gt_prog_xfst (default: $DEFAULT_XFST)
  * build HFST fst’s: $gt_prog_hfst (default: $DEFAULT_HFST)
  * build Foma fst’s: $gt_prog_foma (default: $DEFAULT_FOMA)

  -- basic packages (on by default): --
  * analysers enabled: $enable_analysers
  * generators enabled: $enable_generators
  * transcriptors enabled: $enable_transcriptors
  * syntactic tools enabled: $enable_syntax
  * yaml tests enabled: $enable_yamltests
  * generated documentation enabled: always

For more ./configure options, run ./configure --help

To build, test and install:
    make
    make check
    make install
EOF
AS_IF([test x$gt_prog_xslt = xno -a \
      "$(find ${srcdir}/src/fst/stems -name "*.xml" | head -n 1)" != "" ],
      [AC_MSG_WARN([You have XML source files, but XML transformation to LexC is
disabled. Please check the output of configure to locate any problems. The LexC
files will still compile though.
])])

AS_IF([test x$can_local_sync = xno -a x$can_wget_giella_libs = xno],
      [AC_MSG_WARN([Could not find GIELLA_LIBS, rsync or wget - speller installers will not be built, only zhfst files.])])

AS_IF([test x$can_wget_giella_libs = xyes],
      [AC_MSG_NOTICE([Could not find GIELLA_LIBS, but found wget - speller installers will be built, but requires a live Internet connection.])])

# Notify of fallback to Hfst
AS_IF([test "x$fallback_to_hfst" != x ],
      [AC_MSG_NOTICE([$fallback_to_hfst])])

# Notify of fallback to Foma
AS_IF([test "x$fallback_to_foma" != x ],
      [AC_MSG_NOTICE([$fallback_to_foma])])

dnl stick important warnings to bottom
dnl YAML test warning:
AS_IF([test "x$enable_yamltests" = "xno"],
      [AC_MSG_WARN([YAML testing could not be automatically enabled. To enable it, on MacOSX please do:

sudo port install python35 py35-pip
sudo pip-3.5 install PyYAML

On other systems, install python 3.5+ and the corresponding py-yaml using suitable tools for those systems.])])

])
m4trace:m4/hfst.m4:147: -1- AC_DEFUN([gt_PROG_HFST], [

### Required version of the Hfst tools:
_required_hfst_version=3.12.2

AC_ARG_WITH([hfst],
            [AS_HELP_STRING([--with-hfst=DIRECTORY],
            [define HFST binary path if not in PATH @<:@default=no@:>@])],
            [with_hfst=$withval],
            [with_hfst=$DEFAULT_HFST])

# If Xerox tools are not found, assume we want Hfst:
AS_IF([test "x$DEFAULT_HFST" = xno \
         -a "x$gt_prog_xfst" = xno \
         -a "x$gt_prog_foma" = xno ], [
         with_hfst=yes
         fallback_to_hfst="INFO: Xfst was not found, falling back to using Hfst"
         ])

AC_PATH_PROG(HFST_COMPOSE,           hfst-compose,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_COMPOSE_INTERSECT, hfst-compose-intersect, false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_CONCATENATE,       hfst-concatenate,       false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_CONJUNCT,          hfst-conjunct,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_DETERMINIZE,       hfst-determinize,       false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_DISJUNCT,          hfst-disjunct,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_FOMA,              hfst-foma,              false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_FST2FST,           hfst-fst2fst,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_FST2STRINGS,       hfst-fst2strings,       false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_FST2TXT,           hfst-fst2txt,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_INFO,              hfst-info, 	         false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_INTERSECT,         hfst-intersect,         false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_INVERT,            hfst-invert,            false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_LEXC,              hfst-lexc,              false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_LOOKUP,            hfst-lookup,            false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_MINIMIZE,          hfst-minimize,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_MINUS,             hfst-minus,             false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_MULTIPLY,          hfst-multiply,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_NAME,              hfst-name,              false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_OPTIMIZED_LOOKUP,  hfst-optimized-lookup,  false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PAIR_TEST,         hfst-pair-test,         false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PROC,              hfst-proc,              false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PMATCH2FST,        hfst-pmatch2fst,        false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PROJECT,           hfst-project,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PRUNE_ALPHABET,    hfst-prune-alphabet,    false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_PUSH_WEIGHTS,      hfst-push-weights,      false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_REGEXP2FST,        hfst-regexp2fst,        false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_REMOVE_EPSILONS,   hfst-remove-epsilons,   false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_REPEAT,            hfst-repeat,            false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_REVERSE,           hfst-reverse,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_REWEIGHT,          hfst-reweight,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_SPLIT, 	         hfst-split,             false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_STRINGS2FST,       hfst-strings2fst,       false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_SUBSTITUTE,        hfst-substitute,        false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_SUBTRACT,          hfst-subtract,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_SUMMARIZE,         hfst-summarize,         false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_TOKENISE,          hfst-tokenize,          false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_TWOLC,             hfst-twolc,             false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_TXT2FST,           hfst-txt2fst,           false, $PATH$PATH_SEPARATOR$with_hfst)
AC_PATH_PROG(HFST_XFST,              hfst-xfst,              false, $PATH$PATH_SEPARATOR$with_hfst)

# hfst-ospell is a separate package:
AC_PATH_PROG(HFST_OSPELL,            hfst-ospell,            false, $PATH$PATH_SEPARATOR$with_hfst)

AS_IF([test x$with_hfst != xno], [
_gtd_hfst_min_version=m4_default([$1], [$_required_hfst_version])
AC_MSG_CHECKING([whether hfst is at least $_gtd_hfst_min_version and has the required tools])
if test x$HFST_INFO != xfalse; then
    if $HFST_INFO --atleast-version=$_gtd_hfst_min_version ; then
        if test x$HFST_COMPOSE         = "xfalse" \
             -o x$HFST_DETERMINIZE     = "xfalse" \
             -o x$HFST_FST2FST         = "xfalse" \
             -o x$HFST_INVERT          = "xfalse" \
             -o x$HFST_LEXC            = "xfalse" \
             -o x$HFST_LOOKUP          = "xfalse" \
             -o x$HFST_MINIMIZE        = "xfalse" \
             -o x$HFST_REGEXP2FST      = "xfalse" \
             -o x$HFST_REMOVE_EPSILONS = "xfalse" \
             -o x$HFST_SUBSTITUTE      = "xfalse" \
             -o x$HFST_TWOLC           = "xfalse" \
             -o x$HFST_XFST            = "xfalse" \
             ; then
            gt_prog_hfst=no
            AC_MSG_ERROR([One of the required Hfst tools were not found. For details, see above.])
        else
            AC_MSG_RESULT([yes])
            gt_prog_hfst=yes
        fi
    else
        AC_MSG_ERROR([You requested --with-hfst: hfst is too old. OR: no other fst tools were found (Xerox, Foma).])
    fi
else
    AC_MSG_RESULT([no])
    gt_prog_hfst=no
    if test $with_hfst != "no"; then
        AC_MSG_ERROR([You requested --with-hfst, but hfst is too old or not installed])
    fi
fi
], [gt_prog_hfst=no])
AM_CONDITIONAL([CAN_HFST],      [test "x$gt_prog_hfst" = "xyes"])

# You can specify the fst transducer format (=backend) for hfst
# - default is 'openfst-tropical'
AC_ARG_WITH([backend-format],
              [AS_HELP_STRING([--with-backend-format=FORMAT],
                              [enable the hfst backend format specified (one of: sfst, foma, openfst-tropical, openfst-log) @<:@default=$DEFAULT_HFST_BACKEND@:>@])],
              [with_backend=$withval],
              [with_backend=$DEFAULT_HFST_BACKEND])
AC_SUBST([HFST_FORMAT_NAME], [$with_backend])
AM_CONDITIONAL([WITH_OFST_TROPICAL], [test "$with_backend" == openfst-tropical])
AM_CONDITIONAL([WITH_OFST_LOG],      [test "$with_backend" == openfst-log])
AM_CONDITIONAL([WITH_SFST],          [test "$with_backend" == sfst])
AM_CONDITIONAL([WITH_FOMA],          [test "$with_backend" == foma])

])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:27: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:27: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:32: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:45: -1- AM_INIT_AUTOMAKE([1.11.6 tar-pax -Wall -Werror
  foreign -Wno-portability
                
])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:45: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:45: -1- AM_AUTOMAKE_VERSION([1.16.1])
m4trace:configure.ac:45: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:45: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:45: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:45: -1- _AM_SET_OPTIONS([1.11.6 tar-pax -Wall -Werror
  foreign -Wno-portability
                
])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([1.11.6])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([1.11.6])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([tar-pax])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([-Werror])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([-Werror])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:45: -1- _AM_SET_OPTION([-Wno-portability])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([-Wno-portability])
m4trace:configure.ac:45: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:45: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:45: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:45: -1- AM_SANITY_CHECK
m4trace:configure.ac:45: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:45: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:45: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:45: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:45: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:45: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:45: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:45: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:45: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:45: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:45: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:45: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:45: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:45: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:45: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:45: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:45: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:45: -1- _AM_PROG_TAR([pax])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:45: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:45: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:45: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:45: -1- AM_RUN_LOG([cat conftest.dir/file])
m4trace:configure.ac:45: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:45: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:45: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:45: -1- AM_SILENT_RULES
m4trace:configure.ac:45: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:45: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:45: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:46: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:46: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:46: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:46: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:46: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:46: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:46: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:46: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:46: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:50: -1- m4_pattern_allow([^SPELLERVERSION$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^GLANG$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^GTLANG$])
m4trace:configure.ac:63: -1- m4_pattern_allow([^GLANG2$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^GTLANG2$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^GLANGUAGE$])
m4trace:configure.ac:68: -1- m4_pattern_allow([^GTLANGUAGE$])
m4trace:configure.ac:77: -1- m4_pattern_allow([^DEFAULT_WS$])
m4trace:configure.ac:78: -1- m4_pattern_allow([^ALT_WSS$])
m4trace:configure.ac:79: -1- AM_CONDITIONAL([HAVE_ALT_WSS], [test "x$ALT_WSS" != "x"])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE_ALT_WSS_TRUE$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE_ALT_WSS_FALSE$])
m4trace:configure.ac:79: -1- _AM_SUBST_NOTMAKE([HAVE_ALT_WSS_TRUE])
m4trace:configure.ac:79: -1- _AM_SUBST_NOTMAKE([HAVE_ALT_WSS_FALSE])
m4trace:configure.ac:87: -1- m4_pattern_allow([^AREAS$])
m4trace:configure.ac:88: -1- AM_CONDITIONAL([HAVE_AREAS], [test "x$AREAS" != "x"])
m4trace:configure.ac:88: -1- m4_pattern_allow([^HAVE_AREAS_TRUE$])
m4trace:configure.ac:88: -1- m4_pattern_allow([^HAVE_AREAS_FALSE$])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([HAVE_AREAS_TRUE])
m4trace:configure.ac:88: -1- _AM_SUBST_NOTMAKE([HAVE_AREAS_FALSE])
m4trace:configure.ac:97: -1- m4_pattern_allow([^DEFAULT_ORTH$])
m4trace:configure.ac:98: -1- m4_pattern_allow([^ALT_ORTHS$])
m4trace:configure.ac:100: -1- AM_CONDITIONAL([HAVE_ALT_ORTHS], [test "x$ALT_ORTHS" != "x" \
                                    -a "x$DEFAULT_ORTH" != "x"])
m4trace:configure.ac:100: -1- m4_pattern_allow([^HAVE_ALT_ORTHS_TRUE$])
m4trace:configure.ac:100: -1- m4_pattern_allow([^HAVE_ALT_ORTHS_FALSE$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([HAVE_ALT_ORTHS_TRUE])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([HAVE_ALT_ORTHS_FALSE])
m4trace:configure.ac:104: -1- AM_CONDITIONAL([WANT_ALT_ORTH_PROOFTOOLS], [ true ])
m4trace:configure.ac:104: -1- m4_pattern_allow([^WANT_ALT_ORTH_PROOFTOOLS_TRUE$])
m4trace:configure.ac:104: -1- m4_pattern_allow([^WANT_ALT_ORTH_PROOFTOOLS_FALSE$])
m4trace:configure.ac:104: -1- _AM_SUBST_NOTMAKE([WANT_ALT_ORTH_PROOFTOOLS_TRUE])
m4trace:configure.ac:104: -1- _AM_SUBST_NOTMAKE([WANT_ALT_ORTH_PROOFTOOLS_FALSE])
m4trace:configure.ac:110: -1- AM_CONDITIONAL([DEFAULT_CASE_HANDLING], [ true ])
m4trace:configure.ac:110: -1- m4_pattern_allow([^DEFAULT_CASE_HANDLING_TRUE$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^DEFAULT_CASE_HANDLING_FALSE$])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([DEFAULT_CASE_HANDLING_TRUE])
m4trace:configure.ac:110: -1- _AM_SUBST_NOTMAKE([DEFAULT_CASE_HANDLING_FALSE])
m4trace:configure.ac:116: -1- m4_pattern_allow([^DIALECTS$])
m4trace:configure.ac:117: -1- AM_CONDITIONAL([HAVE_DIALECTS], [test "x$DIALECTS" != "x"])
m4trace:configure.ac:117: -1- m4_pattern_allow([^HAVE_DIALECTS_TRUE$])
m4trace:configure.ac:117: -1- m4_pattern_allow([^HAVE_DIALECTS_FALSE$])
m4trace:configure.ac:117: -1- _AM_SUBST_NOTMAKE([HAVE_DIALECTS_TRUE])
m4trace:configure.ac:117: -1- _AM_SUBST_NOTMAKE([HAVE_DIALECTS_FALSE])
m4trace:configure.ac:128: -1- m4_pattern_allow([^NO_PHONOLOGY$])
m4trace:configure.ac:129: -1- AM_CONDITIONAL([SKIP_PHONOLOGY], [test "x$NO_PHONOLOGY" != "x"])
m4trace:configure.ac:129: -1- m4_pattern_allow([^SKIP_PHONOLOGY_TRUE$])
m4trace:configure.ac:129: -1- m4_pattern_allow([^SKIP_PHONOLOGY_FALSE$])
m4trace:configure.ac:129: -1- _AM_SUBST_NOTMAKE([SKIP_PHONOLOGY_TRUE])
m4trace:configure.ac:129: -1- _AM_SUBST_NOTMAKE([SKIP_PHONOLOGY_FALSE])
m4trace:configure.ac:142: -1- m4_pattern_allow([^LEXREF_IN_XFSCRIPT$])
m4trace:configure.ac:143: -1- AM_CONDITIONAL([LEXREF_IN_PHONOLOGY], [test "x$LEXREF_IN_XFSCRIPT" != "x"])
m4trace:configure.ac:143: -1- m4_pattern_allow([^LEXREF_IN_PHONOLOGY_TRUE$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^LEXREF_IN_PHONOLOGY_FALSE$])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([LEXREF_IN_PHONOLOGY_TRUE])
m4trace:configure.ac:143: -1- _AM_SUBST_NOTMAKE([LEXREF_IN_PHONOLOGY_FALSE])
m4trace:configure.ac:148: -1- m4_pattern_allow([^DEFAULT_FOMA$])
m4trace:configure.ac:149: -1- m4_pattern_allow([^DEFAULT_HFST$])
m4trace:configure.ac:150: -1- m4_pattern_allow([^DEFAULT_XFST$])
m4trace:configure.ac:151: -1- m4_pattern_allow([^DEFAULT_HYPERMIN$])
m4trace:configure.ac:152: -1- m4_pattern_allow([^DEFAULT_REVERCI$])
m4trace:configure.ac:153: -1- m4_pattern_allow([^DEFAULT_HFST_BACKEND$])
m4trace:configure.ac:154: -1- m4_pattern_allow([^DEFAULT_SPELLER_MINIMISATION$])
m4trace:configure.ac:155: -1- m4_pattern_allow([^DEFAULT_ANALYSERS$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^DEFAULT_GENERATORS$])
m4trace:configure.ac:157: -1- m4_pattern_allow([^DEFAULT_CUSTOM_FSTS$])
m4trace:configure.ac:160: -1- gt_PROG_SCRIPTS_PATHS
m4trace:configure.ac:160: -1- m4_pattern_allow([^GTCORESH$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GIELLA_CORE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GTCORE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GIELLA_CORE_VERSION$])
m4trace:configure.ac:160: -1- AX_COMPARE_VERSION([$_giella_core_version], [ge], [$_giella_core_min_version], [giella_core_version_ok=yes], [giella_core_version_ok=no])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GIELLA_SHARED$])
m4trace:configure.ac:160: -1- AX_COMPARE_VERSION([$_giella_shared_version], [ge], [$_giella_shared_min_version], [giella_shared_version_ok=yes], [giella_shared_version_ok=no])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GIELLA_LIBS$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^BC$])
m4trace:configure.ac:160: -1- AM_PATH_PYTHON([3.5], [], [:])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:160: -1- AM_PYTHON_CHECK_VERSION([$PYTHON], [3.5], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
m4trace:configure.ac:160: -1- AM_RUN_LOG([$PYTHON -c "$prog"])
m4trace:configure.ac:160: -1- AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [3.5], [break])
m4trace:configure.ac:160: -1- AM_RUN_LOG([$am_cv_pathless_PYTHON -c "$prog"])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON_PREFIX$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON_EXEC_PREFIX$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^PYTHON_PLATFORM$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^pythondir$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^pkgpythondir$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^pyexecdir$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^pkgpyexecdir$])
m4trace:configure.ac:160: -1- AX_PYTHON_MODULE([yaml])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([CAN_YAML_TEST], [test "x$enable_yamltests" != xno])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_YAML_TEST_TRUE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_YAML_TEST_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_YAML_TEST_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_YAML_TEST_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^GAWK$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^FORREST$])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([CAN_FORREST_VALIDATE], [test "x$giellalt_forrest_validation" != xno])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_FORREST_VALIDATE_TRUE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_FORREST_VALIDATE_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_FORREST_VALIDATE_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_FORREST_VALIDATE_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^NPM$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^R$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^DIVVUN_ACCURACY$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^RSYNC$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^WGET$])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([CAN_LOCALSYNC], [test "x$can_local_sync" != xno ])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_LOCALSYNC_TRUE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_LOCALSYNC_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_LOCALSYNC_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_LOCALSYNC_FALSE])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([CAN_REMOTE_SYNC], [test "x$can_wget_giella_libs" != xno ])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_REMOTE_SYNC_TRUE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_REMOTE_SYNC_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_REMOTE_SYNC_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_REMOTE_SYNC_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^DIFFTOOL$])
m4trace:configure.ac:160: -1- AM_CONDITIONAL([CAN_MERGE], [test "x$can_merge" != xno ])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_MERGE_TRUE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CAN_MERGE_FALSE$])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_MERGE_TRUE])
m4trace:configure.ac:160: -1- _AM_SUBST_NOTMAKE([CAN_MERGE_FALSE])
m4trace:configure.ac:160: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:160: -1- AX_CHECK_GNU_MAKE([])
m4trace:configure.ac:160: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^ifGNUmake$])
m4trace:configure.ac:160: -1- AX_COMPARE_VERSION([$ax_check_gnu_make_version], [ge], [$_GNU_make_min_version], [
                    AC_MSG_RESULT([yes])
                    # Reset the MAKE variable, to ensure we're using GNU make:
                    MAKE=$_cv_gnu_make_command
                   ], [AC_MSG_ERROR([GNU Make too old ($ax_check_gnu_make_version), please install at least $_GNU_make_min_version])
                   ])
m4trace:configure.ac:160: -1- m4_pattern_allow([^CYGWINJAVAPATH$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^SEE$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^DIVVUN_VALIDATE_SUGGEST$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^DIVVUN_CHECKER$])
m4trace:configure.ac:163: -1- gt_PROG_XFST
m4trace:configure.ac:163: -1- m4_pattern_allow([^PRINTF$])
m4trace:configure.ac:163: -1- m4_pattern_allow([^XFST$])
m4trace:configure.ac:163: -1- m4_pattern_allow([^TWOLC$])
m4trace:configure.ac:163: -1- m4_pattern_allow([^LEXC$])
m4trace:configure.ac:163: -1- m4_pattern_allow([^LOOKUP$])
m4trace:configure.ac:163: -1- AM_CONDITIONAL([CAN_XFST], [test "x$gt_prog_xfst" != xno])
m4trace:configure.ac:163: -1- m4_pattern_allow([^CAN_XFST_TRUE$])
m4trace:configure.ac:163: -1- m4_pattern_allow([^CAN_XFST_FALSE$])
m4trace:configure.ac:163: -1- _AM_SUBST_NOTMAKE([CAN_XFST_TRUE])
m4trace:configure.ac:163: -1- _AM_SUBST_NOTMAKE([CAN_XFST_FALSE])
m4trace:configure.ac:166: -1- gt_PROG_FOMA
m4trace:configure.ac:166: -1- m4_pattern_allow([^PRINTF$])
m4trace:configure.ac:166: -1- m4_pattern_allow([^FOMA$])
m4trace:configure.ac:166: -1- m4_pattern_allow([^FLOOKUP$])
m4trace:configure.ac:166: -1- m4_pattern_allow([^CGFLOOKUP$])
m4trace:configure.ac:166: -1- AM_CONDITIONAL([CAN_FOMA], [test "x$gt_prog_foma" != xno])
m4trace:configure.ac:166: -1- m4_pattern_allow([^CAN_FOMA_TRUE$])
m4trace:configure.ac:166: -1- m4_pattern_allow([^CAN_FOMA_FALSE$])
m4trace:configure.ac:166: -1- _AM_SUBST_NOTMAKE([CAN_FOMA_TRUE])
m4trace:configure.ac:166: -1- _AM_SUBST_NOTMAKE([CAN_FOMA_FALSE])
m4trace:configure.ac:166: -1- AM_CONDITIONAL([HAS_FOMA], [test "x$FOMA" != xfalse ])
m4trace:configure.ac:166: -1- m4_pattern_allow([^HAS_FOMA_TRUE$])
m4trace:configure.ac:166: -1- m4_pattern_allow([^HAS_FOMA_FALSE$])
m4trace:configure.ac:166: -1- _AM_SUBST_NOTMAKE([HAS_FOMA_TRUE])
m4trace:configure.ac:166: -1- _AM_SUBST_NOTMAKE([HAS_FOMA_FALSE])
m4trace:configure.ac:169: -1- gt_PROG_HFST
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_COMPOSE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_COMPOSE_INTERSECT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_CONCATENATE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_CONJUNCT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_DETERMINIZE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_DISJUNCT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_FOMA$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_FST2FST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_FST2STRINGS$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_FST2TXT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_INFO$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_INTERSECT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_INVERT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_LEXC$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_LOOKUP$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_MINIMIZE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_MINUS$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_MULTIPLY$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_NAME$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_OPTIMIZED_LOOKUP$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PAIR_TEST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PROC$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PMATCH2FST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PROJECT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PRUNE_ALPHABET$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_PUSH_WEIGHTS$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_REGEXP2FST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_REMOVE_EPSILONS$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_REPEAT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_REVERSE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_REWEIGHT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_SPLIT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_STRINGS2FST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_SUBSTITUTE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_SUBTRACT$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_SUMMARIZE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_TOKENISE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_TWOLC$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_TXT2FST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_XFST$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_OSPELL$])
m4trace:configure.ac:169: -1- AM_CONDITIONAL([CAN_HFST], [test "x$gt_prog_hfst" = "xyes"])
m4trace:configure.ac:169: -1- m4_pattern_allow([^CAN_HFST_TRUE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^CAN_HFST_FALSE$])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([CAN_HFST_TRUE])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([CAN_HFST_FALSE])
m4trace:configure.ac:169: -1- m4_pattern_allow([^HFST_FORMAT_NAME$])
m4trace:configure.ac:169: -1- AM_CONDITIONAL([WITH_OFST_TROPICAL], [test "$with_backend" == openfst-tropical])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_OFST_TROPICAL_TRUE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_OFST_TROPICAL_FALSE$])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_OFST_TROPICAL_TRUE])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_OFST_TROPICAL_FALSE])
m4trace:configure.ac:169: -1- AM_CONDITIONAL([WITH_OFST_LOG], [test "$with_backend" == openfst-log])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_OFST_LOG_TRUE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_OFST_LOG_FALSE$])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_OFST_LOG_TRUE])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_OFST_LOG_FALSE])
m4trace:configure.ac:169: -1- AM_CONDITIONAL([WITH_SFST], [test "$with_backend" == sfst])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_SFST_TRUE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_SFST_FALSE$])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_SFST_TRUE])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_SFST_FALSE])
m4trace:configure.ac:169: -1- AM_CONDITIONAL([WITH_FOMA], [test "$with_backend" == foma])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_FOMA_TRUE$])
m4trace:configure.ac:169: -1- m4_pattern_allow([^WITH_FOMA_FALSE$])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_FOMA_TRUE])
m4trace:configure.ac:169: -1- _AM_SUBST_NOTMAKE([WITH_FOMA_FALSE])
m4trace:configure.ac:172: -1- gt_PROG_VFST
m4trace:configure.ac:172: -1- m4_pattern_allow([^VOIKKOSPELL$])
m4trace:configure.ac:172: -1- m4_pattern_allow([^VOIKKOHYPHENATE$])
m4trace:configure.ac:172: -1- m4_pattern_allow([^VOIKKOGC$])
m4trace:configure.ac:172: -1- m4_pattern_allow([^VOIKKOVFSTC$])
m4trace:configure.ac:172: -1- AM_CONDITIONAL([CAN_VFST], [test "x$gt_prog_voikko" != xno])
m4trace:configure.ac:172: -1- m4_pattern_allow([^CAN_VFST_TRUE$])
m4trace:configure.ac:172: -1- m4_pattern_allow([^CAN_VFST_FALSE$])
m4trace:configure.ac:172: -1- _AM_SUBST_NOTMAKE([CAN_VFST_TRUE])
m4trace:configure.ac:172: -1- _AM_SUBST_NOTMAKE([CAN_VFST_FALSE])
m4trace:configure.ac:175: -1- gt_PROG_VISLCG3
m4trace:configure.ac:175: -1- m4_pattern_allow([^VISLCG3$])
m4trace:configure.ac:175: -1- m4_pattern_allow([^VISLCG3_COMP$])
m4trace:configure.ac:175: -1- m4_pattern_allow([^CG_RELABEL$])
m4trace:configure.ac:175: -1- m4_pattern_allow([^CG_MWESPLIT$])
m4trace:configure.ac:175: -1- AX_COMPARE_VERSION([$_vislcg3_version], [ge], [$_giella_core_vislcg3_min_version], [gt_prog_vislcg3=yes
                    AC_MSG_RESULT([yes - $_vislcg3_version])
                   ], [gt_prog_vislcg3=no
                    AC_MSG_RESULT([no - $_vislcg3_version])
                   ])
m4trace:configure.ac:175: -1- AM_CONDITIONAL([CAN_VISLCG], [test "x$gt_prog_vislcg3" != xno])
m4trace:configure.ac:175: -1- m4_pattern_allow([^CAN_VISLCG_TRUE$])
m4trace:configure.ac:175: -1- m4_pattern_allow([^CAN_VISLCG_FALSE$])
m4trace:configure.ac:175: -1- _AM_SUBST_NOTMAKE([CAN_VISLCG_TRUE])
m4trace:configure.ac:175: -1- _AM_SUBST_NOTMAKE([CAN_VISLCG_FALSE])
m4trace:configure.ac:178: -1- gt_PROG_SAXON
m4trace:configure.ac:178: -1- m4_pattern_allow([^SAXON$])
m4trace:configure.ac:178: -1- m4_pattern_allow([^JV$])
m4trace:configure.ac:178: -2- m4_pattern_allow([^SAXONJAR$])
m4trace:configure.ac:178: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
m4/giella-macros.m4:631: gt_PROG_SAXON is expanded from...
configure.ac:178: the top level])
m4trace:configure.ac:178: -2- m4_pattern_allow([^SAXONJAR$])
m4trace:configure.ac:178: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
m4/giella-macros.m4:631: gt_PROG_SAXON is expanded from...
configure.ac:178: the top level])
m4trace:configure.ac:178: -2- m4_pattern_allow([^SAXONJAR$])
m4trace:configure.ac:178: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
m4/giella-macros.m4:631: gt_PROG_SAXON is expanded from...
configure.ac:178: the top level])
m4trace:configure.ac:178: -2- m4_pattern_allow([^SAXONJAR$])
m4trace:configure.ac:178: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
m4/giella-macros.m4:631: gt_PROG_SAXON is expanded from...
configure.ac:178: the top level])
m4trace:configure.ac:178: -2- m4_pattern_allow([^SAXONJAR$])
m4trace:configure.ac:178: -1- _m4_warn([cross], [cannot check for file existence when cross compiling], [../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
../../lib/m4sugar/m4sh.m4:643: AS_IF is expanded from...
../../lib/autoconf/general.m4:2791: AC_CHECK_FILE is expanded from...
m4/giella-macros.m4:631: gt_PROG_SAXON is expanded from...
configure.ac:178: the top level])
m4trace:configure.ac:178: -1- AX_COMPARE_VERSION([$_saxon_version], [ge], [$_saxon_min_version], [_saxonjar=yes
                    AC_MSG_RESULT([yes - $_saxon_version])
                   ], [_saxonjar=no
                    AC_MSG_RESULT([no - $_saxon_version])
                   ])
m4trace:configure.ac:178: -1- AM_CONDITIONAL([CAN_SAXON], [test "x$gt_prog_saxon" != xno])
m4trace:configure.ac:178: -1- m4_pattern_allow([^CAN_SAXON_TRUE$])
m4trace:configure.ac:178: -1- m4_pattern_allow([^CAN_SAXON_FALSE$])
m4trace:configure.ac:178: -1- _AM_SUBST_NOTMAKE([CAN_SAXON_TRUE])
m4trace:configure.ac:178: -1- _AM_SUBST_NOTMAKE([CAN_SAXON_FALSE])
m4trace:configure.ac:178: -1- AM_CONDITIONAL([CAN_JAVA], [test "x$gt_prog_java" != xno -a "x$_saxonjar" != xno])
m4trace:configure.ac:178: -1- m4_pattern_allow([^CAN_JAVA_TRUE$])
m4trace:configure.ac:178: -1- m4_pattern_allow([^CAN_JAVA_FALSE$])
m4trace:configure.ac:178: -1- _AM_SUBST_NOTMAKE([CAN_JAVA_TRUE])
m4trace:configure.ac:178: -1- _AM_SUBST_NOTMAKE([CAN_JAVA_FALSE])
m4trace:configure.ac:183: -1- gt_ENABLE_TARGETS
m4trace:configure.ac:183: -1- m4_pattern_allow([^ZIP$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^GZIP$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^TAR$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^PATGEN$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^XZ$])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([CAN_XZ], [test "x$ac_cv_prog_XZ" != xfalse])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_XZ_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_XZ_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_XZ_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_XZ_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_HYPERMINIMISATION], [test "x$enable_hyperminimisation" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HYPERMINIMISATION_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HYPERMINIMISATION_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HYPERMINIMISATION_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HYPERMINIMISATION_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_LEXC_ALIGNMENT], [test "x$enable_alignment" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_LEXC_ALIGNMENT_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_LEXC_ALIGNMENT_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_LEXC_ALIGNMENT_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_LEXC_ALIGNMENT_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_TWOSTEP_INTERSECT], [test "x$enable_twostep_intersect" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TWOSTEP_INTERSECT_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TWOSTEP_INTERSECT_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TWOSTEP_INTERSECT_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TWOSTEP_INTERSECT_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_REVERSED_INTERSECT], [test "x$enable_reversed_intersect" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_REVERSED_INTERSECT_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_REVERSED_INTERSECT_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_REVERSED_INTERSECT_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_REVERSED_INTERSECT_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_MORPHOLOGY], [test "x$enable_analysers" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_MORPHOLOGY_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_MORPHOLOGY_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_MORPHOLOGY_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_MORPHOLOGY_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_GENERATION], [test "x$enable_generators" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GENERATION_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GENERATION_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GENERATION_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GENERATION_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_GLOSSERS], [test "x$enable_glossers" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GLOSSERS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GLOSSERS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GLOSSERS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GLOSSERS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_TRANSCRIPTORS], [test "x$enable_transcriptors" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TRANSCRIPTORS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TRANSCRIPTORS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TRANSCRIPTORS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TRANSCRIPTORS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_SYNTAX], [test "x$enable_syntax" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_SYNTAX_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_SYNTAX_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_SYNTAX_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_SYNTAX_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_GRAMCHECK], [test "x$enable_grammarchecker" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GRAMCHECK_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_GRAMCHECK_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GRAMCHECK_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_GRAMCHECK_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_SPELLERS], [test "x$enable_spellers" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_SPELLERS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_SPELLERS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_SPELLERS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_SPELLERS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_HFST_DESKTOP_SPELLER], [test "x$enable_desktop_hfstspellers" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HFST_DESKTOP_SPELLER_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HFST_DESKTOP_SPELLER_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HFST_DESKTOP_SPELLER_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HFST_DESKTOP_SPELLER_FALSE])
m4trace:configure.ac:183: -1- m4_pattern_allow([^HFST_MINIMIZE_SPELLER$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^HFST_MINIMIZE_SPELLER$])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([CAN_FOMA_SPELLER], [test "x$enable_fomaspeller" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_FOMA_SPELLER_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_FOMA_SPELLER_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_FOMA_SPELLER_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_FOMA_SPELLER_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_HFST_MOBILE_SPELLER], [test "x$enable_mobile_hfstspeller" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HFST_MOBILE_SPELLER_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_HFST_MOBILE_SPELLER_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HFST_MOBILE_SPELLER_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_HFST_MOBILE_SPELLER_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_VFST_SPELLER], [test "x$enable_vfstspeller" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_VFST_SPELLER_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_VFST_SPELLER_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_VFST_SPELLER_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_VFST_SPELLER_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_FST_HYPHENATOR], [test "x$enable_fst_hyphenator" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_FST_HYPHENATOR_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_FST_HYPHENATOR_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_FST_HYPHENATOR_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_FST_HYPHENATOR_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_PATTERN_HYPHENATORS], [test "x$enable_pattern_hyphenators" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_PATTERN_HYPHENATORS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_PATTERN_HYPHENATORS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_PATTERN_HYPHENATORS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_PATTERN_HYPHENATORS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_DICTIONARIES], [test "x$enable_dicts" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DICTIONARIES_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DICTIONARIES_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DICTIONARIES_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DICTIONARIES_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_OAHPA], [test "x$enable_oahpa" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_OAHPA_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_OAHPA_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_OAHPA_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_OAHPA_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_L2], [test "x$enable_L2" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_L2_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_L2_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_L2_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_L2_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_DOWNCASEERROR], [test "x$enable_downcaseerror" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DOWNCASEERROR_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DOWNCASEERROR_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DOWNCASEERROR_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DOWNCASEERROR_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_PHONETIC], [test "x$enable_phonetic" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_PHONETIC_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_PHONETIC_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_PHONETIC_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_PHONETIC_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_APERTIUM], [test "x$enable_apertium" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_APERTIUM_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_APERTIUM_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_APERTIUM_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_APERTIUM_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([CAN_CGMT], [test "x$enable_cgmt" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_CGMT_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^CAN_CGMT_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_CGMT_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([CAN_CGMT_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_ABBR], [test "x$enable_abbr" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_ABBR_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_ABBR_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_ABBR_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_ABBR_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_TOKENISERS], [test "x$enable_tokenisers" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TOKENISERS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TOKENISERS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TOKENISERS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TOKENISERS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_ANL_TOOL], [test "x$enable_analyser_tool" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_ANL_TOOL_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_ANL_TOOL_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_ANL_TOOL_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_ANL_TOOL_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_MORPHER], [test "x$enable_morpher" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_MORPHER_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_MORPHER_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_MORPHER_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_MORPHER_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_DIALECTS], [test "x$enable_dialects" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DIALECTS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_DIALECTS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DIALECTS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_DIALECTS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_CUSTOM_FSTS], [test "x$enable_custom_fsts" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_CUSTOM_FSTS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_CUSTOM_FSTS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_CUSTOM_FSTS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_CUSTOM_FSTS_FALSE])
m4trace:configure.ac:183: -1- AM_CONDITIONAL([WANT_TTS], [test "x$enable_tts" != xno])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TTS_TRUE$])
m4trace:configure.ac:183: -1- m4_pattern_allow([^WANT_TTS_FALSE$])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TTS_TRUE])
m4trace:configure.ac:183: -1- _AM_SUBST_NOTMAKE([WANT_TTS_FALSE])
m4trace:configure.ac:186: -1- gt_CONFIG_FILES
m4trace:configure.ac:200: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:200: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:203: -1- gt_PRINT_FOOTER
